/*! For license information please see face-landmarks-worker.min.js.LICENSE.txt */
(()=>{var e={741:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=741,e.exports=t},950:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js",function(e){function t(){return R.buffer!=O&&ee(R.buffer),L}function a(){return R.buffer!=O&&ee(R.buffer),P}function s(){return R.buffer!=O&&ee(R.buffer),z}function i(){return R.buffer!=O&&ee(R.buffer),B}function o(){return R.buffer!=O&&ee(R.buffer),W}var u,l,c,d=void 0!==(e=e||{})?e:{};d.ready=new Promise((function(e,t){u=e,l=t})),"undefined"!=typeof process&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var h,p={};for(h in d)d.hasOwnProperty(h)&&(p[h]=d[h]);var f=[],m=function(e,t){throw t},g=!1,y=!1,b=!1,w=!1;g="object"==typeof window,y="function"==typeof importScripts,b="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,w=!g&&!b&&!y;var x=d.ENVIRONMENT_IS_PTHREAD||!1;x&&(O=d.buffer);var v,k,I,S,N,E="";function _(e){return d.locateFile?d.locateFile(e,E):E+e}if(b){var T;E=y?n(980).dirname(E)+"/":"//",v=function(e,t){return S||(S=n(256)),N||(N=n(980)),e=N.normalize(e),S.readFileSync(e,t?null:"utf8")},I=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),f=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof gn))throw e})),process.on("unhandledRejection",we),m=function(e){process.exit(e)},d.inspect=function(){return"[Emscripten Module object]"};try{T=n(958)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=T.Worker}else w?("undefined"!=typeof read&&(v=function(e){return read(e)}),I=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(V("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?f=scriptArgs:void 0!==arguments&&(f=arguments),"function"==typeof quit&&(m=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(g||y)&&(y?E=self.location.href:"undefined"!=typeof document&&document.currentScript&&(E=document.currentScript.src),void 0!==r&&r&&(E=r),E=0!==E.indexOf("blob:")?E.substr(0,E.lastIndexOf("/")+1):"",b?(v=function(e,t){return S||(S=n(256)),N||(N=n(980)),e=N.normalize(e),S.readFileSync(e,t?null:"utf8")},I=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t}):(v=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(I=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),k=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));b&&"undefined"==typeof performance&&(n.g.performance=n(862).performance);var C,A=d.print||console.log.bind(console),$=d.printErr||console.warn.bind(console);for(h in p)p.hasOwnProperty(h)&&(d[h]=p[h]);function F(e){F.shown||(F.shown={}),F.shown[e]||(F.shown[e]=1,$(e))}p=null,d.arguments&&(f=d.arguments),d.thisProgram&&d.thisProgram,d.quit&&(m=d.quit),Atomics.load,Atomics.store,Atomics.compareExchange,d.wasmBinary&&(C=d.wasmBinary);var R,M,D=d.noExitRuntime||!0;"object"!=typeof WebAssembly&&we("no native wasm support detected");var O,L,P,z,B,W,U=!1;function V(e,t){e||we("Assertion failed: "+t)}function G(e){var t=d["_"+e];return V(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function H(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);Y(e,t=dn(n),n)}return t},array:function(e){var t=dn(e.length);return J(e,t),t}},i=G(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=ln()),o[l]=c(r[l])):o[l]=r[l]}var d=i.apply(null,o);return d=function(e){return"string"===t?K(e):"boolean"===t?Boolean(e):e}(d),0!==u&&cn(u),d}function j(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?G(e):function(){return H(e,t,n,arguments)}}function q(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function K(e,t){return e?q(a(),e,t):""}function X(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function Y(e,t,n){return X(e,a(),t,n)}function Z(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function J(e,n){t().set(e,n)}function Q(e,t){return e%t>0&&(e+=t-e%t),e}function ee(e){O=e,d.HEAP8=L=new Int8Array(e),d.HEAP16=new Int16Array(e),d.HEAP32=z=new Int32Array(e),d.HEAPU8=P=new Uint8Array(e),d.HEAPU16=new Uint16Array(e),d.HEAPU32=B=new Uint32Array(e),d.HEAPF32=new Float32Array(e),d.HEAPF64=W=new Float64Array(e)}var te,ne=d.INITIAL_MEMORY||16777216;if(x)R=d.wasmMemory,O=d.buffer;else if(d.wasmMemory)R=d.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:ne/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw $("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");R&&(O=R.buffer),ne=O.byteLength,ee(O);var re=[],ae=[],se=[],ie=[],oe=[];function ue(){if(!x){if(d.preRun)for("function"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)he(d.preRun.shift());$e(re)}}function le(){x||$e(ae)}function ce(){x||$e(se)}function de(){if(!x){if(d.postRun)for("function"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;)pe(d.postRun.shift());$e(oe)}}function he(e){re.unshift(e)}function pe(e){oe.unshift(e)}x||ae.push({func:function(){qt()}});var fe=0,me=null,ge=null;function ye(e){V(!x,"addRunDependency cannot be used in a pthread worker"),fe++,d.monitorRunDependencies&&d.monitorRunDependencies(fe)}function be(e){if(fe--,d.monitorRunDependencies&&d.monitorRunDependencies(fe),0==fe&&(null!==me&&(clearInterval(me),me=null),ge)){var t=ge;ge=null,t()}}function we(e){d.onAbort&&d.onAbort(e),x&&console.error("Pthread aborting at "+(new Error).stack),$(e+=""),U=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function xe(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}d.preloadedImages={},d.preloadedAudios={};var ve="data:application/octet-stream;base64,";function ke(e){return xe(e,ve)}var Ie="file://";function Se(e){return xe(e,Ie)}var Ne="tfjs-backend-wasm-threaded-simd.wasm";function Ee(e){try{if(e==Ne&&C)return new Uint8Array(C);if(I)return I(e);throw"both async and sync fetching of the wasm failed"}catch(e){we(e)}}function _e(){if(!C&&(g||y)){if("function"==typeof fetch&&!Se(Ne))return fetch(Ne,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Ne+"'";return e.arrayBuffer()})).catch((function(){return Ee(Ne)}));if(k)return new Promise((function(e,t){k(Ne,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Ee(Ne)}))}function Te(){var e={a:jt};function t(e,t){var n=e.exports;if(d.asm=n,te=d.asm.I,M=t,!x){var r=Pe.unusedWorkers.length;Pe.unusedWorkers.forEach((function(e){Pe.loadWasmModuleToWorker(e,(function(){--r||be()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return _e().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){$("failed to asynchronously prepare wasm: "+e),we(e)}))}if(x||ye(),d.instantiateWasm)try{return d.instantiateWasm(e,t)}catch(e){return $("Module.instantiateWasm callback failed with error: "+e),!1}return(C||"function"!=typeof WebAssembly.instantiateStreaming||ke(Ne)||Se(Ne)||"function"!=typeof fetch?r(n):fetch(Ne,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return $("wasm streaming compile failed: "+e),$("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l),{}}ke(Ne)||(Ne=_(Ne));var Ce={10664:function(){throw"Canceled!"},10682:function(e,t){setTimeout((function(){rn(e,t)}),0)}};function Ae(){Pe.initRuntime()}function $e(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?te.get(n)():te.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(d)}}var Fe={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Re(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),mn>>2),a=0;if(r==e&&Atomics.compareExchange(s(),mn>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function Me(e){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=Pe.pthreads[e];t.worker.terminate(),Pe.freeThreadData(t),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function De(e){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Pe.pthreads[e].worker.postMessage({cmd:"cancel"})}function Oe(e){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Pe.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;Pe.returnWorkerToPool(n)}}d._emscripten_futex_wake=Re;var Le,Pe={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=0;e<8;++e)Pe.allocateUnusedWorker()},initRuntime:function(){for(var e=Kt(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=Kt(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),un(e,!y,1),tn(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Pe.threadExitHandlers.length>0;)Pe.threadExitHandlers.pop()();x&&Jt()&&Qt()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Pe.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),Re(e+0,2147483647),un(0,0,0)},threadExit:function(e){var t=Jt();t&&(Pe.runExitHandlersAndDeinitThread(t,e),x&&postMessage({cmd:"exit"}))},threadCancel:function(){Pe.runExitHandlersAndDeinitThread(Jt(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Pe.pthreads)(r=Pe.pthreads[e])&&r.worker&&Pe.returnWorkerToPool(r.worker);Pe.pthreads={};for(var t=0;t<Pe.unusedWorkers.length;++t)(n=Pe.unusedWorkers[t]).terminate();for(Pe.unusedWorkers=[],t=0;t<Pe.runningWorkers.length;++t){var n,r=(n=Pe.runningWorkers[t]).pthread;Pe.freeThreadData(r),n.terminate()}Pe.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,Xt(t),Xt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Xt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Pe.runWithoutMainThreadQueuedCalls((function(){delete Pe.pthreads[e.pthread.threadInfoStruct],Pe.unusedWorkers.push(e),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(e),1),Pe.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[fn>>2]=0;try{e()}finally{s()[fn>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Pe.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Jt()){var s=Pe.pthreads[r.targetThread];return s?s.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Pe.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)en();else if("spawnThread"===a)Dt(n.data);else if("cleanupThread"===a)Oe(r.thread);else if("killThread"===a)Me(r.thread);else if("cancelThread"===a)De(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)A("Thread "+r.threadId+": "+r.text);else if("printErr"===a)$("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&Pe.returnWorkerToPool(e);else if("exitProcess"===a)try{bn(r.returnCode)}catch(n){if(n instanceof gn)return;throw n}else"cancelDone"===a?Pe.returnWorkerToPool(e):"objectTransfer"===a?Pe.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):$("worker sent an unknown command "+a);Pe.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){$("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},b&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:d.mainScriptUrlOrBlob||r,wasmMemory:R,wasmModule:M})},allocateUnusedWorker:function(){var e=_("tfjs-backend-wasm-threaded-simd.worker.js");Pe.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Pe.unusedWorkers.length&&(Pe.allocateUnusedWorker(),Pe.loadWasmModuleToWorker(Pe.unusedWorkers[0])),Pe.unusedWorkers.length>0?Pe.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function ze(e,t){hn(e,t),cn(e)}function Be(){return D}function We(e,t){return te.get(e)(t)}function Ue(e,t,n,r){we("Assertion failed: "+K(e)+", at: "+[t?K(t):"unknown filename",n,r?K(r):"unknown function"])}function Ve(e,t){_main(e,t)}function Ge(e){return s()[Yt()>>2]=e,e}function He(e,t){if(x)return Qe(1,1,e,t)}function je(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Pe.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function qe(){we()}function Ke(e,t,n){var r=nt(t,n);return Ce[e].apply(null,r)}function Xe(e,t){}function Ye(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(g){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),mn>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),mn>>2,0),-73;if(0==Atomics.exchange(s(),mn>>2,0))break;if(en(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),mn>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function Ze(e,t,n){a().copyWithin(e,t,t+n)}function Je(){return b?n(578).cpus().length:navigator.hardwareConcurrency}function Qe(e,t){for(var n=arguments.length-2,r=ln(),a=n,s=dn(8*a),i=s>>3,u=0;u<n;u++){var l=arguments[2+u];o()[i+u]=l}var c=sn(e,a,s,t);return cn(r),c}d.establishStackSpace=ze,d.getNoExitRuntime=Be,d.invokeEntryPoint=We,Le=b?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?function(){return performance.now()-d.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var et=[],tt=[];function nt(e,t){var n;for(tt.length=0,t>>=2;n=a()[e++];){var r=n<105;r&&1&t&&t++,tt.push(r?o()[t++>>1]:s()[t]),++t}return tt}function rt(e,t,n){et.length=t;for(var r=n>>3,a=0;a<t;a++)et[a]=o()[r+a];return(e<0?Ce[-e-1]:Ht[e]).apply(null,et)}function at(){return a().length}function st(e){try{return R.grow(e-O.byteLength+65535>>>16),ee(R.buffer),1}catch(e){}}function it(e){var t=at();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),st(Math.min(n,Q(Math.max(e,a),65536))))return!0}return!1}var ot={inEventHandler:0,removeAllEventListeners:function(){for(var e=ot.eventHandlers.length-1;e>=0;--e)ot._removeHandler(e);ot.eventHandlers=[],ot.deferredCalls=[]},registerRemoveEventListeners:function(){ot.removeEventListenersRegistered||(ie.push(ot.removeAllEventListeners),ot.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in ot.deferredCalls){var s=ot.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}ot.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ot.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<ot.deferredCalls.length;++t)ot.deferredCalls[t].targetFunction==e&&(ot.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ot.inEventHandler&&ot.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ot.canPerformEventHandlerRequests())for(var e=0;e<ot.deferredCalls.length;++e){var t=ot.deferredCalls[e];ot.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ot.eventHandlers.length;++n)ot.eventHandlers[n].target!=e||t&&t!=ot.eventHandlers[n].eventTypeString||ot._removeHandler(n--)},_removeHandler:function(e){var t=ot.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ot.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ot.inEventHandler,ot.currentEventHandler=e,ot.runDeferredCalls(),e.handlerFunc(t),ot.runDeferredCalls(),--ot.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ot.eventHandlers.push(e),ot.registerRemoveEventListeners();else for(var n=0;n<ot.eventHandlers.length;++n)ot.eventHandlers[n].target==e.target&&ot.eventHandlers[n].eventTypeString==e.eventTypeString&&ot._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=ln(),o=dn(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,on(0,e,637534208,t,r,o),cn(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Pe.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function ut(e){var t=Z(e)+1,n=Kt(t);return Y(e,n,t),n}function lt(e,t,n,r){var a=ln(),i=dn(12),o=0;t&&(o=ut(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=r,on(0,e,657457152,0,o,i),cn(a)}function ct(e,t,n,r){lt(e,t=t?K(t):"",n,r)}function dt(e){return e>2?K(e):e}var ht=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function pt(e){return e=dt(e),ht[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function ft(e){return pt(e)}function mt(e,t,n){var r=ft(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(ct(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function gt(e,t,n){return x?Qe(2,1,e,t,n):mt(e,t,n)}function yt(e,t,n){return ft(e)?mt(e,t,n):gt(e,t,n)}function bt(e){}function wt(e,t){}function xt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function vt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function kt(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function It(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var St={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){St.lastError||(St.lastError=e)},getNewId:function(e){for(var t=St.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=K(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?St.registerContext(n,t):0},registerContext:function(e,t){var n=Kt(8);s()[n+4>>2]=Jt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),St.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&St.initExtensions(r),n},makeContextCurrent:function(e){return St.currentContext=St.contexts[e],d.ctx=Tt=St.currentContext&&St.currentContext.GLctx,!(e&&!Tt)},getContext:function(e){return St.contexts[e]},deleteContext:function(e){St.currentContext===St.contexts[e]&&(St.currentContext=null),"object"==typeof ot&&ot.removeAllHandlersOnTarget(St.contexts[e].GLctx.canvas),St.contexts[e]&&St.contexts[e].GLctx.canvas&&(St.contexts[e].GLctx.canvas.GLctxObject=void 0),Xt(St.contexts[e].handle),St.contexts[e]=null},initExtensions:function(e){if(e||(e=St.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;xt(t),vt(t),kt(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),It(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=St.programs[e],n=St.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=Tt.getProgramParameter(t,35718),s=0;s<a;++s){var i=Tt.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=Tt.getUniformLocation(t,o);if(u){var l=St.getNewId(St.uniforms);r[o]=[i.size,l],St.uniforms[l]=u;for(var c=1;c<i.size;++c){var d=o+"["+c+"]";u=Tt.getUniformLocation(t,d),l=St.getNewId(St.uniforms),St.uniforms[l]=u}}}}},Nt=["default","low-power","high-performance"];function Et(e,t){var n=t>>2,r=s()[n+6],a={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:Nt[r],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=ft(e);return i?a.explicitSwapControl?0:St.createContext(i,a):0}function _t(e,t){return Et(e,t)}var Tt,Ct={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Ct.buffers[e];0===t||10===t?((1===e?A:$)(q(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Ct.varargs+=4,s()[Ct.varargs-4>>2]},getStr:function(e){return K(e)},get64:function(e,t){return e}};function At(e){return x?Qe(3,1,e):0}function $t(e,t,n,r,a){if(x)return Qe(4,1,e,t,n,r,a)}function Ft(e,t,n,r){if(x)return Qe(5,1,e,t,n,r);for(var i=0,o=0;o<n;o++){for(var u=s()[t+8*o>>2],l=s()[t+(8*o+4)>>2],c=0;c<l;c++)Ct.printChar(e,a()[u+c]);i+=l}return s()[r>>2]=i,0}function Rt(e){var t=Pe.threadExitHandlers.pop();e&&t()}function Mt(e,t){Pe.threadExitHandlers.push((function(){te.get(e)(t)}))}function Dt(e){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Pe.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Pe.runningWorkers.push(t);for(var n=Kt(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=Pe.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+20,e.stackSize),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.stackSize),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached);var l=Zt()+40;Atomics.store(i(),u+43,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Ot(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return $("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return $("pthread_create called with a null thread pointer!"),28;var a=[];if(x&&0===a.length)return an(687865856,e,t,n,r);var o=0,u=0,l=0;t&&-1!=t?(o=s()[t>>2],o+=81920,u=s()[t+8>>2],l=0!==s()[t+12>>2]):o=2097152;var c=0==u;c?u=pn(16,o):V((u-=o)>0);for(var d=Kt(228),h=0;h<57;++h)i()[(d>>2)+h]=0;s()[e>>2]=d,s()[d+12>>2]=d;var p=d+152;s()[p>>2]=p;var f={stackBase:u,stackSize:o,allocatedOwnStack:c,detached:l,startRoutine:n,pthread_ptr:d,arg:r,transferList:a};return x?(f.cmd="spawnThread",postMessage(f,a)):Dt(f),0}function Lt(){if(x){var e=Jt();if(e&&!Atomics.load(i(),e+56>>2)&&2==Atomics.load(i(),e+0>>2))throw"Canceled!"}}function Pt(){b||y||F("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function zt(e,t,n){if(!e)return $("pthread_join attempted on a null thread pointer!"),Fe.ESRCH;if(x&&Jt()==e)return $("PThread "+e+" is attempting to join to itself!"),Fe.EDEADLK;if(!x&&nn()==e)return $("Main thread "+e+" is attempting to join to itself!"),Fe.EDEADLK;if(s()[e+12>>2]!==e)return $("pthread_join attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),Fe.ESRCH;if(Atomics.load(i(),e+64>>2))return $("Attempted to join thread "+e+", which was already detached!"),Fe.EINVAL;for(n&&Pt();;){var r=Atomics.load(i(),e+0>>2);if(1==r){var a=Atomics.load(i(),e+4>>2);return t&&(s()[t>>2]=a),Atomics.store(i(),e+64>>2,1),x?postMessage({cmd:"cleanupThread",thread:e}):Oe(e),0}if(!n)return Fe.EBUSY;Lt(),x||en(),Ye(e+0,r,x?100:1)}}function Bt(e,t){return zt(e,t,!0)}function Wt(e){if(x)return Qe(6,1,e);switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ge(28),-1}x||Pe.initMainThreadBlock();var Ut,Vt,Gt,Ht=[null,He,gt,At,$t,Ft,Wt],jt={e:Ue,r:Ve,x:je,b:qe,y:Ke,j:Xe,d:Ye,c:Re,f:Le,p:Ze,A:Je,u:rt,q:it,v:yt,i:bt,s:wt,w:_t,l:At,n:$t,g:Ft,o:Ae,a:R||d.wasmMemory,z:Rt,k:Mt,h:Ot,m:Bt,t:Wt},qt=(Te(),d.___wasm_call_ctors=function(){return(qt=d.___wasm_call_ctors=d.asm.B).apply(null,arguments)}),Kt=(d._init=function(){return(d._init=d.asm.C).apply(null,arguments)},d._init_with_threads_count=function(){return(d._init_with_threads_count=d.asm.D).apply(null,arguments)},d._get_threads_count=function(){return(d._get_threads_count=d.asm.E).apply(null,arguments)},d._register_tensor=function(){return(d._register_tensor=d.asm.F).apply(null,arguments)},d._dispose_data=function(){return(d._dispose_data=d.asm.G).apply(null,arguments)},d._dispose=function(){return(d._dispose=d.asm.H).apply(null,arguments)},d._Abs=function(){return(d._Abs=d.asm.J).apply(null,arguments)},d._Add=function(){return(d._Add=d.asm.K).apply(null,arguments)},d._AddN=function(){return(d._AddN=d.asm.L).apply(null,arguments)},d._All=function(){return(d._All=d.asm.M).apply(null,arguments)},d._Any=function(){return(d._Any=d.asm.N).apply(null,arguments)},d._ArgMax=function(){return(d._ArgMax=d.asm.O).apply(null,arguments)},d._AvgPool=function(){return(d._AvgPool=d.asm.P).apply(null,arguments)},d._BatchMatMul=function(){return(d._BatchMatMul=d.asm.Q).apply(null,arguments)},d._Ceil=function(){return(d._Ceil=d.asm.R).apply(null,arguments)},d._ClipByValue=function(){return(d._ClipByValue=d.asm.S).apply(null,arguments)},d._Conv2D=function(){return(d._Conv2D=d.asm.T).apply(null,arguments)},d._Conv2DBackpropInput=function(){return(d._Conv2DBackpropInput=d.asm.U).apply(null,arguments)},d._Cos=function(){return(d._Cos=d.asm.V).apply(null,arguments)},d._Cosh=function(){return(d._Cosh=d.asm.W).apply(null,arguments)},d._CropAndResize=function(){return(d._CropAndResize=d.asm.X).apply(null,arguments)},d._Cumsum=function(){return(d._Cumsum=d.asm.Y).apply(null,arguments)},d._DepthToSpace=function(){return(d._DepthToSpace=d.asm.Z).apply(null,arguments)},d._DepthwiseConv2dNative=function(){return(d._DepthwiseConv2dNative=d.asm._).apply(null,arguments)},d._Elu=function(){return(d._Elu=d.asm.$).apply(null,arguments)},d._Equal=function(){return(d._Equal=d.asm.aa).apply(null,arguments)},d._Exp=function(){return(d._Exp=d.asm.ba).apply(null,arguments)},d._FlipLeftRight=function(){return(d._FlipLeftRight=d.asm.ca).apply(null,arguments)},d._Floor=function(){return(d._Floor=d.asm.da).apply(null,arguments)},d._FloorDiv=function(){return(d._FloorDiv=d.asm.ea).apply(null,arguments)},d._FusedBatchNorm=function(){return(d._FusedBatchNorm=d.asm.fa).apply(null,arguments)},d._FusedConv2D=function(){return(d._FusedConv2D=d.asm.ga).apply(null,arguments)},d._FusedDepthwiseConv2D=function(){return(d._FusedDepthwiseConv2D=d.asm.ha).apply(null,arguments)},d._Gather=function(){return(d._Gather=d.asm.ia).apply(null,arguments)},d._GatherNd=function(){return(d._GatherNd=d.asm.ja).apply(null,arguments)},d._Greater=function(){return(d._Greater=d.asm.ka).apply(null,arguments)},d._GreaterEqual=function(){return(d._GreaterEqual=d.asm.la).apply(null,arguments)},d._LeakyRelu=function(){return(d._LeakyRelu=d.asm.ma).apply(null,arguments)},d._Less=function(){return(d._Less=d.asm.na).apply(null,arguments)},d._LessEqual=function(){return(d._LessEqual=d.asm.oa).apply(null,arguments)},d._Log=function(){return(d._Log=d.asm.pa).apply(null,arguments)},d._LogicalAnd=function(){return(d._LogicalAnd=d.asm.qa).apply(null,arguments)},d._Max=function(){return(d._Max=d.asm.ra).apply(null,arguments)},d._MaxPool=function(){return(d._MaxPool=d.asm.sa).apply(null,arguments)},d._Maximum=function(){return(d._Maximum=d.asm.ta).apply(null,arguments)},d._Mean=function(){return(d._Mean=d.asm.ua).apply(null,arguments)},d._Min=function(){return(d._Min=d.asm.va).apply(null,arguments)},d._Minimum=function(){return(d._Minimum=d.asm.wa).apply(null,arguments)},d._MirrorPad=function(){return(d._MirrorPad=d.asm.xa).apply(null,arguments)},d._Multiply=function(){return(d._Multiply=d.asm.ya).apply(null,arguments)},d._Neg=function(){return(d._Neg=d.asm.za).apply(null,arguments)},d._NonMaxSuppressionV3=function(){return(d._NonMaxSuppressionV3=d.asm.Aa).apply(null,arguments)},d._NonMaxSuppressionV4=function(){return(d._NonMaxSuppressionV4=d.asm.Ba).apply(null,arguments)},d._NonMaxSuppressionV5=function(){return(d._NonMaxSuppressionV5=d.asm.Ca).apply(null,arguments)},d._NotEqual=function(){return(d._NotEqual=d.asm.Da).apply(null,arguments)},d._OneHot=function(){return(d._OneHot=d.asm.Ea).apply(null,arguments)},d._PadV2=function(){return(d._PadV2=d.asm.Fa).apply(null,arguments)},d._Pow=function(){return(d._Pow=d.asm.Ga).apply(null,arguments)},d._Prelu=function(){return(d._Prelu=d.asm.Ha).apply(null,arguments)},d._Prod=function(){return(d._Prod=d.asm.Ia).apply(null,arguments)},d._RealDiv=function(){return(d._RealDiv=d.asm.Ja).apply(null,arguments)},d._Relu=function(){return(d._Relu=d.asm.Ka).apply(null,arguments)},d._Relu6=function(){return(d._Relu6=d.asm.La).apply(null,arguments)},d._ResizeBilinear=function(){return(d._ResizeBilinear=d.asm.Ma).apply(null,arguments)},d._Reverse=function(){return(d._Reverse=d.asm.Na).apply(null,arguments)},d._RotateWithOffset=function(){return(d._RotateWithOffset=d.asm.Oa).apply(null,arguments)},d._Round=function(){return(d._Round=d.asm.Pa).apply(null,arguments)},d._Rsqrt=function(){return(d._Rsqrt=d.asm.Qa).apply(null,arguments)},d._ScatterNd=function(){return(d._ScatterNd=d.asm.Ra).apply(null,arguments)},d._SelectV2=function(){return(d._SelectV2=d.asm.Sa).apply(null,arguments)},d._Sigmoid=function(){return(d._Sigmoid=d.asm.Ta).apply(null,arguments)},d._Sin=function(){return(d._Sin=d.asm.Ua).apply(null,arguments)},d._Softmax=function(){return(d._Softmax=d.asm.Va).apply(null,arguments)},d._SparseFillEmptyRows=function(){return(d._SparseFillEmptyRows=d.asm.Wa).apply(null,arguments)},d._SparseReshape=function(){return(d._SparseReshape=d.asm.Xa).apply(null,arguments)},d._SparseSegmentReduction=function(){return(d._SparseSegmentReduction=d.asm.Ya).apply(null,arguments)},d._Sqrt=function(){return(d._Sqrt=d.asm.Za).apply(null,arguments)},d._Square=function(){return(d._Square=d.asm._a).apply(null,arguments)},d._SquaredDifference=function(){return(d._SquaredDifference=d.asm.$a).apply(null,arguments)},d._Step=function(){return(d._Step=d.asm.ab).apply(null,arguments)},d._StridedSlice=function(){return(d._StridedSlice=d.asm.bb).apply(null,arguments)},d._Sub=function(){return(d._Sub=d.asm.cb).apply(null,arguments)},d._Sum=function(){return(d._Sum=d.asm.db).apply(null,arguments)},d._Tan=function(){return(d._Tan=d.asm.eb).apply(null,arguments)},d._Tanh=function(){return(d._Tanh=d.asm.fb).apply(null,arguments)},d._Tile=function(){return(d._Tile=d.asm.gb).apply(null,arguments)},d._TopK=function(){return(d._TopK=d.asm.hb).apply(null,arguments)},d._Transform=function(){return(d._Transform=d.asm.ib).apply(null,arguments)},d._Transpose=function(){return(d._Transpose=d.asm.jb).apply(null,arguments)},d.__FusedMatMul=function(){return(d.__FusedMatMul=d.asm.kb).apply(null,arguments)},d._malloc=function(){return(Kt=d._malloc=d.asm.lb).apply(null,arguments)}),Xt=d._free=function(){return(Xt=d._free=d.asm.mb).apply(null,arguments)},Yt=d.___errno_location=function(){return(Yt=d.___errno_location=d.asm.nb).apply(null,arguments)},Zt=d._emscripten_get_global_libc=function(){return(Zt=d._emscripten_get_global_libc=d.asm.ob).apply(null,arguments)},Jt=d._pthread_self=function(){return(Jt=d._pthread_self=d.asm.pb).apply(null,arguments)},Qt=d.___pthread_tsd_run_dtors=function(){return(Qt=d.___pthread_tsd_run_dtors=d.asm.qb).apply(null,arguments)},en=d._emscripten_main_thread_process_queued_calls=function(){return(en=d._emscripten_main_thread_process_queued_calls=d.asm.rb).apply(null,arguments)},tn=(d._emscripten_current_thread_process_queued_calls=function(){return(d._emscripten_current_thread_process_queued_calls=d.asm.sb).apply(null,arguments)},d._emscripten_register_main_browser_thread_id=function(){return(tn=d._emscripten_register_main_browser_thread_id=d.asm.tb).apply(null,arguments)}),nn=d._emscripten_main_browser_thread_id=function(){return(nn=d._emscripten_main_browser_thread_id=d.asm.ub).apply(null,arguments)},rn=d.__emscripten_do_dispatch_to_thread=function(){return(rn=d.__emscripten_do_dispatch_to_thread=d.asm.vb).apply(null,arguments)},an=d._emscripten_sync_run_in_main_thread_4=function(){return(an=d._emscripten_sync_run_in_main_thread_4=d.asm.wb).apply(null,arguments)},sn=d._emscripten_run_in_main_runtime_thread_js=function(){return(sn=d._emscripten_run_in_main_runtime_thread_js=d.asm.xb).apply(null,arguments)},on=d.__emscripten_call_on_thread=function(){return(on=d.__emscripten_call_on_thread=d.asm.yb).apply(null,arguments)},un=(d._emscripten_tls_init=function(){return(d._emscripten_tls_init=d.asm.zb).apply(null,arguments)},d.__emscripten_thread_init=function(){return(un=d.__emscripten_thread_init=d.asm.Ab).apply(null,arguments)}),ln=d.stackSave=function(){return(ln=d.stackSave=d.asm.Bb).apply(null,arguments)},cn=d.stackRestore=function(){return(cn=d.stackRestore=d.asm.Cb).apply(null,arguments)},dn=d.stackAlloc=function(){return(dn=d.stackAlloc=d.asm.Db).apply(null,arguments)},hn=d._emscripten_stack_set_limits=function(){return(hn=d._emscripten_stack_set_limits=d.asm.Eb).apply(null,arguments)},pn=d._memalign=function(){return(pn=d._memalign=d.asm.Fb).apply(null,arguments)},fn=d.__emscripten_allow_main_runtime_queued_calls=10656,mn=d.__emscripten_main_thread_futex=12292;function gn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function yn(e){if(e=e||f,!(fe>0)){if(x)return u(d),le(),void postMessage({cmd:"loaded"});ue(),fe>0||(d.setStatus?(d.setStatus("Running..."),setTimeout((function(){setTimeout((function(){d.setStatus("")}),1),t()}),1)):t())}function t(){Ut||(Ut=!0,d.calledRun=!0,U||(le(),ce(),u(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),de()))}}function bn(e,t){if(!t||!D||0!==e){if(!t&&x)throw postMessage({cmd:"exitProcess",returnCode:e}),new gn(e);D||(Pe.terminateAllThreads(),d.onExit&&d.onExit(e),U=!0),m(e,new gn(e))}}if(d.cwrap=j,d.PThread=Pe,d.PThread=Pe,d.wasmMemory=R,d.ExitStatus=gn,ge=function e(){Ut||yn(),Ut||(ge=e)},d.run=yn,d.preInit)for("function"==typeof d.preInit&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();if(x&&(D=!1,Pe.initWorker()),yn(),c&&(Vt={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!c.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!c.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Gt=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Gt=e}if(Vt){var wn=Gt._dispose;Gt._dispose=function(){wn(),Vt.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Vt.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=a},235:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js",function(e){var t,a,s,i=void 0!==(e=e||{})?e:{};i.ready=new Promise((function(e,n){t=e,a=n})),"undefined"!=typeof process&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var o,u={};for(o in i)i.hasOwnProperty(o)&&(u[o]=i[o]);var l=[],c=!1,d=!1,h=!1,p=!1;c="object"==typeof window,d="function"==typeof importScripts,h="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,p=!c&&!h&&!d;var f,m,g,y,b,w="";function x(e){return i.locateFile?i.locateFile(e,w):w+e}h?(w=d?n(980).dirname(w)+"/":"//",f=function(e,t){return y||(y=n(256)),b||(b=n(980)),e=b.normalize(e),y.readFileSync(e,t?null:"utf8")},g=function(e){var t=f(e,!0);return t.buffer||(t=new Uint8Array(t)),E(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),l=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof Le))throw e})),process.on("unhandledRejection",ae),i.inspect=function(){return"[Emscripten Module object]"}):p?("undefined"!=typeof read&&(f=function(e){return read(e)}),g=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(E("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?l=scriptArgs:void 0!==arguments&&(l=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(c||d)&&(d?w=self.location.href:"undefined"!=typeof document&&document.currentScript&&(w=document.currentScript.src),r&&(w=r),w=0!==w.indexOf("blob:")?w.substr(0,w.lastIndexOf("/")+1):"",f=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},d&&(g=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var v,k,I=i.print||console.log.bind(console),S=i.printErr||console.warn.bind(console);for(o in u)u.hasOwnProperty(o)&&(i[o]=u[o]);u=null,i.arguments&&(l=i.arguments),i.thisProgram&&i.thisProgram,i.quit&&i.quit,i.wasmBinary&&(v=i.wasmBinary),i.noExitRuntime,"object"!=typeof WebAssembly&&ae("no native wasm support detected");var N=!1;function E(e,t){e||ae("Assertion failed: "+t)}function _(e){var t=i["_"+e];return E(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function T(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);P(e,t=Oe(n),n)}return t},array:function(e){var t=Oe(e.length);return z(e,t),t}},i=_(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=Me()),o[l]=c(r[l])):o[l]=r[l]}var d=i.apply(null,o);return d=function(e){return"string"===t?O(e):"boolean"===t?Boolean(e):e}(d),0!==u&&De(u),d}function C(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?_(e):function(){return T(e,t,n,arguments)}}var A,$,F,R,M="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function D(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&M)return M.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function O(e,t){return e?D(F,e,t):""}function L(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function P(e,t,n){return L(e,F,t,n)}function z(e,t){$.set(e,t)}function B(e,t){return e%t>0&&(e+=t-e%t),e}function W(e){A=e,i.HEAP8=$=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=R=new Int32Array(e),i.HEAPU8=F=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=new Float64Array(e)}i.INITIAL_MEMORY;var U,V=[],G=[],H=[],j=[];function q(){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)Z(i.preRun.shift());fe(V)}function K(){fe(G)}function X(){fe(H)}function Y(){if(i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;)J(i.postRun.shift());fe(j)}function Z(e){V.unshift(e)}function J(e){j.unshift(e)}G.push({func:function(){Fe()}});var Q=0,ee=null,te=null;function ne(e){Q++,i.monitorRunDependencies&&i.monitorRunDependencies(Q)}function re(e){if(Q--,i.monitorRunDependencies&&i.monitorRunDependencies(Q),0==Q&&(null!==ee&&(clearInterval(ee),ee=null),te)){var t=te;te=null,t()}}function ae(e){i.onAbort&&i.onAbort(e),S(e+=""),N=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}function se(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}i.preloadedImages={},i.preloadedAudios={};var ie="data:application/octet-stream;base64,";function oe(e){return se(e,ie)}var ue="file://";function le(e){return se(e,ue)}var ce="tfjs-backend-wasm.wasm";function de(e){try{if(e==ce&&v)return new Uint8Array(v);if(g)return g(e);throw"both async and sync fetching of the wasm failed"}catch(e){ae(e)}}function he(){if(!v&&(c||d)){if("function"==typeof fetch&&!le(ce))return fetch(ce,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ce+"'";return e.arrayBuffer()})).catch((function(){return de(ce)}));if(m)return new Promise((function(e,t){m(ce,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return de(ce)}))}function pe(){var e={a:$e};function t(e,t){var n=e.exports;i.asm=n,W((k=i.asm.j).buffer),U=i.asm.r,re()}function n(e){t(e.instance)}function r(t){return he().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){S("failed to asynchronously prepare wasm: "+e),ae(e)}))}if(ne(),i.instantiateWasm)try{return i.instantiateWasm(e,t)}catch(e){return S("Module.instantiateWasm callback failed with error: "+e),!1}return(v||"function"!=typeof WebAssembly.instantiateStreaming||oe(ce)||le(ce)||"function"!=typeof fetch?r(n):fetch(ce,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return S("wasm streaming compile failed: "+e),S("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(a),{}}function fe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?U.get(n)():U.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(i)}}function me(){ae()}function ge(e,t,n){F.copyWithin(e,t,t+n)}function ye(){return F.length}function be(e){try{return k.grow(e-A.byteLength+65535>>>16),W(k.buffer),1}catch(e){}}function we(e){var t=ye(),n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),be(Math.min(n,B(Math.max(e,a),65536))))return!0}return!1}oe(ce)||(ce=x(ce));var xe={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=xe.buffers[e];0===t||10===t?((1===e?I:S)(D(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return xe.varargs+=4,R[xe.varargs-4>>2]},getStr:function(e){return O(e)},get64:function(e,t){return e}};function ve(e){return 0}function ke(e,t,n,r,a){}function Ie(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=R[t+8*s>>2],o=R[t+(8*s+4)>>2],u=0;u<o;u++)xe.printChar(e,F[i+u]);a+=o}return R[r>>2]=a,0}function Se(){return 6}function Ne(){return 28}function Ee(e){return R[Re()>>2]=e,e}function _e(e){switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ee(28),-1}var Te,Ce,Ae,$e={a:me,d:ge,e:we,f:ve,c:ke,b:Ie,h:Se,g:Ne,i:_e},Fe=(pe(),i.___wasm_call_ctors=function(){return(Fe=i.___wasm_call_ctors=i.asm.k).apply(null,arguments)}),Re=(i._init=function(){return(i._init=i.asm.l).apply(null,arguments)},i._init_with_threads_count=function(){return(i._init_with_threads_count=i.asm.m).apply(null,arguments)},i._get_threads_count=function(){return(i._get_threads_count=i.asm.n).apply(null,arguments)},i._register_tensor=function(){return(i._register_tensor=i.asm.o).apply(null,arguments)},i._dispose_data=function(){return(i._dispose_data=i.asm.p).apply(null,arguments)},i._dispose=function(){return(i._dispose=i.asm.q).apply(null,arguments)},i._Abs=function(){return(i._Abs=i.asm.s).apply(null,arguments)},i._Add=function(){return(i._Add=i.asm.t).apply(null,arguments)},i._AddN=function(){return(i._AddN=i.asm.u).apply(null,arguments)},i._All=function(){return(i._All=i.asm.v).apply(null,arguments)},i._Any=function(){return(i._Any=i.asm.w).apply(null,arguments)},i._ArgMax=function(){return(i._ArgMax=i.asm.x).apply(null,arguments)},i._AvgPool=function(){return(i._AvgPool=i.asm.y).apply(null,arguments)},i._BatchMatMul=function(){return(i._BatchMatMul=i.asm.z).apply(null,arguments)},i._Ceil=function(){return(i._Ceil=i.asm.A).apply(null,arguments)},i._ClipByValue=function(){return(i._ClipByValue=i.asm.B).apply(null,arguments)},i._Conv2D=function(){return(i._Conv2D=i.asm.C).apply(null,arguments)},i._Conv2DBackpropInput=function(){return(i._Conv2DBackpropInput=i.asm.D).apply(null,arguments)},i._Cos=function(){return(i._Cos=i.asm.E).apply(null,arguments)},i._Cosh=function(){return(i._Cosh=i.asm.F).apply(null,arguments)},i._CropAndResize=function(){return(i._CropAndResize=i.asm.G).apply(null,arguments)},i._Cumsum=function(){return(i._Cumsum=i.asm.H).apply(null,arguments)},i._DepthToSpace=function(){return(i._DepthToSpace=i.asm.I).apply(null,arguments)},i._DepthwiseConv2dNative=function(){return(i._DepthwiseConv2dNative=i.asm.J).apply(null,arguments)},i._Elu=function(){return(i._Elu=i.asm.K).apply(null,arguments)},i._Equal=function(){return(i._Equal=i.asm.L).apply(null,arguments)},i._Exp=function(){return(i._Exp=i.asm.M).apply(null,arguments)},i._FlipLeftRight=function(){return(i._FlipLeftRight=i.asm.N).apply(null,arguments)},i._Floor=function(){return(i._Floor=i.asm.O).apply(null,arguments)},i._FloorDiv=function(){return(i._FloorDiv=i.asm.P).apply(null,arguments)},i._FusedBatchNorm=function(){return(i._FusedBatchNorm=i.asm.Q).apply(null,arguments)},i._FusedConv2D=function(){return(i._FusedConv2D=i.asm.R).apply(null,arguments)},i._FusedDepthwiseConv2D=function(){return(i._FusedDepthwiseConv2D=i.asm.S).apply(null,arguments)},i._Gather=function(){return(i._Gather=i.asm.T).apply(null,arguments)},i._GatherNd=function(){return(i._GatherNd=i.asm.U).apply(null,arguments)},i._Greater=function(){return(i._Greater=i.asm.V).apply(null,arguments)},i._GreaterEqual=function(){return(i._GreaterEqual=i.asm.W).apply(null,arguments)},i._LeakyRelu=function(){return(i._LeakyRelu=i.asm.X).apply(null,arguments)},i._Less=function(){return(i._Less=i.asm.Y).apply(null,arguments)},i._LessEqual=function(){return(i._LessEqual=i.asm.Z).apply(null,arguments)},i._Log=function(){return(i._Log=i.asm._).apply(null,arguments)},i._LogicalAnd=function(){return(i._LogicalAnd=i.asm.$).apply(null,arguments)},i._Max=function(){return(i._Max=i.asm.aa).apply(null,arguments)},i._MaxPool=function(){return(i._MaxPool=i.asm.ba).apply(null,arguments)},i._Maximum=function(){return(i._Maximum=i.asm.ca).apply(null,arguments)},i._Mean=function(){return(i._Mean=i.asm.da).apply(null,arguments)},i._Min=function(){return(i._Min=i.asm.ea).apply(null,arguments)},i._Minimum=function(){return(i._Minimum=i.asm.fa).apply(null,arguments)},i._MirrorPad=function(){return(i._MirrorPad=i.asm.ga).apply(null,arguments)},i._Multiply=function(){return(i._Multiply=i.asm.ha).apply(null,arguments)},i._Neg=function(){return(i._Neg=i.asm.ia).apply(null,arguments)},i._NonMaxSuppressionV3=function(){return(i._NonMaxSuppressionV3=i.asm.ja).apply(null,arguments)},i._NonMaxSuppressionV4=function(){return(i._NonMaxSuppressionV4=i.asm.ka).apply(null,arguments)},i._NonMaxSuppressionV5=function(){return(i._NonMaxSuppressionV5=i.asm.la).apply(null,arguments)},i._NotEqual=function(){return(i._NotEqual=i.asm.ma).apply(null,arguments)},i._OneHot=function(){return(i._OneHot=i.asm.na).apply(null,arguments)},i._PadV2=function(){return(i._PadV2=i.asm.oa).apply(null,arguments)},i._Pow=function(){return(i._Pow=i.asm.pa).apply(null,arguments)},i._Prelu=function(){return(i._Prelu=i.asm.qa).apply(null,arguments)},i._Prod=function(){return(i._Prod=i.asm.ra).apply(null,arguments)},i._RealDiv=function(){return(i._RealDiv=i.asm.sa).apply(null,arguments)},i._Relu=function(){return(i._Relu=i.asm.ta).apply(null,arguments)},i._Relu6=function(){return(i._Relu6=i.asm.ua).apply(null,arguments)},i._ResizeBilinear=function(){return(i._ResizeBilinear=i.asm.va).apply(null,arguments)},i._Reverse=function(){return(i._Reverse=i.asm.wa).apply(null,arguments)},i._RotateWithOffset=function(){return(i._RotateWithOffset=i.asm.xa).apply(null,arguments)},i._Round=function(){return(i._Round=i.asm.ya).apply(null,arguments)},i._Rsqrt=function(){return(i._Rsqrt=i.asm.za).apply(null,arguments)},i._ScatterNd=function(){return(i._ScatterNd=i.asm.Aa).apply(null,arguments)},i._SelectV2=function(){return(i._SelectV2=i.asm.Ba).apply(null,arguments)},i._Sigmoid=function(){return(i._Sigmoid=i.asm.Ca).apply(null,arguments)},i._Sin=function(){return(i._Sin=i.asm.Da).apply(null,arguments)},i._Softmax=function(){return(i._Softmax=i.asm.Ea).apply(null,arguments)},i._SparseFillEmptyRows=function(){return(i._SparseFillEmptyRows=i.asm.Fa).apply(null,arguments)},i._SparseReshape=function(){return(i._SparseReshape=i.asm.Ga).apply(null,arguments)},i._SparseSegmentReduction=function(){return(i._SparseSegmentReduction=i.asm.Ha).apply(null,arguments)},i._Sqrt=function(){return(i._Sqrt=i.asm.Ia).apply(null,arguments)},i._Square=function(){return(i._Square=i.asm.Ja).apply(null,arguments)},i._SquaredDifference=function(){return(i._SquaredDifference=i.asm.Ka).apply(null,arguments)},i._Step=function(){return(i._Step=i.asm.La).apply(null,arguments)},i._StridedSlice=function(){return(i._StridedSlice=i.asm.Ma).apply(null,arguments)},i._Sub=function(){return(i._Sub=i.asm.Na).apply(null,arguments)},i._Sum=function(){return(i._Sum=i.asm.Oa).apply(null,arguments)},i._Tan=function(){return(i._Tan=i.asm.Pa).apply(null,arguments)},i._Tanh=function(){return(i._Tanh=i.asm.Qa).apply(null,arguments)},i._Tile=function(){return(i._Tile=i.asm.Ra).apply(null,arguments)},i._TopK=function(){return(i._TopK=i.asm.Sa).apply(null,arguments)},i._Transform=function(){return(i._Transform=i.asm.Ta).apply(null,arguments)},i._Transpose=function(){return(i._Transpose=i.asm.Ua).apply(null,arguments)},i.__FusedMatMul=function(){return(i.__FusedMatMul=i.asm.Va).apply(null,arguments)},i._malloc=function(){return(i._malloc=i.asm.Wa).apply(null,arguments)},i._free=function(){return(i._free=i.asm.Xa).apply(null,arguments)},i.___errno_location=function(){return(Re=i.___errno_location=i.asm.Ya).apply(null,arguments)}),Me=i.stackSave=function(){return(Me=i.stackSave=i.asm.Za).apply(null,arguments)},De=i.stackRestore=function(){return(De=i.stackRestore=i.asm._a).apply(null,arguments)},Oe=i.stackAlloc=function(){return(Oe=i.stackAlloc=i.asm.$a).apply(null,arguments)};function Le(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Pe(e){function n(){Te||(Te=!0,i.calledRun=!0,N||(K(),X(),t(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),Y()))}e=e||l,Q>0||(q(),Q>0||(i.setStatus?(i.setStatus("Running..."),setTimeout((function(){setTimeout((function(){i.setStatus("")}),1),n()}),1)):n()))}if(i.cwrap=C,te=function e(){Te||Pe(),Te||(te=e)},i.run=Pe,i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();if(Pe(),s&&(Ce={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!s.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!s.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)Ae=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");Ae=WasmBackendModuleThreadedSimd}if(Ce){var ze=Ae._dispose;Ae._dispose=function(){ze(),Ce.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Ce.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=a},126:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=o(l(n,8)),s=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),d=parseInt(e.substring(i,i+u),n);if(u<8){var h=o(l(n,u));s=s.mul(h).add(o(d))}else s=(s=s.mul(a)).add(o(d))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=d;var h=4294967296,p=h*h,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var w=i(1,!0);n.UONE=w;var x=i(-1);n.NEG_ONE=x;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(l(e,6),this.unsigned),s=this,i="";;){var u=s.div(a),c=(s.sub(u.mul(a)).toInt()>>>0).toString(e);if((s=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,h=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,h+=(p+=a+l)>>>16,c+=(h+=n+o)>>>16,c+=t+i,u((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=d(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,w=0;return b+=(w+=i*p)>>>16,y+=(b+=s*p)>>>16,b&=65535,y+=(b+=i*h)>>>16,f+=(y+=a*p)>>>16,y&=65535,f+=(y+=s*h)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*p+a*h+s*c+i*l,u((b&=65535)<<16|(w&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return w;s=y}else{if(this.eq(I))return e.eq(b)||e.eq(x)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),h=o(n),p=h.mul(e);p.isNegative()||p.gt(a);)p=(h=o(n-=c,this.unsigned)).mul(e);h.isZero()&&(h=b),s=s.add(h),a=a.sub(p)}return s},S.div=S.divide,S.modulo=function(e){return r(e)||(e=d(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},38:()=>{function e(){}function t(){}self.useWasm=!1,self.OffscreenCanvas||(self.useWasm=!0,self.OffscreenCanvas=class{constructor(){}}),self.OffscreenCanvasRenderingContext2D||(self.OffscreenCanvasRenderingContext2D=class{constructor(){}}),self.Canvas=self.HTMLCanvasElement=OffscreenCanvas,self.CanvasRenderingContext2D=OffscreenCanvasRenderingContext2D,self.Image=e,self.Video=t;class n extends EventTarget{}if(self.document=new n,self.window=self.Window=self,self.localStorage=new function(){let e={};this.clear=function(){return e={}},this.getItem=function(t){return e.hasOwnProperty(t)?e[t]:void 0},this.removeItem=function(t){return delete e[t]},this.setItem=function(t,n){return e[t]=String(n)}},document.createElement=function(e){if("canvas"===e){let e=new Canvas(1,1);return e.localName="canvas",e.nodeName="CANVAS",e.tagName="CANVAS",e.nodeType=1,e.innerHTML="",e.remove=()=>{console.log("nope")},e}console.log("arg",e)},document.location=self.location,"undefined"==typeof document&&console.warn("Check failed: document"),"undefined"==typeof HTMLCanvasElement&&console.warn("Check failed: HTMLCanvasElement"),"undefined"==typeof ImageData&&console.warn("Check failed: ImageData"),"undefined"==typeof CanvasRenderingContext2D&&console.warn("Check failed: CanvasRenderingContext2D"),self.window=window,self.document=document,self.HTMLImageElement=e,self.HTMLVideoElement=t,"object"!=typeof window||"undefined"==typeof document||"undefined"==typeof HTMLCanvasElement||"undefined"==typeof ImageData||"undefined"==typeof CanvasRenderingContext2D)throw new Error("Failed to monkey patch for face-api, face-api will fail")},256:()=>{},578:()=>{},980:()=>{},862:()=>{},958:()=>{},410:()=>{},628:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";n(38);class e{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class t{refCount(e){return r("refCount")}incRef(e){return r("incRef")}timerAvailable(){return!0}time(e){return r("time")}read(e){return r("read")}readSync(e){return r("readSync")}readToGPU(e,t){return r("readToGPU")}numDataIds(){return r("numDataIds")}disposeData(e,t){return r("disposeData")}write(e,t,n){return r("write")}move(e,t,n,a,s){return r("move")}memory(){return r("memory")}floatPrecision(){return r("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return r("dispose")}}function r(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function a(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function s(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";a(l(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function i(e){a(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),Array.isArray(e)||p(e)&&!n)for(let r=0;r<e.length;++r)o(e[r],t,n);else t.push(e);return t}function u(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function l(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function c(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function d(e,t){const n=t.length;return a((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),a(e.every((e=>e%1==0)),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function h(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function p(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function f(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function m(e){return"string"==typeof e||e instanceof String}function g(e){return Array.isArray(e)?g(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":"number"==typeof e?"float32":m(e)?"string":"boolean"==typeof e?"bool":"float32"}function y(e){return!!(e&&e.constructor&&e.call&&e.apply)}function b(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function w(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=w(e+t*o,i,n,r)}return a}function x(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return w(0,e,t,n)}function v(e,t){const n=k(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function k(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function I(e){e.forEach((t=>{a(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function S(e){return e&&e.then&&"function"==typeof e.then}class N{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=E,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(T().getBool("IS_TEST")||T().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];T().getBool("IS_TEST")||T().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(S(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function E(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return _(t,r[0],r[1]),r.join("=")})),t}function _(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function T(){return A}let C,A=null;function $(){if(null==C){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}C=e}return C}function F(e,t){const n=function(){const e=$();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const R="Add",M="AddN",D="ArgMax",O="AvgPool",L="BatchMatMul",P="Cast",z="ClipByValue",B="Concat",W="Conv2D",U="Conv2DBackpropInput",V="Cumsum",G="CropAndResize",H="DepthToSpace",j="DepthwiseConv2dNative",q="RealDiv",K="ExpandDims",X="Fill",Y="FlipLeftRight",Z="FloorDiv",J="FusedBatchNorm",Q="GatherNd",ee="Greater",te="GreaterEqual",ne="Identity",re="LeakyRelu",ae="LessEqual",se="LogicalAnd",ie="Max",oe="MaxPool",ue="Mean",le="Min",ce="Minimum",de="MirrorPad",he="Multiply",pe="NotEqual",fe="NonMaxSuppressionV3",me="NonMaxSuppressionV4",ge="NonMaxSuppressionV5",ye="OneHot",be="Pack",we="PadV2",xe="Prelu",ve="Prod",ke="Range",Ie="Relu",Se="Reshape",Ne="ResizeNearestNeighbor",Ee="ResizeBilinear",_e="Relu6",Te="Reverse",Ce="Round",Ae="ScatterNd",$e="Select",Fe="Slice",Re="Sigmoid",Me="Sqrt",De="Sum",Oe="SplitV",Le="Softmax",Pe="SparseFillEmptyRows",ze="SparseReshape",Be="SparseSegmentMean",We="SparseSegmentSum",Ue="SquaredDifference",Ve="StridedSlice",Ge="StringSplit",He="Tile",je="TopK",qe="Transform",Ke="Transpose",Xe="Unpack",Ye="ZerosLike",Ze="Step",Je="RotateWithOffset",Qe="_FusedMatMul",et="FusedConv2D",tt="FusedDepthwiseConv2D";function nt(){T().getBool("IS_TEST")||T().getBool("PROD")||console.warn(...arguments)}const rt=F("kernelRegistry",(()=>new Map)),at=F("gradRegistry",(()=>new Map));function st(e,t){const n=lt(e,t);return rt.get(n)}function it(e){return at.get(e)}function ot(e){const t=rt.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function ut(e){const{kernelName:t,backendName:n}=e,r=lt(t,n);rt.has(r)&&nt(`The kernel '${t}' for backend '${n}' is already registered`),rt.set(r,e)}function lt(e,t){return`${t}_${e}`}var ct=n(126);const dt=n.n(ct)()||ct;function ht(e){return dt.fromString(e,!0,16)}function pt(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=o(e)),T().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function ft(){return T().platform.now()}function mt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",T().platform.encode(e,t)}function gt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",T().platform.decode(e,t)}ht("c3a5c85c97cb3127"),ht("b492b66fbe98f273"),ht("9ae16a3b2f90404f");class yt{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new wt)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=ft();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:ft()-i})}if(T().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{bt(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function bt(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class wt{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?c(`${r}ms`,9):r.error,o=c(e,25),u=t.rank,l=t.size,d=c(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${d}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function xt(e,t,n,r){const a=b(t),s=function(e,t,n,r){const a=u(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?St(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],vt(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=It(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function vt(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:m(e)?`'${e}'`:"bool"===n?kt(e):parseFloat(e.toFixed(7)).toString(),c(r,t)}function kt(e){return 0===e?"false":"true"}function It(e,t,n,r,a){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[vt(St(e)[0],0,n)]:"bool"===n?[kt(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=St(r),s=St(s)),["["+r.map(((e,t)=>vt(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>vt(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?St(e):Array.from(e)).map(((e,t)=>vt(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),d=r[0]*i,h=[];if(o>20){for(let t=0;t<3;t++){const r=t*d,s=r+d;h.push(...It(e.slice(r,s),l,n,c,a,!1))}h.push("...");for(let t=o-3;t<o;t++){const r=t*d,s=r+d;h.push(...It(e.slice(r,s),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*d,s=r+d;h.push(...It(e.slice(r,s),l,n,c,a,t===o-1))}const p=2===u?",":"";h[0]="["+h[0]+p;for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":f),h}function St(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Nt{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=u(e),null!=n){const e=n.length;a(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||h(t,this.size),this.strides=b(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),a(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const s=this.locToIndex(n);this.values[s]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(const e of t){if(e<0||e>=this.shape[r]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let a=t[t.length-1];for(let e=0;e<t.length-1;++e)a+=this.strides[e]*t[e];return this.values[a]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Et().makeTensor(this.values,this.shape,this.dtype)}}let Et=null,_t=null,Tt=null;class Ct{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=u(e),this.strides=b(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return _t.buffer(this.shape,this.dtype,e)}bufferSync(){return _t.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return x(this.shape,e,"complex64"===this.dtype)}arraySync(){return x(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Et().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>gt(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Et().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Et().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>gt(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Et().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Et().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return _t.print(this,e)}clone(){return this.throwIfDisposed(),_t.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return xt(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),_t.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),Et().makeVariable(this,e,t,n)}}Object.defineProperty(Ct,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),F("Tensor",(()=>Ct));class At extends Ct{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!l(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Et().disposeTensor(this),this.dataId=e.dataId,Et().incRef(this,null)}dispose(){Et().disposeVariable(this),this.isDisposedInternal=!0}}var $t,Ft,Rt,Mt,Dt;Object.defineProperty(At,Symbol.hasInstance,{value:e=>e instanceof Ct&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}($t||($t={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Ft||(Ft={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Rt||(Rt={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Mt||(Mt={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Dt||(Dt={}));const Ot={float32:Mt,int32:Ft,bool:Rt,complex64:Dt};function Lt(e,t){if(e.dtype===t.dtype)return[e,t];const n=function(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ot[e][t]}(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Pt(e){const t=[];return zt(e,t,new Set),t}function zt(e,t,n){if(null==e)return;if(e instanceof Ct)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),zt(r,t,n))}}function Bt(e){return null!=e.kernelName}class Wt{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ut{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Wt}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(nt(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new yt(this.backendInstance),!0}setupRegisteredKernels(){ot(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){ot(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const n=this.registryFactory[e];if(null==n)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=n.factory();if(!r||r instanceof t||"function"!=typeof r.then)return this.registry[e]=r,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,n=r.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,nt(`Initialization of backend ${e} failed`),nt(n.stack||n.message)),!1)));return this.pendingBackendInit=n,{success:n,asyncInit:!0}}}catch(t){return nt(`Initialization of backend ${e} failed`),nt(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ut.nextTensorId++}nextVariableId(){return Ut.nextVariableId++}clone(e){const t=Gt.runKernel(ne,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Gt.runKernel(P,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==st(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Bt(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Bt(e)){const{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;const l=st(t,this.backendName);a(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});const a=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const o=a.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,s,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:c,attrs:d}=e,h=Bt(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,c,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=o()})),r&&this.addTapeNode(l,c,t,h,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map((e=>null!=c[e]?c[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=it(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(a(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const o=n.filter(((e,t)=>s[t]));return i.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&m(e[0])&&(a=e.map((e=>mt(e))));const s=r.write(a,t,n),i=new Ct(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new Ct(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new At(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*f(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof At||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*f(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=it(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=k(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Pt(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(a(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));a(s instanceof Ct,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=v(u(e),"float32");return Gt.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!l(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,i,(e=>this.tidy(e)),Ht);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){var t=this;return a(y(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];let i;a(r.every((e=>e instanceof Ct)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};r.forEach(((e,t)=>{o[t]=e}));const u=(t,n)=>(i=e(...r,n),a(i.value instanceof Ct,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),a(y(i.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),i.value),l=(e,t)=>{const n=i.gradFunc(e,t),s=Array.isArray(n)?n:[n];a(s.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),a(s.every((e=>e instanceof Ct)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((e,t)=>{o[t]=()=>e})),o};return t.runKernelFunc({forwardFunc:u,backwardsFunc:l,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=ft(),n=await this.backend.time(e);return n.wallMs=ft()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Wt;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Vt(){const e=$();if(null==e._tfengine){const t=new N(e);e._tfengine=new Ut(t)}return function(e){A=e}(e._tfengine.ENV),Et=()=>e._tfengine,e._tfengine}Ut.nextTensorId=0,Ut.nextVariableId=0;const Gt=Vt();function Ht(e,t){const n={a:e,b:t};return Gt.runKernel(R,n)}const jt=T();jt.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),jt.registerFlag("IS_BROWSER",(()=>"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope)),jt.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),jt.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),jt.registerFlag("PROD",(()=>!1)),jt.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>jt.getBool("DEBUG"))),jt.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),jt.registerFlag("IS_TEST",(()=>!1)),jt.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),jt.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const qt="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Kt(e){return qt?Buffer.byteLength(e):new Blob([e]).size}function Xt(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Yt(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Zt(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Kt(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Kt(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class Jt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Jt.instance&&(Jt.instance=new Jt),Jt.instance}static registerSaveRouter(e){Jt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Jt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Jt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Jt.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Jt.getInstance().loadRouters:Jt.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const Qt="tensorflowjs",en="models_store",tn="model_info_store";function nn(){if(!T().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function rn(e){const t=e.result;t.createObjectStore(en,{keyPath:"modelPath"}),t.createObjectStore(tn,{keyPath:"modelPath"})}class an{constructor(e){if(this.indexedDB=nn(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Qt,1);r.onupgradeneeded=()=>rn(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(en,"readonly"),r=t.objectStore(en).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Zt(t),s=a.transaction(tn,"readwrite");let i=s.objectStore(tn);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(en,"readwrite");const o=u.objectStore(en).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(tn);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}an.URL_SCHEME="indexeddb://";const sn=e=>{return T().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(an.URL_SCHEME)?(t=e.slice(an.URL_SCHEME.length),new an(t)):null;var t};Jt.registerSaveRouter(sn),Jt.registerLoadRouter(sn);class on{constructor(){this.indexedDB=nn()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Qt,1);n.onupgradeneeded=()=>rn(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(tn,"readonly"),s=a.objectStore(tn).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(an.URL_SCHEME)?t.slice(an.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Qt,1);r.onupgradeneeded=()=>rn(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(tn,"readwrite"),i=s.objectStore(tn),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(en,"readwrite");const r=u.objectStore(en).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const un="/",ln="tensorflowjs_models",cn="info",dn="model_topology",hn="weight_specs",pn="weight_data",fn="model_metadata";function mn(e){return{info:[ln,e,cn].join(un),topology:[ln,e,dn].join(un),weightSpecs:[ln,e,hn].join(un),weightData:[ln,e,pn].join(un),modelMetadata:[ln,e,fn].join(un)}}function gn(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function yn(e){const t=e.split(un);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(un)}class bn{constructor(e){if(!T().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=mn(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Zt(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(qt)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw gn(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(qt){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}bn.URL_SCHEME="localstorage://";const wn=e=>{return T().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(bn.URL_SCHEME)?(t=e.slice(bn.URL_SCHEME.length),new bn(t)):null;var t};Jt.registerSaveRouter(wn),Jt.registerLoadRouter(wn);class xn{constructor(){a(T().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),a("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ln+un,n=un+cn;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[yn(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=mn(e=(t=e).startsWith(bn.URL_SCHEME)?t.slice(bn.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return gn(n),r}}class vn{constructor(){this.managers={}}static getInstance(){return null==vn.instance&&(vn.instance=new vn),vn.instance}static registerManager(e,t){a(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),a(e.length>0,(()=>"scheme must not be an empty string."));const n=vn.getInstance();a(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class kn{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(T().get("IS_BROWSER")){T().setPlatform("browser",new kn);try{vn.registerManager(bn.URL_SCHEME,new xn)}catch(e){}try{vn.registerManager(an.URL_SCHEME,new on)}catch(e){}}let In;function Sn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",I(e),new Nt(e,t,n)}function Nn(e,t){let n=e;if(p(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||p(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&T().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&En(e,r,[]),r}function En(e,t,n){if(n=n||[],!Array.isArray(e)&&!p(e))return void a(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));a(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),a(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)En(e[t],r,n.concat(t))}function _n(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Tn(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof Ct)return _n(r,e.dtype,t,n),e;let a=g(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),_n(r,a,t,n),null==e||!p(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Nn(e,a);p(e)||Array.isArray(e)||(e=[e]);const i=!0,u="string"!==a?pt(e,a):o(e,[],i);return Gt.makeTensor(u,s,a)}function Cn(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const a=e;return a.map(((e,a)=>Tn(e,`${t}[${a}]`,n,r)))}function An(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=function(){Gt.startScope(n);try{const e=r(...arguments);return S(e)&&console.error("Cannot return a Promise inside of tidy."),Gt.endScope(e),e}catch(e){throw Gt.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}T().get("IS_NODE")&&T().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=T().global.fetch?T().global.fetch(e,t):(null==In&&(In=n(410)),In(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const $n=An({cast_:function(e,t){const n=Tn(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return Gt.runKernel(P,r,a)}}),Fn=An({clone_:function(e){const t={x:Tn(e,"x","clone","string_or_numeric")};return Gt.runKernel(ne,t)}});function Rn(e){return new Promise((e=>setTimeout(e))).then(e)}Vt(),_t={buffer:Sn,cast:$n,clone:Fn,print:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}};class Mn{constructor(e){if(!T().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Mn.URL_SCHEME)&&(e=e.slice(Mn.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Yt(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Rn((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Rn((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Zt(e)}}}}function Dn(e,t,n,r){!function(e){a(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){a(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),a(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),a(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function On(e,t){null==t&&(t={});const n=null==t.fetchFunc?T().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Dn(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Dn(a,t.onProgress,.5,1)}Mn.URL_SCHEME="downloads://",Jt.registerSaveRouter((e=>T().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Mn.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Mn(e)}(e.slice(Mn.URL_SCHEME.length)):null));class Ln{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(a("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=T().platform.fetch,a(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&a(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Yt(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Zt(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Xt(await On(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Pn(e){return null!=e.match(Ln.URL_SCHEME_REGEX)}Ln.URL_SCHEME_REGEX=/^https?:\/\//;const zn=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Pn(e))):Pn(e),n)return function(e,t){return new Ln(e,t)}(e,t)}return null};function Bn(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}function Wn(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Un(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Vn(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}Jt.registerSaveRouter(zn),Jt.registerLoadRouter(zn);const Gn=An({complex_:function(e,t){const n=Tn(e,"real","complex"),r=Tn(t,"imag","complex");s(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return Gt.runKernel("Complex",a)}}),Hn=An({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;a(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Cn(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Fn(n[0]);const r=n,s={axis:t};return Gt.runKernel(B,r,s)}}),jn=An({imag_:function(e){const t={input:Tn(e,"input","imag")};return Gt.runKernel("Imag",t)}}),qn=An({real_:function(e){const t={input:Tn(e,"input","real")};return Gt.runKernel("Real",t)}}),Kn=An({reshape_:function(e,t){const n={x:Tn(e,"x","reshape","string_or_numeric")},r={shape:t};return Gt.runKernel(Se,n,r)}}),Xn=An({slice_:function(e,t,n){const r=Tn(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return Gt.runKernel(Fe,a,s)}}),Yn=An({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=Tn(e,"x","split"),a={x:r},s={numOrSizeSplits:t,axis:n};return Gt.runKernel(Oe,a,s)}});function Zn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){const t=Zn(e,"float32"),n=Zn(e,"float32");return Gn(t,n)}const n=k(u(e),t);return Gt.makeTensor(n,e,t)}const Jn=An({zerosLike_:function(e){const t={x:Tn(e,"x","zerosLike")};return Gt.runKernel(Ye,t)}}),Qn=An({fft_:function(e){a("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Gt.runKernel("FFT",t)}}),er=An({rfft_:function(e,t){a("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=Xn(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Hn([e,Zn(r)],e.shape.length-1),n=t}else s=e;const i=Jn(s),o=Kn(Gn(s,i),[r,n]),u=Qn(o),l=Math.floor(n/2)+1,c=qn(u),d=jn(u),h=Yn(c,[l,n-l],c.shape.length-1),p=Yn(d,[l,n-l],d.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=l,Kn(Gn(h[0],p[0]),f)}}),tr=An({ifft_:function(e){a("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Gt.runKernel("IFFT",t)}}),nr=An({mul_:function(e,t){let n=Tn(e,"a","mul"),r=Tn(t,"b","mul");[n,r]=Lt(n,r);const a={a:n,b:r};return Gt.runKernel(he,a)}}),rr=An({reverse_:function(e,t){const n={x:Tn(e,"x","reverse")},r={dims:t};return Gt.runKernel(Te,n,r)}});function ar(e,t,n,r){if(null==r&&(r=g(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!p(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){I(t);const e=u(t),r=u(n);a(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==u(t.slice(e));a(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return p(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?pt(e,r):o(e,[],!0),Gt.makeTensor(e,t,r)}function sr(e,t){if((p(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&p(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ar(e,[],[],t)}function ir(e,t){i(e);const n=Nn(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ar(e,null,n,t)}function or(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ur(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return ir(a,"float32")}An({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Kn(e,[n,t]);r=tr(a)}else{const a=[n,2*(t-1)],s=Kn(qn(e),[n,t]),i=Kn(jn(e),[n,t]),o=rr(Xn(s,[0,1],[n,t-2]),1),u=nr(rr(Xn(i,[0,1],[n,t-2]),1),sr(-1)),l=Hn([s,o],1),c=Hn([i,u],1),d=Kn(Gn(l,c),[a[0],a[1]]);r=tr(d)}if(r=qn(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Kn(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),An({hammingWindow_:function(e){return ur(e,.54,.46)}});const lr=An({hannWindow_:function(e){return ur(e,.5,.5)}});function cr(e,t,n){const r={shape:e,value:t,dtype:n};return Gt.runKernel(X,{},r)}function dr(e,t,n){if(i(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Nn(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ar(e,t,r,n)}const hr=An({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const i=[];for(;s+t<=e.size;)i.push(Xn(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Hn([Xn(e,s,t-r),cr([r],a)]);i.push(o),s+=n}return 0===i.length?dr([],[0,t]):Kn(Hn(i),[i.length,t])}});An({stft_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:lr;null==r&&(r=or(t));const s=hr(e,t,n),i=nr(s,a(t));return er(i,r)}}),An({cropAndResize_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=Tn(e,"image","cropAndResize"),u=Tn(t,"boxes","cropAndResize","float32"),l=Tn(n,"boxInd","cropAndResize","int32"),c=u.shape[0];a(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),a(2===u.rank&&4===u.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${u.shape}.`)),a(1===l.rank&&l.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${u.shape}.`)),a(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),a(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),a("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const d={image:o,boxes:u,boxInd:l},h={method:s,extrapolationValue:i,cropSize:r},p=Gt.runKernel(G,d,h);return p}}),An({flipLeftRight_:function(e){const t=Tn(e,"image","flipLeftRight","float32");a(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Gt.runKernel(Y,n,{})}});const pr=An({tile_:function(e,t){const n=Tn(e,"x","tile","string_or_numeric");a(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Gt.runKernel(He,r,s)}});function fr(e,t,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const o=e.shape[0];return n=Math.min(n,o),a(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),a(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),a(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),a(1===t.rank,(()=>"scores must be a 1D tensor")),a(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),a(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}An({grayscaleToRGB_:function(e){const t=Tn(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];a(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),a(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,pr(t,s)}}),An({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=Tn(e,"image","rotateWithOffset","float32");a(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},o={radians:t,fillValue:n,center:r},u=Gt.runKernel(Je,i,o);return u}}),An({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=Tn(e,"boxes","nonMaxSuppression","float32"),i=Tn(t,"scores","nonMaxSuppression","float32"),o=fr(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return Gt.runKernel(fe,{boxes:s,scores:i},u)}}),An({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=Tn(e,"boxes","nonMaxSuppression"),o=Tn(t,"scores","nonMaxSuppression"),u=fr(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},d=Gt.runKernel(ge,l,c);return{selectedIndices:d[0],selectedScores:d[1]}}}),An({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Tn(e,"boxes","nonMaxSuppression"),o=Tn(t,"scores","nonMaxSuppression"),u=fr(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,h={boxes:i,scores:o},p={maxOutputSize:l,iouThreshold:c,scoreThreshold:d,padToMaxOutputSize:s},f=Gt.runKernel(me,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}}),An({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=Tn(e,"images","resizeBilinear");a(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),a(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),a(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=s,o=!1;3===s.rank&&(o=!0,i=Kn(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,u={images:i},l={alignCorners:n,halfPixelCenters:r,size:t},c=Gt.runKernel(Ee,u,l);return o?Kn(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),An({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=Tn(e,"images","resizeNearestNeighbor");a(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),a(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),a("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),a(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=s,o=!1;3===s.rank&&(o=!0,i=Kn(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,u={images:i},l={alignCorners:n,halfPixelCenters:r,size:t},c=Gt.runKernel(Ne,u,l);return o?Kn(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const mr=An({bincount_:function(e,t,n){const r=Tn(e,"x","bincount"),s=Tn(t,"weights","bincount");a("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),a(n>=0,(()=>`size must be non-negative, but got ${n}.`)),a(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},o={size:n};return Gt.runKernel("Bincount",i,o)}}),gr=An({lessEqual_:function(e,t){let n=Tn(e,"a","lessEqual","string_or_numeric"),r=Tn(t,"b","lessEqual","string_or_numeric");[n,r]=Lt(n,r),Bn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(ae,a)}}),yr=An({greater_:function(e,t){let n=Tn(e,"a","greater","string_or_numeric"),r=Tn(t,"b","greater","string_or_numeric");[n,r]=Lt(n,r),Bn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(ee,a)}}),br=An({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Tn(e,"x","sum");"bool"===r.dtype&&(r=$n(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Gt.runKernel(De,a,s)}}),wr=An({add_:function(e,t){let n=Tn(e,"a","add"),r=Tn(t,"b","add");[n,r]=Lt(n,r);const a={a:n,b:r};return Gt.runKernel(R,a)}}),xr=An({floorDiv_:function(e,t){let n=Tn(e,"a","floorDiv"),r=Tn(t,"b","floorDiv");[n,r]=Lt(n,r);const a={a:n,b:r};return Gt.runKernel(Z,a)}}),vr=An({div_:function(e,t){let n=Tn(e,"a","div"),r=Tn(t,"b","div");if([n,r]=Lt(n,r),"int32"===n.dtype&&"int32"===r.dtype)return xr(n,r);const a={a:n,b:r};return Gt.runKernel(q,a,{})}}),kr=An({sub_:function(e,t){let n=Tn(e,"a","sub"),r=Tn(t,"b","sub");[n,r]=Lt(n,r);const a={a:n,b:r};return Gt.runKernel("Sub",a)}}),Ir=An({round_:function(e){const t={x:Tn(e,"x","round")};return Gt.runKernel(Ce,t)}}),Sr=An({broadcastTo_:function(e,t){let n=Tn(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Kn(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Fn(n);const i={x:n},o={reps:s};return Gt.runKernel(He,i,o)}}),Nr=An({where_:function(e,t,n){const r=Tn(t,"a","where"),a=Tn(n,"b","where"),s=Tn(e,"condition","where","bool"),i=Bn(Bn(s.shape,r.shape),a.shape),o={condition:Sr(s,i),t:Sr(r,i),e:Sr(a,i)};return Gt.runKernel($e,o)}});function Er(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return Gt.runKernel(ke,{},a)}function _r(e,t,n){return ar(e,t,Nn(e,n),n)}function Tr(e,t){let n,r,a,s,i,o,u=ir([-1]),l=ir([0]),c=ir([0]);for(let d=0;d<e.size-1;d++){n=Xn(e,0,d+1),r=Xn(e,d+1),i=vr(br(n),t),o=vr(br(r),t);const h=br(nr(n,Er(0,n.size)));a=vr(h,br(n));const p=cr(r.shape,n.size),f=wr(Er(0,r.size),p),m=nr(r,f);s=vr(br(m),br(r));const g=kr(a,s),y=kr(a,s),b=nr(i,o);c=nr(nr(b,g),y);const w=yr(c,l);l=Nr(w,c,l),u=Nr(w,ir([d]),u)}return u}An({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=Tn(e,"image","threshold"),i=.2989,o=.587,u=.114,l=s.shape[0]*s.shape[1];let c,d,h,p,f=nr(ir([r]),255);if(a(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),a(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),a("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),a("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[c,d,h]=Yn(s,[1,1,1],-1);const e=nr(c,i),t=nr(d,o),n=nr(h,u);p=wr(wr(e,t),n)}else p=e;"otsu"===t&&(f=Tr(mr($n(Ir(p),"int32"),_r([]),256),l));const m=n?gr(p,f):yr(p,f),g=$n(nr(m,255),"int32");return g}}),An({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,i=arguments.length>5?arguments[5]:void 0;const o=Tn(e,"image","transform","float32"),u=Tn(t,"transforms","transform","float32");a(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),a(2===u.rank&&(u.shape[0]===o.shape[0]||1===u.shape[0])&&8===u.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),a(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const l={image:o,transforms:u},c={interpolation:n,fillMode:r,fillValue:s,outputShape:i};return Gt.runKernel(qe,l,c)}});const Cr=An({greaterEqual_:function(e,t){let n=Tn(e,"a","greaterEqual","string_or_numeric"),r=Tn(t,"b","greaterEqual","string_or_numeric");[n,r]=Lt(n,r),Bn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(te,a)}}),Ar=An({logicalAnd_:function(e,t){const n=Tn(e,"a","logicalAnd","bool"),r=Tn(t,"b","logicalAnd","bool");Bn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(se,a)}}),$r=An({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Cn(e,"tensors","stack","string_or_numeric");a(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&a(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Gt.runKernel(be,r,s)}}),Fr=An({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Tn(e,"x","unstack","string_or_numeric");a(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Gt.runKernel(Xe,r,s)}});An({bandPart_:function(e,t,n){a(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),a(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Tn(e,"a","bandPart");a(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,o]=r.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=i),n<0&&(n=o);const u=Kn(Er(0,i,1,"int32"),[-1,1]),l=Er(0,o,1,"int32"),c=kr(u,l),d=Ar(gr(c,sr(+t,"int32")),Cr(c,sr(-n,"int32"))),h=Zn([i,o],r.dtype);return Kn($r(Fr(Kn(r,[-1,i,o])).map((e=>Nr(d,e,h)))),s)}});const Rr=An({abs_:function(e){const t=Tn(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Gt.runKernel("ComplexAbs",e)}{const e={x:t};return Gt.runKernel("Abs",e)}}});function Mr(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Dr(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Or(e,t){return function(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}(e,t.map((e=>1)),t)}function Lr(e,t,n){a(Mr(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Pr(e,t){if(Mr(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function zr(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Br=An({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Tn(e,"x","max"),a={x:r},s={reductionIndices:t,keepDims:n};return Gt.runKernel(ie,a,s)}}),Wr=An({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Tn(e,"x","min"),a={x:r},s={axis:t,keepDims:n};return Gt.runKernel(le,a,s)}}),Ur=An({pow_:function(e,t){let n=Tn(e,"base","pow"),r=Tn(t,"exp","pow");[n,r]=Lt(n,r);const a={a:n,b:r};return Gt.runKernel("Pow",a)}}),Vr=An({sqrt_:function(e){const t={x:Tn(e,"x","sqrt","float32")};return Gt.runKernel(Me,t)}}),Gr=An({square_:function(e){const t=Tn(e,"x","square");return Gt.runKernel("Square",{x:t},{})}});function Hr(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return Rr(e);if(1!==e.rank&&null===n)return Hr(Kn(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return br(Rr(e),n);if(t===1/0)return Br(Rr(e),n);if(t===-1/0)return Wr(Rr(e),n);if("euclidean"===t||2===t)return Vr(br(Ur(Rr(e),sr(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Br(br(Rr(e),n[0]),n[1]-1);if(t===1/0)return Br(br(Rr(e),n[1]),n[0]);if(t===-1/0)return Wr(br(Rr(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Vr(br(Gr(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const jr=An({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Hr(e=Tn(e,"x","norm"),t,n);let s=a.shape;if(r){const t=d(n,e.shape);s=Or(a.shape,t)}return Kn(a,s)}}),qr=An({squeeze_:function(e,t){const n=Tn(e,"x","squeeze");return Kn(n,function(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:d(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}(n.shape,t).newShape)}});function Kr(e){Pt(e).forEach((e=>e.dispose()))}An({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,a(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)a(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Yn(e,e.shape[0],0).map((e=>qr(e,[0])));a(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Gt.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=nr(br(nr(n[r],e)),n[r]);e=kr(e,t)}return vr(e,jr(e,"euclidean"))})));return t?$r(n,0):n}}),Tt=function(e){T().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Xr=An({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Tn(e,"x","expandDims","string_or_numeric");a(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Gt.runKernel(K,r,s)}}),Yr=An({eye_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const a=Sn([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Kn(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return pr(Xr(i,0),[n[0],1,1]);if(2===n.length)return pr(Xr(Xr(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return pr(Xr(Xr(Xr(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Zr=An({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=Tn(e,"a","matMul"),s=Tn(t,"b","matMul");[a,s]=Lt(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return Gt.runKernel(L,i,o)}}),Jr=An({neg_:function(e){const t={x:Tn(e,"x","neg")};return Gt.runKernel("Neg",t)}}),Qr=An({transpose_:function(e,t){const n=Tn(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),a(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{a(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return Gt.runKernel(Ke,r,s)}});function ea(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Gt.tidy((()=>{a(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Yr(n),i=Fn(e);const o=dr([[1]],[1,1]);let u=Fn(o);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=i,a=u,l=s;[u,i,s]=Gt.tidy((()=>{const t=Xn(i,[e,e],[n-e,1]),a=jr(t),l=Xn(i,[e,e],[1,1]),c=Nr(yr(l,0),dr([[-1]]),dr([[1]])),d=kr(l,nr(c,a)),h=vr(t,d);u=1===h.shape[0]?Fn(o):Hn([o,Xn(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Jr(vr(Zr(c,d),a)),f=Xn(i,[e,0],[n-e,r]),m=nr(p,u),g=Qr(u);if(0===e)i=kr(f,Zr(m,Zr(g,f)));else{const t=kr(f,Zr(m,Zr(g,f)));i=Hn([Xn(i,[0,0],[e,r]),t],0)}const y=Qr(m),b=Xn(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=kr(b,Zr(Zr(b,u),y));else{const t=kr(b,Zr(Zr(b,u),y));s=Hn([Xn(s,[0,0],[n,e]),t],1)}return[u,i,s]})),Kr([t,a,l])}return!t&&n>r&&(s=Xn(s,[0,0],[n,r]),i=Xn(i,[0,0],[r,r])),[s,i]}))}var ta;An({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(a(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ea(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Fr(Kn(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=ea(e,t);a.push(n),s.push(r)})),[Kn($r(a,0),e.shape),Kn($r(s,0),e.shape)]}}}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ta||(ta={}));const na=An({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Tn(e,"x","mean"),a={x:r},s={axis:t,keepDims:n};return Gt.runKernel(ue,a,s)}}),ra=An({notEqual_:function(e,t){let n=Tn(e,"a","notEqual","string_or_numeric"),r=Tn(t,"b","notEqual","string_or_numeric");[n,r]=Lt(n,r),Bn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(pe,a)}});function aa(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){const t=aa(e,"float32"),n=Zn(e,"float32");return Gn(t,n)}const n=v(u(e),t);return Gt.makeTensor(n,e,t)}const sa=An({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ta.SUM_BY_NONZERO_WEIGHTS;const r=Tn(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Tn(t,"weights","computeWeightedLoss"));const s=null==a?r:nr(r,a);if(n===ta.NONE)return s;if(n===ta.SUM)return br(s);if(n===ta.MEAN){if(null==a)return na(s);{const e=r.size/a.size,t=vr(br(s),br(a));return e>1?vr(t,sr(e)):t}}if(n===ta.SUM_BY_NONZERO_WEIGHTS){if(null==a)return vr(br(s),sr(r.size));{const e=nr(a,aa(r.shape)),t=$n(br(ra(e,sr(0))),"float32");return vr(br(s),t)}}throw Error(`Unknown reduction: ${n}`)}});An({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ta.SUM_BY_NONZERO_WEIGHTS;const a=Tn(e,"labels","absoluteDifference"),i=Tn(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=Tn(n,"weights","absoluteDifference")),s(a.shape,i.shape,"Error in absoluteDifference: ");const u=Rr(kr(a,i));return sa(u,o,r)}}),An({cosineDistance_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ta.SUM_BY_NONZERO_WEIGHTS;const i=Tn(e,"labels","cosineDistance"),o=Tn(t,"predictions","cosineDistance");let u=null;null!=r&&(u=Tn(r,"weights","cosineDistance")),s(i.shape,o.shape,"Error in cosineDistance: ");const l=sr(1),c=kr(l,br(nr(i,o),n,!0));return sa(c,u,a)}});const ia=An({relu_:function(e){const t={x:Tn(e,"x","relu")};return Gt.runKernel(Ie,t)}});An({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ta.SUM_BY_NONZERO_WEIGHTS,a=Tn(e,"labels","hingeLoss");const i=Tn(t,"predictions","hingeLoss");let o=null;null!=n&&(o=Tn(n,"weights","hingeLoss")),s(a.shape,i.shape,"Error in hingeLoss: ");const u=sr(1);a=kr(nr(sr(2),a),u);const l=ia(kr(u,nr(a,i)));return sa(l,o,r)}});const oa=An({minimum_:function(e,t){let n=Tn(e,"a","minimum"),r=Tn(t,"b","minimum");[n,r]=Lt(n,r),"bool"===n.dtype&&(n=$n(n,"int32"),r=$n(r,"int32")),Bn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(ce,a)}});An({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ta.SUM_BY_NONZERO_WEIGHTS;const i=Tn(e,"labels","huberLoss"),o=Tn(t,"predictions","huberLoss");let u=null;null!=n&&(u=Tn(n,"weights","huberLoss")),s(i.shape,o.shape,"Error in huberLoss: ");const l=sr(r),c=Rr(kr(o,i)),d=oa(c,l),h=kr(c,d),p=wr(nr(sr(.5),Gr(d)),nr(l,h));return sa(p,u,a)}});const ua=An({log_:function(e){const t={x:Tn(e,"x","log","float32")};return Gt.runKernel("Log",t)}});An({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ta.SUM_BY_NONZERO_WEIGHTS;const i=Tn(e,"labels","logLoss"),o=Tn(t,"predictions","logLoss");let u=null;null!=n&&(u=Tn(n,"weights","logLoss")),s(i.shape,o.shape,"Error in logLoss: ");const l=sr(1),c=sr(r),d=Jr(nr(i,ua(wr(o,c)))),h=nr(kr(l,i),ua(wr(kr(l,o),c))),p=kr(d,h);return sa(p,u,a)}});const la=An({squaredDifference_:function(e,t){let n=Tn(e,"a","squaredDifference"),r=Tn(t,"b","squaredDifference");[n,r]=Lt(n,r),Bn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(Ue,a,{})}});An({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ta.SUM_BY_NONZERO_WEIGHTS;const a=Tn(e,"labels","meanSquaredError"),i=Tn(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=Tn(n,"weights","meanSquaredError")),s(a.shape,i.shape,"Error in meanSquaredError: ");const u=la(a,i);return sa(u,o,r)}});const ca=An({exp_:function(e){const t={x:Tn(e,"x","exp")};return Gt.runKernel("Exp",t)}}),da=An({log1p_:function(e){const t={x:Tn(e,"x","log1p")};return Gt.runKernel("Log1p",t)}});function ha(e,t){const n=Tn(e,"labels","sigmoidCrossEntropyWithLogits"),r=Tn(t,"logits","sigmoidCrossEntropyWithLogits");s(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=ia(r),i=nr(r,n),o=da(ca(Jr(Rr(r))));return wr(kr(a,i),o)}function pa(e){return Gt.customGrad(e)}An({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ta.SUM_BY_NONZERO_WEIGHTS,i=Tn(e,"multiClassLabels","sigmoidCrossEntropy");const o=Tn(t,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=Tn(n,"weights","sigmoidCrossEntropy")),s(i.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=sr(r),t=sr(1),n=sr(.5);i=wr(nr(i,kr(t,e)),nr(n,e))}const l=ha(i,o);return sa(l,u,a)}});const fa=An({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Tn(e,"x","logSumExp"),a=d(t,r.shape),s=Br(r,a,!0),i=kr(r,s),o=ca(i),u=br(o,a),l=ua(u),c=wr(Kn(s,l.shape),l);if(n){const e=Or(c.shape,a);return Kn(c,e)}return c}});function ma(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=pa(((e,t,r)=>{const a=fa(t,[n],!0),s=kr($n(t,"float32"),a);r([e,s]);const i=Jr(nr(s,e));return{value:br(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Or(e.shape,[n]);return[nr(Kn(e,s),kr($n(r,"float32"),ca(a))),nr(Kn(e,s),kr(ca(a),$n(r,"float32")))]}}}));return r(e,t)}function ga(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function ya(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[o,u]=wa(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return ba(e,l,n,r,a,s,!1,i)}function ba(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[u,l,c,d]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,d]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,d,l,c]=e}const[h,p,,f]=t,[m,g]=wa(n),[y,b]=wa(r),w=xa(h,y),x=xa(p,b),{padInfo:v,outHeight:k,outWidth:I}=va(a,l,c,m,g,w,x,s,o),S=i?f*d:f;let N;return"channelsFirst"===o?N=[u,S,k,I]:"channelsLast"===o&&(N=[u,k,I,S]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:d,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function wa(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function xa(e,t){return t<=1?e:e+(e-1)*(t-1)}function va(e,t,n,r,a,s,i,o,u){let l,c,d;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=function(e,t,n){const r=xa(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+r)/2)}(e,t,n));const s=e[1];return[ka((e[0]-t+2*r)/n+1,a),ka((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);c=a[0],d=a[1]}else if("same"===e){c=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(d-1)*a+i-n),u=Math.floor(e/2),h=e-u,p=Math.floor(o/2);l={top:u,bottom:h,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const h="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:h,bottom:p,left:f,right:m,type:0===h&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=ka((t-s+h+p)/r+1,o),d=ka((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:d}}function ka(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ia(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Sa(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Na(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Ea(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function _a(e){try{return e.map((e=>gt(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Ta(e){return e.map((e=>mt(e)))}var Ca,Aa;let $a;An({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ta.SUM_BY_NONZERO_WEIGHTS,i=Tn(e,"onehotLabels","softmaxCrossEntropy");const o=Tn(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=Tn(n,"weights","softmaxCrossEntropy")),s(i.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=sr(r),t=sr(1),n=sr(i.shape[1]);i=wr(nr(i,kr(t,e)),vr(e,n))}const l=ma(i,o);return sa(l,u,a)}}),An({sparseFillEmptyRows_:function(e,t,n,r){const a=Tn(e,"indices","sparseFillEmptyRows","int32"),s=Tn(t,"values","sparseFillEmptyRows"),i=Tn(n,"denseShape","sparseFillEmptyRows","int32"),o=Tn(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},l=Gt.runKernel(Pe,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),An({sparseReshape_:function(e,t,n){const r=Tn(e,"inputIndices","sparseReshape","int32"),a=Tn(t,"inputShape","sparseReshape","int32"),s=Tn(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=Gt.runKernel(ze,i);return{outputIndices:o[0],outputShape:o[1]}}}),An({sparseSegmentMean_:function(e,t,n){const r=Tn(e,"data","sparseSegmentMean"),a=Tn(t,"indices","sparseSegmentMean","int32"),s=Tn(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Gt.runKernel(Be,i)}}),An({sparseSegmentSum_:function(e,t,n){const r=Tn(e,"data","sparseSegmentSum"),a=Tn(t,"indices","sparseSegmentSum","int32"),s=Tn(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Gt.runKernel(We,i)}}),An({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=Tn(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=Tn(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},d={data:u,dataSplits:l},h=Gt.runKernel("StringNGrams",d,c);return{nGrams:h[0],nGramsSplits:h[1]}}}),An({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Tn(e,"input","stringSplit","string"),a=Tn(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=Gt.runKernel(Ge,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),An({stringToHashBucketFast_:function(e,t){const n=Tn(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return Gt.runKernel("StringToHashBucketFast",a,r)}}),An({elu_:function(e){const t={x:Tn(e,"x","elu","float32")};return Gt.runKernel("Elu",t)}}),An({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n=Tn(e,"x","leakyRelu"),r={x:n},a={alpha:t};return Gt.runKernel(re,r,a)}}),An({prelu_:function(e,t){const n={x:Tn(e,"x","prelu"),alpha:Tn(t,"alpha","prelu")};return Gt.runKernel(xe,n)}}),An({relu6_:function(e){const t={x:Tn(e,"x","relu6")};return Gt.runKernel(_e,t)}}),An({sigmoid_:function(e){const t={x:Tn(e,"x","sigmoid","float32")};return Gt.runKernel(Re,t)}}),An({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Tn(e,"x","step"),r={x:n},a={alpha:t};return Gt.runKernel(Ze,r,a)}}),function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(Ca||(Ca={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(Aa||(Aa={}));const Fa={kernelName:Qe,backendName:"wasm",setupFunc:function(e){$a=e.wasm.cwrap(Qe,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r,h=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=Aa[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const y=u?a.shape[2]:a.shape[1],b=l?s.shape[1]:s.shape[2],w=Bn(a.shape.slice(0,-2),s.shape.slice(0,-2)),x=n.makeOutput([...w,y,b],a.dtype),v=n.dataIdMap.get(x.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return $a(h,k,a.shape.length,p,I,s.shape.length,u,l,g,f,m,d||0,v),x}};function Ra(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===u(i.shape)||n(s,Ca[a.dtype],o),i}}}const Ma=Ra("Abs");function Da(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,c=null!=n?n:s.dtype,d=Bn(s.shape,i.shape),h=t.makeOutput(d,c);if(0===u(d))return h;const p=new Uint8Array(new Int32Array(s.shape).buffer),f=new Uint8Array(new Int32Array(i.shape).buffer),m=t.dataIdMap.get(h.dataId).id;return r(o,p,s.shape.length,l,f,i.shape.length,Ca[s.dtype],m),h}}}const Oa=Da(R);let La;const Pa={kernelName:M,backendName:"wasm",setupFunc:function(e){La=e.wasm.cwrap(M,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===u(r.shape))return r;const a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return La(s,a.length,Ca[r.dtype],i),r}};function za(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const Ba={kernelName:ne,backendName:"wasm",kernelFunc:za};let Wa;function Ua(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=za({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(l.dataId).id,h=new Uint8Array(new Int32Array(s).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return Wa(c,p,u.shape.length,Ca[u.dtype],d,h,s.length),l}const Va={kernelName:Ke,backendName:"wasm",kernelFunc:Ua,setupFunc:function(e){Wa=e.wasm.cwrap(Ke,null,["number","array","number","number","number","array","number"])}};function Ga(e,t,n){const r=e.shape,a=e.shape.length,s=d(t,r);let i=s;const o=Pr(i,a);let u=null,l=!1;if(null!=o){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=zr(i.length,a),u=Ua({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}let Ha;const ja={kernelName:"All",backendName:"wasm",setupFunc:function(e){Ha=e.wasm.cwrap("All",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,l=i;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=Ga(i,a,t);p&&(l=c,o=t.dataIdMap.get(c.dataId).id),Lr("all",d,l.shape.length);const[f,m]=Dr(l.shape,d),g=u(m),y=t.makeOutput(f,i.dtype);if(0!==u(l.shape)){const e=t.dataIdMap.get(y.dataId).id;Ha(o,g,e)}if(p&&t.disposeData(c.dataId),s){const e=Or(y.shape,h);y.shape=e}return y}};let qa;const Ka={kernelName:"Any",backendName:"wasm",setupFunc:function(e){qa=e.wasm.cwrap("Any",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,l=i;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=Ga(i,a,t);p&&(l=c,o=t.dataIdMap.get(c.dataId).id),Lr("any",d,l.shape.length);const[f,m]=Dr(l.shape,d),g=u(m),y=t.makeOutput(f,i.dtype);if(0!==u(l.shape)){const e=t.dataIdMap.get(y.dataId).id;qa(o,g,e)}if(p&&t.disposeData(c.dataId),s){const e=Or(y.shape,h);y.shape=e}return y}};let Xa;const Ya={kernelName:D,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,l=s;const{transposed:c,axes:d,inputWasTransposed:h}=Ga(s,a,t);if(h){const e=t.dataIdMap.get(c.dataId).id;e!==i&&(l=c,o=e)}const p=l.shape.slice(0,-1),f=t.makeOutput(p,"int32"),m=t.dataIdMap.get(f.dataId).id,g=u(f.shape),y=l.shape[d[0]];return Xa(o,Ca[l.dtype],g,y,m),h&&t.disposeData(c.dataId),f},setupFunc:function(e){Xa=e.wasm.cwrap(D,null,["number","number","number","number","number"])}};let Za;const Ja={kernelName:O,backendName:"wasm",setupFunc:function(e){Za=e.wasm.cwrap(O,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=ya(a.shape,i,o,1,u,l),d=c.filterHeight,h=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,w=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const x=r.makeOutput(c.outShape,"float32"),v=r.dataIdMap.get(x.dataId).id;return Za(s,a.shape[0],a.shape[1],a.shape[2],d,h,p,f,m,g,y,b,w,v),x}};function Qa(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:s}=n,i=u(r.shape),o=function(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}(s,i);return a(i===u(o),(()=>`new shape: ${o}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:o,dtype:r.dtype}}const es={kernelName:Se,backendName:"wasm",kernelFunc:Qa};let ts;const ns={kernelName:L,backendName:"wasm",setupFunc:function(e){ts=e.wasm.cwrap(L,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:o,transposeB:l}=r;if("float32"!==s.dtype||"float32"!==i.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const c=s.shape.length,d=i.shape.length,h=o?s.shape[c-2]:s.shape[c-1],p=l?i.shape[d-1]:i.shape[d-2],f=o?s.shape[c-1]:s.shape[c-2],m=l?i.shape[d-2]:i.shape[d-1],g=s.shape.slice(0,-2),y=i.shape.slice(0,-2),b=u(g),w=u(y),x=Bn(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([f,m]);a(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${o} and transposeB=${l} must match.`));const v=l?[w,m,p]:[w,p,m],k=Qa({inputs:{x:s},backend:n,attrs:{shape:o?[b,h,f]:[b,f,h]}}),I=Qa({inputs:{x:i},backend:n,attrs:{shape:v}}),S=n.dataIdMap.get(k.dataId).id,N=n.dataIdMap.get(I.dataId).id,E=o?k.shape[2]:k.shape[1],_=l?I.shape[1]:I.shape[2],T=Math.max(b,w),C=n.makeOutput([T,E,_],k.dtype),A=n.dataIdMap.get(C.dataId).id,$=new Uint8Array(new Int32Array(k.shape).buffer),F=new Uint8Array(new Int32Array(I.shape).buffer);return ts(S,$,k.shape.length,N,F,I.shape.length,o,l,A),n.disposeData(k.dataId),n.disposeData(I.dataId),C.shape=x,C}};function rs(e,t,n,r,a){const s=Wn(r,t,n),i=u(n),o=b(r);if(s){const n=Un(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const l=Sn(r,a,"string"===a?_a(e):e),c=Sn(n,a);for(let e=0;e<c.size;++e){const n=c.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));c.set(l.get(...r),...n)}return"string"===a?Ta(c.values):c.values}function as(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:s}=e,[i,o]=function(e,t,n){let r;const s=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{a(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(a(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}(t,n,r),l=Wn(t.shape,i,o),c=s.readSync(t.dataId),d=s.makeOutput(o,t.dtype),h=b(t.shape),p=s.dataIdMap.get(d.dataId);if(l){const e=Un(i,h);return"string"===t.dtype?p.stringBytes=c.slice(e,e+u(o)):s.typedArrayFromHeap(d).set(c.subarray(e,e+u(o))),d}if("string"===t.dtype){const e=rs(c,i,o,t.shape,t.dtype);return p.stringBytes=e,d}const f=s.typedArrayFromHeap(d),m=t.shape.length;if(2===m)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(c,h[0],f,i,o);else if(3===m)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],d=u+s[1];for(let a=o;a<c;a++)for(let o=u;o<d;o++){const u=a*t+o*n+l;r.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(c,h[0],h[1],f,i,o);else if(4===m)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],d=u+i[0],h=l+i[1],p=c+i[2],f=s[3];for(let s=u;s<d;s++)for(let u=l;u<h;u++)for(let l=c;l<p;l++){const c=s*t+u*n+l*r+f;a.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(c,h[0],h[1],h[2],f,i,o);else{const e=rs(c,i,o,t.shape,t.dtype);f.set(e)}return d}const ss={kernelName:Fe,backendName:"wasm",kernelFunc:as},is={kernelName:"BatchToSpaceND",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),u=Sa(a.shape,s,o),l=Na(u.length,s.length),c=Ea(a.shape,s,o),d=function(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}(i,s.length),h=function(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}(c,i,s.length),p=Qa({inputs:{x:a},backend:n,attrs:{shape:u}}),f=Ua({inputs:{x:p},backend:n,attrs:{perm:l}}),m=as({inputs:{x:Qa({inputs:{x:f},backend:n,attrs:{shape:c}})},backend:n,attrs:{begin:d,size:h}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(p.dataId),m}};function os(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const us={kernelName:P,backendName:"wasm",kernelFunc:os},ls=Ra("Ceil");let cs;const ds={kernelName:z,backendName:"wasm",setupFunc:function(e){cs=e.wasm.cwrap(z,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return cs(o,s,i,l),u}};function hs(e){const{inputs:t,backend:n}=e,r=d(e.attrs.axis,t[0].shape)[0];let s=ga(t.map((e=>e.shape)),r);const i=t.filter((e=>u(e.shape)>0));if(1===i.length)return za({inputs:{x:i[0]},backend:n});const o=n.makeOutput(s,t[0].dtype);if(0===u(s))return o;if(function(e,t){const n=e[0].length;e.forEach(((e,t)=>{a(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),a(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let i=0;i<n;i++)a(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}(i.map((e=>e.shape)),r),"string"===i[0].dtype){const e=i.map((e=>{const t=u(e.shape.slice(r));return Qa({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),a=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));s=ga(e.map((e=>e.shape)),1);const l=1===e[0].shape[0],c=function(e,t,n,r){const a=h(n,u(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=u(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?_a(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}(a,s,t[0].dtype,l),d=ga(i.map((e=>e.shape)),r);return o.shape=d,n.dataIdMap.get(o.dataId).stringBytes=Ta(c),e.forEach((e=>n.disposeData(e.dataId))),o}const l=u(i[0].shape.slice(0,r));let c=0;const p=i.map((e=>{const t=u(e.shape.slice(r));return c+=t,t})),f=i.map((e=>n.typedArrayFromHeap(e))),m=n.typedArrayFromHeap(o);for(let e=0;e<l;e++){let t=e*c;for(let n=0;n<f.length;n++){const r=p[n],a=e*r,s=f[n].subarray(a,a+r);m.set(s,t),t+=r}}return o}const ps={kernelName:B,backendName:"wasm",kernelFunc:hs};let fs;const ms={kernelName:W,backendName:"wasm",setupFunc:function(e){fs=e.wasm.cwrap(W,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:d,dataFormat:h}=n,p=Ia(h),f=ba(a.shape,s.shape,u,l,c,d,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,w=f.padInfo.bottom,x=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,E=f.outChannels,_="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const T=r.makeOutput(f.outShape,"float32"),C=r.dataIdMap.get(T.dataId).id;return fs(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,w,x,_,v,k,I,S,N,E,C),T}};let gs;const ys={kernelName:U,backendName:"wasm",setupFunc:function(e){gs=e.wasm.cwrap(U,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=r,d=Ia(u),h=ba(c,s.shape,i,1,o,l,!1,d),{batchSize:p,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:w,outChannels:x,outHeight:v,outWidth:k,strideHeight:I,strideWidth:S}=h,N=f-1-h.padInfo.top,E=m-1-h.padInfo.left,_="channelsLast"===h.dataFormat,T=b(h.inShape),C=b(a.shape),[A,$,F]=b(s.shape),R=T[0],M=_?T[1]:T[2],D=_?T[2]:1,O=_?1:T[1],L=C[0],P=_?C[1]:C[2],z=_?C[2]:1,B=_?1:C[1],W=t.makeOutput(h.inShape,"float32"),U=t.dataIdMap.get(W.dataId).id,V=t.dataIdMap.get(a.dataId).id,G=t.dataIdMap.get(s.dataId).id;return gs(V,G,p,f,m,y,w,g,v,k,x,I,S,N,E,A,$,F,R,M,D,O,L,P,z,B,U),W}},bs=Ra("Cos"),ws=Ra("Cosh");var xs;let vs;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(xs||(xs={}));const ks={kernelName:G,backendName:"wasm",setupFunc:function(e){vs=e.wasm.cwrap(G,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[d,h]=i,p=[c,d,h,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=os({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,w=t.makeOutput(p,"float32"),x=t.dataIdMap.get(w.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return vs(g,y,b,c,v,d,h,xs[a],s,x),null!=f&&t.disposeData(f.dataId),w}};let Is;const Ss={kernelName:V,backendName:"wasm",setupFunc:function(e){Is=e.wasm.cwrap(V,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:o,reverse:u}=r,l=s.shape.length;a("float32"===s.dtype||"int32"===s.dtype,(()=>`cumsum does not support ${s.dtype} tensors in the WASM backend`));const c=Pr([i],l);let d=s;null!==c&&(d=Ua({inputs:{x:s},attrs:{perm:c},backend:n}));const h=zr(1,l)[0];Lr("cumsum",[h],l);const p=n.makeOutput(d.shape,d.dtype),f=d.shape[h],m=n.dataIdMap.get(d.dataId).id,g=n.dataIdMap.get(p.dataId).id;Is(m,o?1:0,u?1:0,f,g,Ca[s.dtype]);let y=p;if(null!==c){const e=c.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]));y=Ua({inputs:{x:p},attrs:{perm:e},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)}return y}};let Ns;const Es={kernelName:H,backendName:"wasm",setupFunc:function(e){Ns=e.wasm.cwrap(H,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d="NHWC"===i?[o,u,l,c]:[o,c,u,l],h=t.makeOutput(d,"float32"),p=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(b(a.shape)).buffer),m=new Uint8Array(new Int32Array(d).buffer),g=new Uint8Array(new Int32Array(b(d)).buffer),y=t.dataIdMap.get(h.dataId).id;return Ns(p,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,d.length,y),h}};let _s;const Ts={kernelName:j,backendName:"wasm",setupFunc:function(e){_s=e.wasm.cwrap(j,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:d}=n,h=null==l?[1,1]:l,p=ba(a.shape,s.shape,u,h,c,d,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,y=p.padInfo.right,b=p.padInfo.bottom,w=p.padInfo.left,x=p.dilationHeight,v=p.dilationWidth,k=p.strideHeight,I=p.strideWidth,S=p.inChannels,N=p.outChannels,E="SAME"===p.padInfo.type?1:0;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const _=r.makeOutput(p.outShape,"float32"),T=r.dataIdMap.get(_.dataId).id;return _s(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,w,E,x,v,k,I,S,N,T),_}},Cs=Ra("Elu"),As=Da("Equal",0,"bool"),$s=Ra("Exp","float32");function Fs(e){const{inputs:t,attrs:n,backend:r}=e,{input:s}=t,{dim:i}=n,o=s.shape.length,u=s.shape.slice();let l=i;return i<0&&(a(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+i+1),u.splice(l,0,1),Qa({inputs:{x:s},backend:r,attrs:{shape:u}})}const Rs={kernelName:K,backendName:"wasm",kernelFunc:Fs};function Ms(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}const Ds={kernelName:X,backendName:"wasm",kernelFunc:Ms};let Os;const Ls={kernelName:Y,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return Os(s,o,u,l,c,i),a},setupFunc:function(e){Os=e.wasm.cwrap(Y,null,["number","number","number","number","number","number"])}},Ps=Ra("Floor"),zs=Da(Z);let Bs;const Ws={kernelName:J,backendName:"wasm",setupFunc:function(e){Bs=e.wasm.cwrap(J,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:c}=n,d=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=null!=c?t.dataIdMap.get(c.dataId).id:0,g=t.makeOutput(s.shape,s.dtype);if(0===u(s.shape))return g;const y=t.dataIdMap.get(g.dataId).id;return Bs(d,h,p,f,m,a,y),g}};let Us;const Vs={kernelName:et,backendName:"wasm",setupFunc:function(e){Us=e.wasm.cwrap(et,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=n,m=ba(a.shape,s.shape,u,c,l,h),g=Aa[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,w=m.outChannels;let x=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==w)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${w})`);x=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,E=m.padInfo.left,_=m.dilationHeight,T=m.dilationWidth,C=m.strideHeight,A=m.strideWidth,$=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,M=m.inHeight,D=m.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return Us(y,R,M,D,b,v,k,x,I,S,N,E,F,_,T,C,A,$,w,g,P,f||0,L),O}};let Gs;const Hs={kernelName:tt,backendName:"wasm",setupFunc:function(e){Gs=e.wasm.cwrap(tt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=n,m=ba(a.shape,s.shape,u,c,l,h,!0),g=Aa[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,w=m.outChannels;let x=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==w)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${w})`);x=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,E=m.padInfo.left,_=m.dilationHeight,T=m.dilationWidth,C=m.strideHeight,A=m.strideWidth,$=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,M=m.inHeight,D=m.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return Gs(y,R,M,D,b,v,k,x,I,S,N,E,F,_,T,C,A,$,w,g,P,f||0,L),O}};let js;const qs={kernelName:Q,backendName:"wasm",setupFunc:function(e){js=e.wasm.cwrap(Q,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=function(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===u(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,l=a.slice();l.pop();let c=1;for(let e=s;e<n;++e)c*=o[e],l.push(o[e]);const d=[...b(e.shape).map((e=>e/c)),1].slice(0,s);return[l,i,c,d]}(r,a),c=t.makeOutput(s,r.dtype);if(0===i)return c;const d=a.shape,h=d[d.length-1],p=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(l).buffer),g=t.dataIdMap.get(c.dataId).id;return js(p,Ca[r.dtype],f,i,h,o,m,g),c}};let Ks;const Xs={kernelName:"GatherV2",backendName:"wasm",setupFunc:function(e){Ks=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:s,indices:i}=n,{axis:o,batchDims:l}=r,c=d(o,s.shape)[0],h=t.readSync(i.dataId),p=s.shape[c];for(let e=0;e<h.length;++e){const t=h[e];a(t<=p-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${p-1}]`))}const f=function(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}(s,i,c,l),m=Qa({inputs:{x:s},attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]},backend:t}),g=u(i.shape),y=Qa({inputs:{x:i},attrs:{shape:[f.batchSize,g/f.batchSize]},backend:t}),w=[f.batchSize,f.outerSize,g/f.batchSize,f.sliceSize],x=t.makeOutput(w,s.dtype);if(0===u(s.shape))return x;const v=m.shape.length-1,k=t.dataIdMap.get(m.dataId).id,I=t.dataIdMap.get(y.dataId).id,S=t.dataIdMap.get(x.dataId).id,N=new Uint8Array(new Int32Array(b(m.shape)).buffer),E=new Uint8Array(new Int32Array(b(w)).buffer);return Ks(k,Ca[s.dtype],N,v,I,f.batchSize,E,S),t.disposeData(m.dataId),t.disposeData(y.dataId),x.shape=f.outputShape,x}},Ys=Da(ee,0,"bool"),Zs=Da(te,0,"bool");let Js;const Qs={kernelName:re,backendName:"wasm",setupFunc:function(e){Js=e.wasm.cwrap(re,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==u(t.shape)){const e=r.dataIdMap.get(s.dataId).id;Js(a,Ca[t.dtype],n,e)}return s}},ei=Da("Less",0,"bool"),ti=Da(ae,0,"bool"),ni=Ra("Log"),ri=Da(se,0,"bool");let ai;const si={kernelName:ie,backendName:"wasm",setupFunc:function(e){ai=e.wasm.cwrap(ie,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,l=i;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=Ga(i,a,t);p&&(l=c,o=t.dataIdMap.get(c.dataId).id),Lr("max",d,l.shape.length);const[f,m]=Dr(l.shape,d),g=u(m),y=t.makeOutput(f,i.dtype);if(0!==u(l.shape)){const e=t.dataIdMap.get(y.dataId).id;ai(o,Ca[i.dtype],g,e)}if(p&&t.disposeData(c.dataId),s){const e=Or(y.shape,h);y.shape=e}return y}},ii=Da("Maximum");let oi;const ui={kernelName:oe,backendName:"wasm",setupFunc:function(e){oi=e.wasm.cwrap(oe,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,s=t.x,i=r.dataIdMap.get(s.dataId).id;a("float32"===s.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${s.dtype}.`));const{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=n,d=ya(s.shape,o,u,1,l,c),h=d.filterHeight,p=d.filterWidth,f=d.padInfo.top,m=d.padInfo.right,g=d.padInfo.bottom,y=d.padInfo.left,b=d.dilationHeight,w=d.dilationWidth,x=d.strideHeight,v=d.strideWidth,k=d.inChannels,I=d.outChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);const S=r.makeOutput(d.outShape,"float32"),N=r.dataIdMap.get(S.dataId).id;return oi(i,s.shape[0],s.shape[1],s.shape[2],h,p,f,m,g,y,b,w,x,v,k,I,N),S}};let li;const ci={kernelName:ue,backendName:"wasm",setupFunc:function(e){li=e.wasm.cwrap(ue,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let l=o,c=i;const{transposed:d,axes:h,originalAxes:p,inputWasTransposed:f}=Ga(i,a,t);let m=h;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==o&&(c=d,l=e,m=zr(m.length,c.shape.length))}Lr("mean",m,c.shape.length);const[g,y]=Dr(c.shape,m),b=u(y);let w=c;"float32"!==c.dtype&&(w=os({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(w.dataId).id);const x=t.makeOutput(g,"float32");if(0!==u(c.shape)){const e=t.dataIdMap.get(x.dataId).id;li(l,b,e)}if(f&&t.disposeData(d.dataId),s){const e=Or(x.shape,p);x.shape=e}return"float32"!==c.dtype&&t.disposeData(w.dataId),x}};let di;const hi={kernelName:le,backendName:"wasm",setupFunc:function(e){di=e.wasm.cwrap(le,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let l=o,c=i;const{transposed:d,axes:h,originalAxes:p,inputWasTransposed:f}=Ga(i,a,t);if(f){const e=t.dataIdMap.get(d.dataId).id;e!==o&&(c=d,l=e)}Lr("min",h,c.shape.length);const[m,g]=Dr(c.shape,h),y=u(g),b=t.makeOutput(m,c.dtype);if(0!==u(c.shape)){const e=t.dataIdMap.get(b.dataId).id;di(l,Ca[i.dtype],y,e)}if(f&&t.disposeData(d.dataId),s){const e=Or(b.shape,p);b.shape=e}return b}},pi=Da(ce);var fi;let mi;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(fi||(fi={}));const gi={kernelName:de,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),d=r.map((e=>e[1])),h=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(d).buffer);return mi(i,l,t.shape.length,Ca[t.dtype],h,p,fi[a],u),o},setupFunc:function(e){mi=e.wasm.cwrap(de,null,["number","array","number","number","array","array","number","number"])}},yi=Da(he),bi=Ra("Neg");function wi(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}let xi;const vi={kernelName:fe,backendName:"wasm",setupFunc:function(e){xi=e.wasm.cwrap(fe,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,d=xi(l,c,s,a,i),{pSelectedIndices:h,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=wi(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",h)}};let ki;const Ii={kernelName:me,backendName:"wasm",setupFunc:function(e){ki=e.wasm.cwrap(me,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=ki(c,d,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=wi(t,h);return t.wasm._free(m),[t.makeOutput([f],"int32",p),t.makeOutput([],"int32",g)]}};let Si;const Ni={kernelName:ge,backendName:"wasm",setupFunc:function(e){Si=e.wasm.cwrap(ge,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=Si(c,d,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=wi(t,h);return t.wasm._free(g),[t.makeOutput([f],"int32",p),t.makeOutput([f],"float32",m)]}},Ei=Da(pe,0,"bool");let _i;const Ti={kernelName:ye,backendName:"wasm",setupFunc:function(e){_i=e.wasm.cwrap(ye,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(a.dataId).id;return _i(c,s,i,o,l),u}},Ci={kernelName:be,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:i}=r;if(1===t.length)return Fs({inputs:{input:t[0]},backend:n,attrs:{dim:i}});const o=t[0].shape,u=t[0].dtype;t.forEach((e=>{s(o,e.shape,"All tensors passed to stack must have matching shapes"),a(u===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const l=[],c=hs({inputs:t.map((e=>{const t=Fs({inputs:{input:e},backend:n,attrs:{dim:i}});return l.push(t),t})),backend:n,attrs:{axis:i}});return l.forEach((e=>n.disposeData(e.dataId))),c}};let Ai;const $i={kernelName:we,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===u(t.shape))return Ms({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});const i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(h).buffer);return Ai(i,c,t.shape.length,Ca[t.dtype],p,f,a,l),o},setupFunc:function(e){Ai=e.wasm.cwrap(we,null,["number","array","number","number","array","array","number","number"])}},Fi=Da("Pow");let Ri;const Mi={kernelName:xe,backendName:"wasm",setupFunc:function(e){Ri=e.wasm.cwrap(xe,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id;let o=s;const u=r;let l=u;"float32"!==u.dtype&&(l=os({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(l.dataId).id);const c=n.makeOutput(r.shape,"float32"),d=n.dataIdMap.get(c.dataId).id;return Ri(o,i,d),"float32"!==u.dtype&&n.disposeData(l.dataId),c}};let Di;const Oi={kernelName:ve,backendName:"wasm",setupFunc:function(e){Di=e.wasm.cwrap(ve,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let l=o,c=i;const{transposed:d,axes:h,originalAxes:p,inputWasTransposed:f}=Ga(i,a,t);let m=h;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==o&&(c=d,l=e,m=zr(m.length,c.shape.length))}Lr("prod",m,c.shape.length);const[g,y]=Dr(c.shape,m),b=u(y),w=t.makeOutput(g,c.dtype);if(0!==u(c.shape)){const e=t.dataIdMap.get(w.dataId).id;Di(l,b,Ca[w.dtype],e)}if(f&&t.disposeData(d.dataId),s){const e=Or(w.shape,p);w.shape=e}return w}},Li={kernelName:ke,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=function(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return k(0,r);const a=k(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},Pi=Da(q),zi=Ra(Ie),Bi=Ra(_e);let Wi;const Ui={kernelName:Ee,backendName:"wasm",setupFunc:function(e){Wi=e.wasm.cwrap(Ee,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,c]=o,[d,h,p,f]=a.shape,m=[d,l,c,f];let g,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(g=os({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));const b=y.id,w=t.makeOutput(m,"float32");if(0===u(a.shape))return w;const x=t.dataIdMap.get(w.dataId).id;return Wi(b,d,h,p,f,l,c,s?1:0,i?1:0,x),null!=g&&t.disposeData(g.dataId),w}};let Vi;const Gi={kernelName:Te,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=d(s,a.shape);if(0===a.shape.length)return za({inputs:{x:a},backend:n});const o=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);Vi(u,c,i.length,h,a.shape.length,l);const p=Qa({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),p},setupFunc:function(e){Vi=e.wasm.cwrap(Te,null,["number","array","number","array","number","number"])}};let Hi;const ji={kernelName:Je,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,[d,h,p,f]=a.shape,[m,g]=function(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}(o,h,p),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return Hi(l,d,h,p,f,s,m,g,b,y.length,c),u},setupFunc:function(e){Hi=e.wasm.cwrap(Je,null,["number","number","number","number","number","number","number","number","array","number","number"])}},qi=Ra(Ce),Ki=Ra("Rsqrt");let Xi;const Yi={kernelName:Ae,backendName:"wasm",setupFunc:function(e){Xi=e.wasm.cwrap(Ae,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===u(i))return o;const{sliceRank:l,numUpdates:c,sliceSize:d,strides:h,outputSize:p}=function(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:u(t.shape)/o,sliceSize:i,strides:[...b(n.slice(0,a)),1],outputSize:u(n)}}(0,a,i),f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=new Uint8Array(new Int32Array(h).buffer),y=t.dataIdMap.get(o.dataId).id;return Xi(f,m,Ca[s.dtype],l,c,d,g,p,y),o}};let Zi;const Ji={kernelName:$e,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,c=n.makeOutput(a.shape,a.dtype),d=n.dataIdMap.get(c.dataId).id,h=r.shape.length,p=a.shape.length,f=0===h||h>1||1===p?1:u(a.shape.slice(1));return Zi(i,o,l,f,d),c},setupFunc:function(e){Zi=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};let Qi;const eo={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){Qi=e.wasm.cwrap(Re,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===u(a.shape)||Qi(r,s),a}},to=Ra("Sin");let no;const ro={kernelName:Le,backendName:"wasm",setupFunc:function(e){no=e.wasm.cwrap(Le,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=u(n.shape)/o;return 0===u(s.shape)||no(a,i,o,l),s}},ao={kernelName:"SpaceToBatchND",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=u(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);const c=$i.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=Sa(c.shape,s,o,!1),h=Na(d.length,s.length,!1),p=Ea(c.shape,s,o,!1),f=Qa({inputs:{x:c},backend:n,attrs:{shape:d}}),m=Ua({inputs:{x:f},backend:n,attrs:{perm:h}}),g=Qa({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),g}};let so;const io={kernelName:Pe,backendName:"wasm",setupFunc:function(e){so=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],u=r.shape[1],l=t.readSync(s.dataId)[0],c=[o+l,u],d=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(a.dataId).id,p=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(c,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([l],"bool"),w=t.dataIdMap.get(b.dataId).id,x=t.makeOutput([o],r.dtype),v=t.dataIdMap.get(x.dataId).id,k=t.makeOutput([4],"int32"),I=t.dataIdMap.get(k.dataId).id,S=so(d,h,Ca[a.dtype],o,l,u,p,m,y,w,v,I),N=t.readSync(k.dataId);let E;switch(N[0]){case 1:E=`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${N[1]}`;break;case 2:E=`indices(${N[1]}, 0) is invalid: ${N[2]} < 0`;break;case 3:E=function(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}(N[1],N[2],N[3]);break;default:E=""}if(t.disposeData(k.dataId),E)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(x.dataId),new Error(E);let _=f,T=g;return S!==c[0]&&(_=as({inputs:{x:f},attrs:{begin:0,size:[S,u]},backend:t}),T=as({inputs:{x:g},attrs:{begin:0,size:S},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[_,T,b,x]}};let oo;const uo={kernelName:ze,backendName:"wasm",setupFunc:function(e){oo=e.wasm.cwrap(ze,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,c=r.shape[0],d=u(s.shape),h=t.makeOutput([c,d],r.dtype),p=t.dataIdMap.get(h.dataId).id,f=t.makeOutput([d],s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput([3],"int32"),y=t.dataIdMap.get(g.dataId).id;oo(i,o,l,c,p,m,y);const b=t.readSync(g.dataId);let w;switch(b[0]){case 0:w=`only one output dimension may be -1, not both ${b[1]} and ${b[2]}`;break;case 1:w=`size ${b[1]} must be non-negative, not ${b[2]}`;break;case 2:w="reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero";break;case 3:w=function(e,t){return`Input to reshape is a SparseTensor with ${u(e)}\n  dense values, but the requested shape requires a multiple of ${u(t)}. inputShape=${e} outputShape= ${t}`}(Array.from(t.readSync(a.dataId)),Array.from(t.readSync(f.dataId)));break;case 4:w=function(e,t){return`Input to reshape is a tensor with ${u(e)} dense values, but the requested shape has ${u(t)}. inputShape=${e} outputShape=${t}`}(Array.from(t.readSync(a.dataId)),Array.from(t.readSync(f.dataId)));break;default:w=""}if(t.disposeData(g.dataId),w)throw t.disposeData(h.dataId),t.disposeData(f.dataId),new Error(w);return[h,f]}};let lo;function co(e){lo=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function ho(e,t){const{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],u=n.readSync(i.dataId,o-1,o)[0],l=o>0?u+1:0;if(l<0)throw new Error("segment ids must be >= 0");const c=a.shape.slice();c[0]=l;const d=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(s.dataId).id,p=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(c,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;lo(d,Ca[a.dtype],a.shape[0],h,p,m,y,t,0);const b=n.readSync(g.dataId);let w;switch(b[0]){case 0:w="segment ids must be >= 0";break;case 1:w="segment ids are not increasing";break;case 2:w=function(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}(b[1],b[2]);break;case 3:w=`Bad: indices[${b[1]}] == ${b[2]} out of range [0, ${b[3]})`;break;default:w=""}if(n.disposeData(g.dataId),w)throw n.disposeData(f.dataId),new Error(w);return f}const po={kernelName:Be,backendName:"wasm",setupFunc:co,kernelFunc:function(e){return ho(e,!0)}},fo={kernelName:We,backendName:"wasm",setupFunc:co,kernelFunc:function(e){return ho(e,!1)}},mo={kernelName:Oe,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=n,u=d(o,s.shape)[0],l=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"==typeof t)a(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);a(s<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}a(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}(s,i,u),c=new Array(s.shape.length).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[u]=e;const n=as({inputs:{x:s},attrs:{begin:c,size:t},backend:r});return c[u]+=e,n}))}},go=Ra(Me),yo=Ra("Square"),bo=Da(Ue);let wo;const xo={kernelName:Ze,backendName:"wasm",setupFunc:function(e){wo=e.wasm.cwrap(Ze,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return wo(i,a,Ca[s.dtype],u),o}};let vo;const ko={kernelName:Ve,backendName:"wasm",setupFunc:function(e){vo=e.wasm.cwrap(Ve,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:s}=n,{begin:i,end:o,strides:u,beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:w,begin:x,end:v,strides:k}=function(e,t,n,r,a,s,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<d.dims;e++)c&&0!=(1<<e&o)&&d.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,h);let p=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(h.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[h.beginMask&1<<t,h.endMask&1<<t],s=[h.strides[t]>0?0:-1,h.strides[t]>0?r:r-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[t];const i=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){const e=h.begin[t]<0?r+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=r)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=Vn(h.begin[t],0,h.strides[t],r,a,s),h.end[t]=Vn(h.end[t],1,h.strides[t],r,a,s);const e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===r;p=p&&e,f=f&&(0===t&&1===h.strides[t]||e)}else p=p&&1===h.strides[t]&&i,f=f&&(0===t&&1===h.strides[t]||i);let o,u=!1;if(h.beginValid&&h.endValid?(o=h.end[t]-h.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=h.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=h.strides[t]<0?0:Math.trunc(o/h.strides[t])+(o%h.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){const t=h.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==h.finalShapeGatherIndices[t])),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}(s.shape,i,o,u,l,c,d,h,p);let I;if(g)I=Qa({inputs:{x:s},backend:t,attrs:{shape:m}});else if(y||w){a(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=function(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}(x,v,k),n=as({inputs:{x:s},backend:t,attrs:{begin:x,size:e}});I=Qa({inputs:{x:n},backend:t,attrs:{shape:m}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(f,"float32"),n=t.dataIdMap.get(s.dataId).id,r=new Uint8Array(new Int32Array(b(s.shape)).buffer),a=new Uint8Array(new Int32Array(x).buffer),i=new Uint8Array(new Int32Array(v).buffer),o=new Uint8Array(new Int32Array(k).buffer),u=new Uint8Array(new Int32Array(f).buffer),l=new Uint8Array(new Int32Array(b(f)).buffer),c=t.dataIdMap.get(e.dataId).id;vo(n,r,s.shape.length,a,i,o,u,l,f.length,c),I=Qa({inputs:{x:e},backend:t,attrs:{shape:m}}),t.disposeData(e.dataId)}return I}},Io=Da("Sub");let So;const No={kernelName:De,backendName:"wasm",setupFunc:function(e){So=e.wasm.cwrap(De,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let l=o,c=i;const{transposed:d,axes:h,originalAxes:p,inputWasTransposed:f}=Ga(i,a,t);let m=h;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==o&&(c=d,l=e,m=zr(m.length,c.shape.length))}Lr("sum",m,c.shape.length);const[g,y]=Dr(c.shape,m),b=u(y),w=t.makeOutput(g,c.dtype);if(0!==u(c.shape)){const e=t.dataIdMap.get(w.dataId).id;So(l,b,Ca[w.dtype],e)}if(f&&t.disposeData(d.dataId),s){const e=Or(w.shape,p);w.shape=e}return w}},Eo=Ra("Tan"),_o=Ra("Tanh");let To;let Co;let Ao;const $o=[Fa,Ma,Oa,Pa,ja,Ka,Ya,Ja,ns,is,us,ls,ds,ps,ms,ys,bs,ws,ks,Ss,Es,Ts,Cs,As,$s,Rs,Ds,Ls,Ps,zs,Ws,Vs,Hs,qs,Xs,Ys,Zs,Ba,Qs,ei,ti,ni,ri,si,ii,ui,ci,hi,pi,gi,yi,bi,vi,Ii,Ni,Ei,Ti,{kernelName:"OnesLike",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},Ci,$i,Fi,Mi,Oi,Li,Pi,zi,Bi,es,Ui,Gi,ji,qi,Ki,Yi,Ji,eo,to,ss,ro,ao,io,uo,po,fo,mo,go,yo,bo,xo,ko,Io,No,Eo,_o,{kernelName:He,backendName:"wasm",setupFunc:function(e){To=e.wasm.cwrap(He,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];const u=new Uint8Array(new Int32Array(a.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,a.dtype),d=n.dataIdMap.get(c.dataId).id;return To(s,u,a.shape.length,l,o.length,Ca[c.dtype],d),c}},{kernelName:je,backendName:"wasm",setupFunc:function(e){Co=e.wasm.cwrap(je,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a}=t,{k:s,sorted:i}=r,o=n.dataIdMap.get(a.dataId).id,u=new Uint8Array(new Int32Array(a.shape).buffer),l=a.shape.slice();l[l.length-1]=s;const c=n.makeOutput(l,a.dtype),d=n.dataIdMap.get(c.dataId).id,h=n.makeOutput(l,"int32"),p=n.dataIdMap.get(h.dataId).id;return Co(o,u,a.shape.length,Ca[a.dtype],s,i,d,p),[c,h]}},{kernelName:qe,backendName:"wasm",setupFunc:function(e){Ao=e.wasm.cwrap(qe,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,d,h,p]=a.shape,[f,m]=null!=l?l:[d,h],g=[c,f,m,p],y=new Uint8Array(new Int32Array(b(a.shape)).buffer),w=t.makeOutput(g,a.dtype),x=t.dataIdMap.get(w.dataId).id,v=t.dataIdMap.get(a.dataId).id,k=t.dataIdMap.get(s.dataId).id,I="nearest"===i?1:2;let S;switch(o){case"constant":default:S=1;break;case"reflect":S=2;break;case"wrap":S=3;break;case"nearest":S=4}return Ao(v,k,s.shape[0]>1,c,f,m,p,h,d,y,a.shape.length-1,I,S,u,x),w}},Va,{kernelName:Xe,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i),d=new Array(o).fill(0),h=a.shape.slice();h[s]=1;for(let e=0;e<c.length;e++)d[s]=e,c[e]=as({inputs:{x:a},attrs:{begin:d,size:h},backend:n});return c.map((e=>{let{dataId:t,dtype:n}=e;return{dataId:t,dtype:n,shape:u}}))}},{kernelName:Ye,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of $o)ut(e);const Fo=T();Fo.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),Fo.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(Fo.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var Ro=n(950),Mo=n.n(Ro),Do=n(235),Oo=n.n(Do);class Lo extends t{constructor(t){super(),this.wasm=t,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(Ho),jo=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new e(this,Gt)}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=ft();return e(),{kernelMs:ft()-t}}move(e,t,n,r,a){const s=this.dataIdNextNumber++;if("string"===r){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}const i=u(n),o=i*f(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){const{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||u(s);const o=f(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=u(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap(e){let{shape:t,dtype:n,dataId:r}=e;const a=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(r),i=u(t);switch(n){case"float32":return new Float32Array(a,s,i);case"int32":return new Int32Array(a,s,i);case"bool":return new Uint8Array(a,s,i);default:throw new Error(`Unknown dtype ${n}`)}}}function Po(e,t,n){if(null!=Bo)return Bo;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=Uo&&null!=Uo[r]?Uo[r]:n+r}const zo=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let Bo=null,Wo=null,Uo={},Vo=!1,Go=!1,Ho=-1,jo=null;!function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;Gt.registerBackend(e,t,n)}("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([T().getAsync("WASM_HAS_SIMD_SUPPORT"),T().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?Po(e,t,null!=Wo?Wo:r):r+n}};var s;Go&&(a.instantiateWasm=(s=Po(e,t,null!=Wo?Wo:""),(e,t)=>(function(e,t){return T().platform.fetch(e,{credentials:"same-origin"})}(s).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,o=!1;a.onAbort=()=>{o||Vo||(Vo=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==Bo?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Mo().toString()],{type:"text/javascript"}),i=Mo()(a)):i=Oo()(a),i.then((e=>{o=!0,Vo=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}();return new Lo(e)}),2);var qo="node_modules/@vladmandic/face-api/dist/face-api.esm.js",Ko=Object.defineProperty,Xo=(e=>n(741))(),Yo=(e,t)=>{for(var n in t)Ko(e,n,{get:t[n],enumerable:!0})},Zo={};Yo(Zo,{Abs:()=>Bl,Acos:()=>Wl,Acosh:()=>Ul,AdadeltaOptimizer:()=>Rk,AdagradOptimizer:()=>Mk,AdamOptimizer:()=>Dk,AdamaxOptimizer:()=>Ok,Add:()=>Vl,AddN:()=>Gl,All:()=>Hl,Any:()=>jl,ArgMax:()=>ql,ArgMin:()=>Kl,Asin:()=>Xl,Asinh:()=>Yl,Atan:()=>Zl,Atan2:()=>Ql,Atanh:()=>Jl,AvgPool:()=>ec,AvgPool3D:()=>nc,AvgPool3DGrad:()=>rc,AvgPoolGrad:()=>tc,BackendWasm:()=>BQ,BatchMatMul:()=>ac,BatchToSpaceND:()=>sc,Bincount:()=>ic,BroadcastArgs:()=>uc,BroadcastTo:()=>oc,Callback:()=>HF,CallbackList:()=>O_,Cast:()=>lc,Ceil:()=>cc,ClipByValue:()=>dc,Complex:()=>hc,ComplexAbs:()=>pc,Concat:()=>fc,Conv2D:()=>mc,Conv2DBackpropFilter:()=>gc,Conv2DBackpropInput:()=>yc,Conv3D:()=>bc,Conv3DBackpropFilterV2:()=>wc,Conv3DBackpropInputV2:()=>xc,Cos:()=>vc,Cosh:()=>kc,CropAndResize:()=>Sc,Cumsum:()=>Ic,CustomCallback:()=>z_,DataStorage:()=>Du,DenseBincount:()=>Nc,DepthToSpace:()=>Ec,DepthwiseConv2dNative:()=>_c,DepthwiseConv2dNativeBackpropFilter:()=>Tc,DepthwiseConv2dNativeBackpropInput:()=>Cc,Diag:()=>Ac,Dilation2D:()=>$c,Dilation2DBackpropFilter:()=>Rc,Dilation2DBackpropInput:()=>Fc,ENV:()=>Ll,EarlyStopping:()=>ZF,Einsum:()=>Dc,Elu:()=>Oc,EluGrad:()=>Lc,Environment:()=>Fl,Equal:()=>zc,Erf:()=>Pc,Exp:()=>Bc,ExpandDims:()=>Wc,Expm1:()=>Uc,FFT:()=>Vc,Fill:()=>Gc,FlipLeftRight:()=>Hc,Floor:()=>jc,FloorDiv:()=>qc,FromPixels:()=>Bh,FusedBatchNorm:()=>Kc,FusedConv2D:()=>Vh,FusedDepthwiseConv2D:()=>Gh,GPGPUContext:()=>eG,GatherNd:()=>Yc,GatherV2:()=>Xc,GraphModel:()=>TM,Greater:()=>Zc,GreaterEqual:()=>Jc,History:()=>P_,IFFT:()=>ed,Identity:()=>Qc,Imag:()=>td,InputSpec:()=>k_,IsFinite:()=>nd,IsInf:()=>rd,IsNan:()=>ad,KernelBackend:()=>Ou,LRN:()=>md,LRNGrad:()=>gd,LayerVariable:()=>w_,LayersModel:()=>KT,LeakyRelu:()=>sd,Less:()=>id,LessEqual:()=>od,LinSpace:()=>ud,Log:()=>ld,Log1p:()=>cd,LogSoftmax:()=>fd,LogicalAnd:()=>dd,LogicalNot:()=>hd,LogicalOr:()=>pd,MathBackendWebGL:()=>pH,Max:()=>yd,MaxPool:()=>wd,MaxPool3D:()=>vd,MaxPool3DGrad:()=>kd,MaxPoolGrad:()=>xd,MaxPoolWithArgmax:()=>Id,Maximum:()=>bd,Mean:()=>Sd,Min:()=>Nd,Minimum:()=>Ed,MirrorPad:()=>_d,Mod:()=>Td,MomentumOptimizer:()=>Pk,Multinomial:()=>Cd,Multiply:()=>Ad,Neg:()=>$d,NonMaxSuppressionV3:()=>Rd,NonMaxSuppressionV4:()=>Md,NonMaxSuppressionV5:()=>Dd,NotEqual:()=>Fd,OP_SCOPE_SUFFIX:()=>If,OneHot:()=>Ld,OnesLike:()=>Od,Optimizer:()=>Fk,OptimizerConstructors:()=>Bk,Pack:()=>Pd,PadV2:()=>zd,Pool:()=>Bd,Pow:()=>Wd,Prelu:()=>Ud,Prod:()=>Vd,RMSPropOptimizer:()=>zk,RNN:()=>eA,Range:()=>Gd,Rank:()=>Bp,Real:()=>Hd,RealDiv:()=>Mc,Reciprocal:()=>jd,Reduction:()=>ak,Relu:()=>qd,Relu6:()=>Qd,Reshape:()=>Kd,ResizeBilinear:()=>Zd,ResizeBilinearGrad:()=>Jd,ResizeNearestNeighbor:()=>Xd,ResizeNearestNeighborGrad:()=>Yd,Reverse:()=>eh,RotateWithOffset:()=>Wh,Round:()=>th,Rsqrt:()=>nh,SGDOptimizer:()=>Lk,ScatterNd:()=>rh,Select:()=>ah,Selu:()=>sh,Sequential:()=>ZT,Sigmoid:()=>ch,Sign:()=>lh,Sin:()=>oh,Sinh:()=>uh,Slice:()=>ih,Softmax:()=>gh,Softplus:()=>dh,SpaceToBatchND:()=>fh,SparseFillEmptyRows:()=>yh,SparseReshape:()=>bh,SparseSegmentMean:()=>wh,SparseSegmentSum:()=>xh,SparseToDense:()=>vh,SplitV:()=>mh,Sqrt:()=>hh,Square:()=>Ih,SquaredDifference:()=>kh,Step:()=>zh,StridedSlice:()=>Sh,StringNGrams:()=>Nh,StringSplit:()=>Eh,StringToHashBucketFast:()=>_h,Sub:()=>Th,Sum:()=>ph,SymbolicTensor:()=>I_,Tan:()=>Ch,Tanh:()=>Ah,Tensor:()=>Lp,TensorBuffer:()=>Mp,Tile:()=>$h,TopK:()=>Fh,Transform:()=>Rh,Transpose:()=>Mh,Unique:()=>Dh,Unpack:()=>Oh,UnsortedSegmentSum:()=>Lh,Variable:()=>zp,ZerosLike:()=>Ph,_FusedMatMul:()=>Uh,abs:()=>fy,acos:()=>my,acosh:()=>gy,add:()=>cy,addN:()=>yy,all:()=>by,any:()=>wy,argMax:()=>xy,argMin:()=>vy,asin:()=>ky,asinh:()=>Iy,atan:()=>Sy,atan2:()=>Ny,atanh:()=>Ey,avgPool:()=>Gy,avgPool3d:()=>Hy,backend:()=>uy,backend_util:()=>Gk,basicLSTMCell:()=>Yy,batchNorm:()=>Jy,batchNorm2d:()=>Qy,batchNorm3d:()=>eb,batchNorm4d:()=>tb,batchToSpaceND:()=>Zy,bincount:()=>nb,booleanMaskAsync:()=>iv,broadcastArgs:()=>rb,broadcastTo:()=>ab,broadcast_util:()=>Gm,browser:()=>Xm,buffer:()=>wm,callbacks:()=>JF,cast:()=>xm,ceil:()=>sb,clipByValue:()=>ib,clone:()=>vm,complex:()=>Nf,concat:()=>jy,concat1d:()=>ob,concat2d:()=>ub,concat3d:()=>lb,concat4d:()=>cb,constraints:()=>nN,conv1d:()=>hb,conv2d:()=>db,conv2dTranspose:()=>fb,conv3d:()=>mb,conv3dTranspose:()=>yb,copyRegisteredKernels:()=>np,cos:()=>bb,cosh:()=>wb,cosineWindow:()=>gv,cumsum:()=>xb,customGrad:()=>iw,data:()=>$M,denseBincount:()=>vb,deprecationWarn:()=>jg,depthToSpace:()=>kb,depthwiseConv2d:()=>Ib,deregisterOp:()=>nR,device_util:()=>pf,diag:()=>Sb,dilation2d:()=>Nb,disableDeprecationWarnings:()=>Hg,dispose:()=>Jg,disposeVariables:()=>qg,div:()=>hy,divNoNan:()=>Cb,dot:()=>Ab,dropout:()=>fv,einsum:()=>$b,elu:()=>Fb,enableDebugMode:()=>Gg,enableProdMode:()=>Vg,enclosingPowerOfTwo:()=>mv,engine:()=>Kg,env:()=>Dl,equal:()=>Eb,erf:()=>Rb,exp:()=>Mb,expandDims:()=>Db,expm1:()=>Ob,eye:()=>Pb,fft:()=>Dx,fill:()=>zb,findBackend:()=>sy,findBackendFactory:()=>iy,floor:()=>Bb,floorDiv:()=>dy,forceHalfFloat:()=>mH,fused:()=>bv,gather:()=>Wb,gatherND:()=>pv,gather_util:()=>ng,getBackend:()=>ry,getGradient:()=>Yh,getKernel:()=>Xh,getKernelsForBackend:()=>Zh,getThreadsCount:()=>QQ,gpgpu_util:()=>$V,grad:()=>tw,grads:()=>nw,greater:()=>Ub,greaterEqual:()=>Vb,ifft:()=>Ox,imag:()=>Gb,image:()=>_k,inTopKAsync:()=>yv,initializers:()=>UN,input:()=>tC,io:()=>Im,irfft:()=>Lx,isFinite:()=>Hb,isInf:()=>jb,isNaN:()=>qb,keep:()=>Qg,kernel_impls:()=>VI,layers:()=>u_,leakyRelu:()=>Kb,less:()=>Xb,lessEqual:()=>Yb,linalg:()=>Tk,linspace:()=>Zb,loadGraphModel:()=>CM,loadLayersModel:()=>eC,localResponseNormalization:()=>Jb,log:()=>Qb,log1p:()=>ew,logSigmoid:()=>cw,logSoftmax:()=>fw,logSumExp:()=>Iw,logicalAnd:()=>Sw,logicalNot:()=>Nw,logicalOr:()=>Ew,logicalXor:()=>_w,losses:()=>Ck,matMul:()=>Bm,math:()=>zm,max:()=>dw,maxPool:()=>Tw,maxPool3d:()=>Cw,maxPoolWithArgmax:()=>Aw,maximum:()=>$w,mean:()=>Fw,memory:()=>Xg,meshgrid:()=>Dw,metrics:()=>SF,min:()=>Ow,minimum:()=>Lw,mirrorPad:()=>Pw,mod:()=>zw,model:()=>JT,models:()=>BF,moments:()=>Ww,movingAverage:()=>lv,mul:()=>py,multiRNNCell:()=>Uw,multinomial:()=>Vw,neg:()=>uw,nextFrame:()=>Vk,norm:()=>uv,notEqual:()=>Gw,oneHot:()=>Wm,ones:()=>Mw,onesLike:()=>Hw,op:()=>Sf,outerProduct:()=>jw,pad:()=>qw,pad1d:()=>Kw,pad2d:()=>Xw,pad3d:()=>Yw,pad4d:()=>Zw,pool:()=>Qw,pow:()=>ex,prelu:()=>tx,print:()=>km,prod:()=>nx,profile:()=>Yg,rand:()=>rx,randomGamma:()=>ux,randomNormal:()=>lx,randomUniform:()=>cx,range:()=>dx,ready:()=>ny,real:()=>hx,reciprocal:()=>px,registerBackend:()=>oy,registerCallbackConstructor:()=>nC,registerGradient:()=>Qh,registerKernel:()=>Jh,registerOp:()=>eR,regularizers:()=>WF,relu:()=>fx,relu6:()=>mx,removeBackend:()=>ay,reshape:()=>Vy,reverse:()=>gx,reverse1d:()=>yx,reverse2d:()=>bx,reverse3d:()=>wx,reverse4d:()=>xx,rfft:()=>zx,round:()=>vx,rsqrt:()=>kx,scalar:()=>Ix,scatterND:()=>cv,scatter_util:()=>ag,selu:()=>Sx,separableConv2d:()=>Nx,sequential:()=>QT,serialization:()=>Eg,setBackend:()=>ty,setPlatform:()=>ly,setThreadsCount:()=>JQ,setWasmPath:()=>KQ,setWasmPaths:()=>XQ,setWebGLContext:()=>QW,setdiff1dAsync:()=>Ex,sigmoid:()=>qy,sign:()=>_x,signal:()=>Ek,sin:()=>Tx,sinh:()=>Cx,slice:()=>Ky,slice1d:()=>Ax,slice2d:()=>$x,slice3d:()=>Fx,slice4d:()=>Rx,slice_util:()=>ug,softmax:()=>Mx,softplus:()=>lw,spaceToBatchND:()=>Jw,sparse:()=>Ak,sparseToDense:()=>hv,spectral:()=>Nk,split:()=>Px,sqrt:()=>Bx,square:()=>Bw,squaredDifference:()=>Wx,squeeze:()=>Ux,stack:()=>Vx,step:()=>Gx,stridedSlice:()=>Hx,string:()=>$k,sub:()=>hw,sum:()=>pw,sumOutType:()=>Qp,tan:()=>jx,tanh:()=>Xy,tensor:()=>_f,tensor1d:()=>qx,tensor2d:()=>Kx,tensor3d:()=>Ym,tensor4d:()=>Xx,tensor5d:()=>Yx,tensor6d:()=>Zx,tensor_util:()=>Yp,test_util:()=>Ag,tidy:()=>Zg,tile:()=>Lb,time:()=>ey,topk:()=>Jx,train:()=>Wk,transpose:()=>Um,truncatedNormal:()=>Qx,unique:()=>ev,unregisterGradient:()=>tp,unregisterKernel:()=>ep,unsortedSegmentSum:()=>tv,unstack:()=>nv,upcastType:()=>Jp,util:()=>ap,valueAndGrad:()=>rw,valueAndGrads:()=>aw,variable:()=>rv,variableGrads:()=>sw,version:()=>t0,version_converter:()=>AM,version_core:()=>Ug,version_layers:()=>kT,version_wasm:()=>e0,version_webgl:()=>fH,webgl:()=>gH,webgl_util:()=>GW,where:()=>_b,whereAsync:()=>sv,zeros:()=>Rw,zerosLike:()=>Tb});var Jo=Object.create,Qo=Object.defineProperty,eu=Object.getOwnPropertyDescriptor,tu=Object.getOwnPropertyNames,nu=Object.getPrototypeOf,ru=Object.prototype.hasOwnProperty,au=(e,t)=>function(){return t||(0,e[tu(e)[0]])((t={exports:{}}).exports,t),t.exports},su=(e,t)=>{for(var n in t)Qo(e,n,{get:t[n],enumerable:!0})},iu=(e,t)=>{return((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let n of tu(t))ru.call(e,n)||"default"===n||Qo(e,n,{get:()=>t[n],enumerable:!(r=eu(t,n))||r.enumerable});return e})((n=Qo(null!=e?Jo(nu(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0}),Qo(n,"__esModule",{value:!0})),e);var n},ou=au({"node_modules/.pnpm/long@4.0.0/node_modules/long/src/long.js"(e,t){t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=l(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function u(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return I}else{if(e<=-m)return S;if(e+1>=m)return k}return e<0?u(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=u,r.fromBits=l;var c=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var a=u(c(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+o),n);if(o<8){var h=u(c(n,o));s=s.mul(h).add(u(l))}else s=(s=s.mul(a)).add(u(l))}return s.unsigned=t,s}function h(e,t){return"number"==typeof e?u(e,t):"string"==typeof e?d(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=d,r.fromValue=h;var p=4294967296,f=p*p,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var w=o(1);r.ONE=w;var x=o(1,!0);r.UONE=x;var v=o(-1);r.NEG_ONE=v;var k=l(-1,2147483647,!1);r.MAX_VALUE=k;var I=l(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=l(0,-2147483648,!1);r.MIN_VALUE=S;var N=r.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=u(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=u(c(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),l=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1==(1&this.low)},N.isEven=function(){return 0==(1&this.low)},N.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(w)},N.neg=N.negate,N.add=function(e){a(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,d+=(p+=r+u)>>>16,c+=(d+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=h(e)),n)return l(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(S))return e.isOdd()?S:y;if(e.eq(S))return this.isOdd()?S:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return u(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,m=0,b=0,w=0;return b+=(w+=i*p)>>>16,m+=(b+=s*p)>>>16,b&=65535,m+=(b+=i*d)>>>16,f+=(m+=r*p)>>>16,m&=65535,f+=(m+=s*d)>>>16,m&=65535,f+=(m+=i*c)>>>16,f+=t*p+r*d+s*c+i*o,l((b&=65535)<<16|(w&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return x;s=b}else{if(this.eq(S))return e.eq(w)||e.eq(v)?S:e.eq(S)?w:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?w:v:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:c(2,i-48),d=u(t),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=u(t-=o,this.unsigned)).mul(e);d.isZero()&&(d=w),s=s.add(d),r=r.sub(p)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=h(e)),n?l((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return l(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}}),uu=au({"(disabled):node_modules/.pnpm/node-fetch@2.6.6/node_modules/node-fetch/browser.js"(){}}),lu=au({"(disabled):util"(){}}),cu=au({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),du=au({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),hu=au({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),pu=au({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),fu=au({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),mu=au({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),gu=au({"(disabled):crypto"(){}}),yu=au({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,r){var a,s=this,i=256,o=r.pow(i,6),u=r.pow(2,52),l=2*u,c=255;function d(t,n,c){var d=[],y=m(f((n=1==n?{entropy:!0}:n||{}).entropy?[t,g(e)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(i):(t=new Uint8Array(i),(s.crypto||s.msCrypto).getRandomValues(t)),g(t)}catch(t){var n=s.navigator,r=n&&n.plugins;return[+new Date,s,r,s.screen,g(e)]}}():t,3),d),b=new h(d),w=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|b.g(4)},w.quick=function(){return b.g(4)/4294967296},w.double=w,m(g(b.S),e),(n.pass||c||function(e,t,n,a){return a&&(a.S&&p(a,b),e.state=function(){return p(b,{})}),n?(r.random=e,t):e})(w,y,"global"in n?n.global:this==r,n.state)}function h(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(r.seedrandom=d,m(r.random(),e),"object"==typeof t&&t.exports){t.exports=d;try{a=gu()}catch(e){}}else"function"==typeof define&&n.amdO&&define((function(){return d}))}([],Math)}}),bu=au({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/index.js"(e,t){var n=cu(),r=du(),a=hu(),s=pu(),i=fu(),o=mu(),u=yu();u.alea=n,u.xor128=r,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u}}),wu=au({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),xu=au({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),vu=au({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),ku=au({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),Iu=au({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),Su=au({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),Nu=au({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,r,a){var s,i=256,o=a.pow(i,6),u=a.pow(2,52),l=2*u,c=255;function d(t,n,c){var d=[],y=m(f((n=1==n?{entropy:!0}:n||{}).entropy?[t,g(r)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),g(t)}catch(t){var n=e.navigator,a=n&&n.plugins;return[+new Date,e,a,e.screen,g(r)]}}():t,3),d),b=new h(d),w=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|b.g(4)},w.quick=function(){return b.g(4)/4294967296},w.double=w,m(g(b.S),r),(n.pass||c||function(e,t,n,r){return r&&(r.S&&p(r,b),e.state=function(){return p(b,{})}),n?(a.random=e,t):e})(w,y,"global"in n?n.global:this==a,n.state)}function h(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(a.random(),r),"object"==typeof t&&t.exports){t.exports=d;try{s=gu()}catch(e){}}else"function"==typeof define&&n.amdO?define((function(){return d})):a.seedrandom=d}("undefined"!=typeof self?self:e,[],Math)}}),Eu=au({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/index.js"(e,t){var n=wu(),r=xu(),a=vu(),s=ku(),i=Iu(),o=Su(),u=Nu();u.alea=n,u.xor128=r,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u}}),_u=au({"(disabled):node_modules/.pnpm/string_decoder@1.1.1/node_modules/string_decoder/lib/string_decoder.js"(){}}),Tu=au({"(disabled):fs"(){}}),Cu=au({"(disabled):path"(){}}),Au=au({"(disabled):worker_threads"(){}}),$u=au({"(disabled):perf_hooks"(){}}),Fu=au({"(disabled):os"(){}}),Ru=au({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.13.0_@tensorflow+tfjs-core@3.13.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||qo,function(e){function t(){return R.buffer!=O&&ee(R.buffer),L}function a(){return R.buffer!=O&&ee(R.buffer),P}function s(){return R.buffer!=O&&ee(R.buffer),z}function i(){return R.buffer!=O&&ee(R.buffer),B}function o(){return R.buffer!=O&&ee(R.buffer),W}var u,l,c,d=void 0!==(e=e||{})?e:{};d.ready=new Promise((function(e,t){u=e,l=t})),"undefined"!=typeof process&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var h,p={};for(h in d)d.hasOwnProperty(h)&&(p[h]=d[h]);var f=[],m=function(e,t){throw t},g=!1,y=!1,b=!1,w=!1;g="object"==typeof window,y="function"==typeof importScripts,b="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,w=!g&&!b&&!y;var x=d.ENVIRONMENT_IS_PTHREAD||!1;x&&(O=d.buffer);var v,k,I,S,N,E="";function _(e){return d.locateFile?d.locateFile(e,E):E+e}if(b){var T;E=y?Cu().dirname(E)+"/":"//",v=function(e,t){return S||(S=Tu()),N||(N=Cu()),e=N.normalize(e),S.readFileSync(e,t?null:"utf8")},I=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),f=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof gn))throw e})),process.on("unhandledRejection",we),m=function(e){process.exit(e)},d.inspect=function(){return"[Emscripten Module object]"};try{T=Au()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=T.Worker}else w?("undefined"!=typeof read&&(v=function(e){return read(e)}),I=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(V("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?f=scriptArgs:void 0!==arguments&&(f=arguments),"function"==typeof quit&&(m=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(g||y)&&(y?E=self.location.href:"undefined"!=typeof document&&document.currentScript&&(E=document.currentScript.src),void 0!==r&&r&&(E=r),E=0!==E.indexOf("blob:")?E.substr(0,E.lastIndexOf("/")+1):"",b?(v=function(e,t){return S||(S=Tu()),N||(N=Cu()),e=N.normalize(e),S.readFileSync(e,t?null:"utf8")},I=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t}):(v=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(I=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),k=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));b&&"undefined"==typeof performance&&(n.g.performance=$u().performance);var C,A=d.print||console.log.bind(console),$=d.printErr||console.warn.bind(console);for(h in p)p.hasOwnProperty(h)&&(d[h]=p[h]);function F(e){F.shown||(F.shown={}),F.shown[e]||(F.shown[e]=1,$(e))}p=null,d.arguments&&(f=d.arguments),d.thisProgram&&d.thisProgram,d.quit&&(m=d.quit),Atomics.load,Atomics.store,Atomics.compareExchange,d.wasmBinary&&(C=d.wasmBinary);var R,M,D=d.noExitRuntime||!0;"object"!=typeof WebAssembly&&we("no native wasm support detected");var O,L,P,z,B,W,U=!1;function V(e,t){e||we("Assertion failed: "+t)}function G(e){var t=d["_"+e];return V(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function H(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);Y(e,t=dn(n),n)}return t},array:function(e){var t=dn(e.length);return J(e,t),t}},i=G(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=ln()),o[l]=c(r[l])):o[l]=r[l]}var d,h=i.apply(null,o);return d=h,h="string"===t?K(d):"boolean"===t?Boolean(d):d,0!==u&&cn(u),h}function j(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?G(e):function(){return H(e,t,n,arguments)}}function q(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function K(e,t){return e?q(a(),e,t):""}function X(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function Y(e,t,n){return X(e,a(),t,n)}function Z(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function J(e,n){t().set(e,n)}function Q(e,t){return e%t>0&&(e+=t-e%t),e}function ee(e){O=e,d.HEAP8=L=new Int8Array(e),d.HEAP16=new Int16Array(e),d.HEAP32=z=new Int32Array(e),d.HEAPU8=P=new Uint8Array(e),d.HEAPU16=new Uint16Array(e),d.HEAPU32=B=new Uint32Array(e),d.HEAPF32=new Float32Array(e),d.HEAPF64=W=new Float64Array(e)}var te,ne=d.INITIAL_MEMORY||16777216;if(x)R=d.wasmMemory,O=d.buffer;else if(d.wasmMemory)R=d.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:ne/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw $("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");R&&(O=R.buffer),ne=O.byteLength,ee(O);var re=[],ae=[],se=[],ie=[],oe=[];function ue(){if(!x){if(d.preRun)for("function"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)he(d.preRun.shift());$e(re)}}function le(){x||$e(ae)}function ce(){x||$e(se)}function de(){if(!x){if(d.postRun)for("function"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;)pe(d.postRun.shift());$e(oe)}}function he(e){re.unshift(e)}function pe(e){oe.unshift(e)}x||ae.push({func:function(){qt()}});var fe=0,me=null,ge=null;function ye(e){V(!x,"addRunDependency cannot be used in a pthread worker"),fe++,d.monitorRunDependencies&&d.monitorRunDependencies(fe)}function be(e){if(fe--,d.monitorRunDependencies&&d.monitorRunDependencies(fe),0==fe&&(null!==me&&(clearInterval(me),me=null),ge)){var t=ge;ge=null,t()}}function we(e){d.onAbort&&d.onAbort(e),x&&console.error("Pthread aborting at "+(new Error).stack),$(e+=""),U=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function xe(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}d.preloadedImages={},d.preloadedAudios={};var ve="data:application/octet-stream;base64,";function ke(e){return xe(e,ve)}var Ie="file://";function Se(e){return xe(e,Ie)}var Ne="tfjs-backend-wasm-threaded-simd.wasm";function Ee(e){try{if(e==Ne&&C)return new Uint8Array(C);if(I)return I(e);throw"both async and sync fetching of the wasm failed"}catch(e){we(e)}}function _e(){if(!C&&(g||y)){if("function"==typeof fetch&&!Se(Ne))return fetch(Ne,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Ne+"'";return e.arrayBuffer()})).catch((function(){return Ee(Ne)}));if(k)return new Promise((function(e,t){k(Ne,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Ee(Ne)}))}function Te(){var e={a:jt};function t(e,t){var n=e.exports;if(d.asm=n,te=d.asm.I,M=t,!x){var r=Pe.unusedWorkers.length;Pe.unusedWorkers.forEach((function(e){Pe.loadWasmModuleToWorker(e,(function(){--r||be()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return _e().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){$("failed to asynchronously prepare wasm: "+e),we(e)}))}if(x||ye(),d.instantiateWasm)try{return d.instantiateWasm(e,t)}catch(e){return $("Module.instantiateWasm callback failed with error: "+e),!1}return(C||"function"!=typeof WebAssembly.instantiateStreaming||ke(Ne)||Se(Ne)||"function"!=typeof fetch?r(n):fetch(Ne,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return $("wasm streaming compile failed: "+e),$("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l),{}}ke(Ne)||(Ne=_(Ne));var Ce={10664:function(){throw"Canceled!"},10682:function(e,t){setTimeout((function(){rn(e,t)}),0)}};function Ae(){Pe.initRuntime()}function $e(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?te.get(n)():te.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(d)}}var Fe={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Re(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),mn>>2),a=0;if(r==e&&Atomics.compareExchange(s(),mn>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function Me(e){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=Pe.pthreads[e];t.worker.terminate(),Pe.freeThreadData(t),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function De(e){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Pe.pthreads[e].worker.postMessage({cmd:"cancel"})}function Oe(e){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Pe.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;Pe.returnWorkerToPool(n)}}d._emscripten_futex_wake=Re;var Le,Pe={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=0;e<8;++e)Pe.allocateUnusedWorker()},initRuntime:function(){for(var e=Kt(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=Kt(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),un(e,!y,1),tn(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Pe.threadExitHandlers.length>0;)Pe.threadExitHandlers.pop()();x&&Jt()&&Qt()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Pe.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),Re(e+0,2147483647),un(0,0,0)},threadExit:function(e){var t=Jt();t&&(Pe.runExitHandlersAndDeinitThread(t,e),x&&postMessage({cmd:"exit"}))},threadCancel:function(){Pe.runExitHandlersAndDeinitThread(Jt(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Pe.pthreads)(r=Pe.pthreads[e])&&r.worker&&Pe.returnWorkerToPool(r.worker);Pe.pthreads={};for(var t=0;t<Pe.unusedWorkers.length;++t)(n=Pe.unusedWorkers[t]).terminate();for(Pe.unusedWorkers=[],t=0;t<Pe.runningWorkers.length;++t){var n,r=(n=Pe.runningWorkers[t]).pthread;Pe.freeThreadData(r),n.terminate()}Pe.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,Xt(t),Xt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Xt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Pe.runWithoutMainThreadQueuedCalls((function(){delete Pe.pthreads[e.pthread.threadInfoStruct],Pe.unusedWorkers.push(e),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(e),1),Pe.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[fn>>2]=0;try{e()}finally{s()[fn>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Pe.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Jt()){var s=Pe.pthreads[r.targetThread];return s?s.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Pe.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)en();else if("spawnThread"===a)Dt(n.data);else if("cleanupThread"===a)Oe(r.thread);else if("killThread"===a)Me(r.thread);else if("cancelThread"===a)De(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)A("Thread "+r.threadId+": "+r.text);else if("printErr"===a)$("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&Pe.returnWorkerToPool(e);else if("exitProcess"===a)try{bn(r.returnCode)}catch(e){if(e instanceof gn)return;throw e}else"cancelDone"===a?Pe.returnWorkerToPool(e):"objectTransfer"===a?Pe.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):$("worker sent an unknown command "+a);Pe.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){$("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},b&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:d.mainScriptUrlOrBlob||r,wasmMemory:R,wasmModule:M})},allocateUnusedWorker:function(){var e=_("tfjs-backend-wasm-threaded-simd.worker.js");Pe.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Pe.unusedWorkers.length&&(Pe.allocateUnusedWorker(),Pe.loadWasmModuleToWorker(Pe.unusedWorkers[0])),Pe.unusedWorkers.length>0?Pe.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function ze(e,t){hn(e,t),cn(e)}function Be(){return D}function We(e,t){return te.get(e)(t)}function Ue(e,t,n,r){we("Assertion failed: "+K(e)+", at: "+[t?K(t):"unknown filename",n,r?K(r):"unknown function"])}function Ve(e,t){_main(e,t)}function Ge(e){return s()[Yt()>>2]=e,e}function He(e,t){if(x)return Qe(1,1,e,t)}function je(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Pe.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function qe(){we()}function Ke(e,t,n){var r=nt(t,n);return Ce[e].apply(null,r)}function Xe(e,t){}function Ye(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(g){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),mn>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),mn>>2,0),-73;if(0==Atomics.exchange(s(),mn>>2,0))break;if(en(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),mn>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function Ze(e,t,n){a().copyWithin(e,t,t+n)}function Je(){return b?Fu().cpus().length:navigator.hardwareConcurrency}function Qe(e,t){for(var n=arguments.length-2,r=ln(),a=n,s=dn(8*a),i=s>>3,u=0;u<n;u++){var l=arguments[2+u];o()[i+u]=l}var c=sn(e,a,s,t);return cn(r),c}d.establishStackSpace=ze,d.getNoExitRuntime=Be,d.invokeEntryPoint=We,Le=b?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?function(){return performance.now()-d.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var et=[],tt=[];function nt(e,t){var n;for(tt.length=0,t>>=2;n=a()[e++];){var r=n<105;r&&1&t&&t++,tt.push(r?o()[t++>>1]:s()[t]),++t}return tt}function rt(e,t,n){et.length=t;for(var r=n>>3,a=0;a<t;a++)et[a]=o()[r+a];return(e<0?Ce[-e-1]:Ht[e]).apply(null,et)}function at(){return a().length}function st(e){try{return R.grow(e-O.byteLength+65535>>>16),ee(R.buffer),1}catch(e){}}function it(e){var t=at();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),st(Math.min(n,Q(Math.max(e,a),65536))))return!0}return!1}var ot={inEventHandler:0,removeAllEventListeners:function(){for(var e=ot.eventHandlers.length-1;e>=0;--e)ot._removeHandler(e);ot.eventHandlers=[],ot.deferredCalls=[]},registerRemoveEventListeners:function(){ot.removeEventListenersRegistered||(ie.push(ot.removeAllEventListeners),ot.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in ot.deferredCalls){var s=ot.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}ot.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ot.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<ot.deferredCalls.length;++t)ot.deferredCalls[t].targetFunction==e&&(ot.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ot.inEventHandler&&ot.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ot.canPerformEventHandlerRequests())for(var e=0;e<ot.deferredCalls.length;++e){var t=ot.deferredCalls[e];ot.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ot.eventHandlers.length;++n)ot.eventHandlers[n].target!=e||t&&t!=ot.eventHandlers[n].eventTypeString||ot._removeHandler(n--)},_removeHandler:function(e){var t=ot.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ot.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ot.inEventHandler,ot.currentEventHandler=e,ot.runDeferredCalls(),e.handlerFunc(t),ot.runDeferredCalls(),--ot.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ot.eventHandlers.push(e),ot.registerRemoveEventListeners();else for(var n=0;n<ot.eventHandlers.length;++n)ot.eventHandlers[n].target==e.target&&ot.eventHandlers[n].eventTypeString==e.eventTypeString&&ot._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=ln(),o=dn(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,on(0,e,637534208,t,r,o),cn(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Pe.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function ut(e){var t=Z(e)+1,n=Kt(t);return Y(e,n,t),n}function lt(e,t,n,r){var a=ln(),i=dn(12),o=0;t&&(o=ut(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=r,on(0,e,657457152,0,o,i),cn(a)}function ct(e,t,n,r){lt(e,t=t?K(t):"",n,r)}function dt(e){return e>2?K(e):e}var ht=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function pt(e){return e=dt(e),ht[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function ft(e){return pt(e)}function mt(e,t,n){var r=ft(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(ct(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function gt(e,t,n){return x?Qe(2,1,e,t,n):mt(e,t,n)}function yt(e,t,n){return ft(e)?mt(e,t,n):gt(e,t,n)}function bt(e){}function wt(e,t){}function xt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function vt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function kt(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function It(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var St={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){St.lastError||(St.lastError=e)},getNewId:function(e){for(var t=St.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=K(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?St.registerContext(n,t):0},registerContext:function(e,t){var n=Kt(8);s()[n+4>>2]=Jt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),St.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&St.initExtensions(r),n},makeContextCurrent:function(e){return St.currentContext=St.contexts[e],d.ctx=Tt=St.currentContext&&St.currentContext.GLctx,!(e&&!Tt)},getContext:function(e){return St.contexts[e]},deleteContext:function(e){St.currentContext===St.contexts[e]&&(St.currentContext=null),"object"==typeof ot&&ot.removeAllHandlersOnTarget(St.contexts[e].GLctx.canvas),St.contexts[e]&&St.contexts[e].GLctx.canvas&&(St.contexts[e].GLctx.canvas.GLctxObject=void 0),Xt(St.contexts[e].handle),St.contexts[e]=null},initExtensions:function(e){if(e||(e=St.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;xt(t),vt(t),kt(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),It(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=St.programs[e],n=St.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=Tt.getProgramParameter(t,35718),s=0;s<a;++s){var i=Tt.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=Tt.getUniformLocation(t,o);if(u){var l=St.getNewId(St.uniforms);r[o]=[i.size,l],St.uniforms[l]=u;for(var c=1;c<i.size;++c){var d=o+"["+c+"]";u=Tt.getUniformLocation(t,d),l=St.getNewId(St.uniforms),St.uniforms[l]=u}}}}},Nt=["default","low-power","high-performance"];function Et(e,t){var n=t>>2,r=s()[n+6],a={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:Nt[r],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=ft(e);return i?a.explicitSwapControl?0:St.createContext(i,a):0}function _t(e,t){return Et(e,t)}var Tt,Ct={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Ct.buffers[e];0===t||10===t?((1===e?A:$)(q(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Ct.varargs+=4,s()[Ct.varargs-4>>2]},getStr:function(e){return K(e)},get64:function(e,t){return e}};function At(e){return x?Qe(3,1,e):0}function $t(e,t,n,r,a){if(x)return Qe(4,1,e,t,n,r,a)}function Ft(e,t,n,r){if(x)return Qe(5,1,e,t,n,r);for(var i=0,o=0;o<n;o++){for(var u=s()[t+8*o>>2],l=s()[t+(8*o+4)>>2],c=0;c<l;c++)Ct.printChar(e,a()[u+c]);i+=l}return s()[r>>2]=i,0}function Rt(e){var t=Pe.threadExitHandlers.pop();e&&t()}function Mt(e,t){Pe.threadExitHandlers.push((function(){te.get(e)(t)}))}function Dt(e){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Pe.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Pe.runningWorkers.push(t);for(var n=Kt(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=Pe.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+20,e.stackSize),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.stackSize),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached);var l=Zt()+40;Atomics.store(i(),u+43,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Ot(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return $("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return $("pthread_create called with a null thread pointer!"),28;var a=[];if(x&&0===a.length)return an(687865856,e,t,n,r);var o=0,u=0,l=0;t&&-1!=t?(o=s()[t>>2],o+=81920,u=s()[t+8>>2],l=0!==s()[t+12>>2]):o=2097152;var c=0==u;c?u=pn(16,o):V((u-=o)>0);for(var d=Kt(228),h=0;h<57;++h)i()[(d>>2)+h]=0;s()[e>>2]=d,s()[d+12>>2]=d;var p=d+152;s()[p>>2]=p;var f={stackBase:u,stackSize:o,allocatedOwnStack:c,detached:l,startRoutine:n,pthread_ptr:d,arg:r,transferList:a};return x?(f.cmd="spawnThread",postMessage(f,a)):Dt(f),0}function Lt(){if(x){var e=Jt();if(e&&!Atomics.load(i(),e+56>>2)&&2==Atomics.load(i(),e+0>>2))throw"Canceled!"}}function Pt(){b||y||F("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function zt(e,t,n){if(!e)return $("pthread_join attempted on a null thread pointer!"),Fe.ESRCH;if(x&&Jt()==e)return $("PThread "+e+" is attempting to join to itself!"),Fe.EDEADLK;if(!x&&nn()==e)return $("Main thread "+e+" is attempting to join to itself!"),Fe.EDEADLK;if(s()[e+12>>2]!==e)return $("pthread_join attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),Fe.ESRCH;if(Atomics.load(i(),e+64>>2))return $("Attempted to join thread "+e+", which was already detached!"),Fe.EINVAL;for(n&&Pt();;){var r=Atomics.load(i(),e+0>>2);if(1==r){var a=Atomics.load(i(),e+4>>2);return t&&(s()[t>>2]=a),Atomics.store(i(),e+64>>2,1),x?postMessage({cmd:"cleanupThread",thread:e}):Oe(e),0}if(!n)return Fe.EBUSY;Lt(),x||en(),Ye(e+0,r,x?100:1)}}function Bt(e,t){return zt(e,t,!0)}function Wt(e){if(x)return Qe(6,1,e);switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ge(28),-1}x||Pe.initMainThreadBlock();var Ut,Vt,Gt,Ht=[null,He,gt,At,$t,Ft,Wt],jt={e:Ue,r:Ve,x:je,b:qe,y:Ke,j:Xe,d:Ye,c:Re,f:Le,p:Ze,A:Je,u:rt,q:it,v:yt,i:bt,s:wt,w:_t,l:At,n:$t,g:Ft,o:Ae,a:R||d.wasmMemory,z:Rt,k:Mt,h:Ot,m:Bt,t:Wt},qt=(Te(),d.___wasm_call_ctors=function(){return(qt=d.___wasm_call_ctors=d.asm.B).apply(null,arguments)}),Kt=(d._init=function(){return(d._init=d.asm.C).apply(null,arguments)},d._init_with_threads_count=function(){return(d._init_with_threads_count=d.asm.D).apply(null,arguments)},d._get_threads_count=function(){return(d._get_threads_count=d.asm.E).apply(null,arguments)},d._register_tensor=function(){return(d._register_tensor=d.asm.F).apply(null,arguments)},d._dispose_data=function(){return(d._dispose_data=d.asm.G).apply(null,arguments)},d._dispose=function(){return(d._dispose=d.asm.H).apply(null,arguments)},d._Abs=function(){return(d._Abs=d.asm.J).apply(null,arguments)},d._Add=function(){return(d._Add=d.asm.K).apply(null,arguments)},d._AddN=function(){return(d._AddN=d.asm.L).apply(null,arguments)},d._All=function(){return(d._All=d.asm.M).apply(null,arguments)},d._Any=function(){return(d._Any=d.asm.N).apply(null,arguments)},d._ArgMax=function(){return(d._ArgMax=d.asm.O).apply(null,arguments)},d._AvgPool=function(){return(d._AvgPool=d.asm.P).apply(null,arguments)},d._BatchMatMul=function(){return(d._BatchMatMul=d.asm.Q).apply(null,arguments)},d._Ceil=function(){return(d._Ceil=d.asm.R).apply(null,arguments)},d._ClipByValue=function(){return(d._ClipByValue=d.asm.S).apply(null,arguments)},d._Conv2D=function(){return(d._Conv2D=d.asm.T).apply(null,arguments)},d._Conv2DBackpropInput=function(){return(d._Conv2DBackpropInput=d.asm.U).apply(null,arguments)},d._Cos=function(){return(d._Cos=d.asm.V).apply(null,arguments)},d._Cosh=function(){return(d._Cosh=d.asm.W).apply(null,arguments)},d._CropAndResize=function(){return(d._CropAndResize=d.asm.X).apply(null,arguments)},d._Cumsum=function(){return(d._Cumsum=d.asm.Y).apply(null,arguments)},d._DepthToSpace=function(){return(d._DepthToSpace=d.asm.Z).apply(null,arguments)},d._DepthwiseConv2dNative=function(){return(d._DepthwiseConv2dNative=d.asm._).apply(null,arguments)},d._Elu=function(){return(d._Elu=d.asm.$).apply(null,arguments)},d._Equal=function(){return(d._Equal=d.asm.aa).apply(null,arguments)},d._Exp=function(){return(d._Exp=d.asm.ba).apply(null,arguments)},d._FlipLeftRight=function(){return(d._FlipLeftRight=d.asm.ca).apply(null,arguments)},d._Floor=function(){return(d._Floor=d.asm.da).apply(null,arguments)},d._FloorDiv=function(){return(d._FloorDiv=d.asm.ea).apply(null,arguments)},d._FusedBatchNorm=function(){return(d._FusedBatchNorm=d.asm.fa).apply(null,arguments)},d._FusedConv2D=function(){return(d._FusedConv2D=d.asm.ga).apply(null,arguments)},d._FusedDepthwiseConv2D=function(){return(d._FusedDepthwiseConv2D=d.asm.ha).apply(null,arguments)},d._Gather=function(){return(d._Gather=d.asm.ia).apply(null,arguments)},d._GatherNd=function(){return(d._GatherNd=d.asm.ja).apply(null,arguments)},d._Greater=function(){return(d._Greater=d.asm.ka).apply(null,arguments)},d._GreaterEqual=function(){return(d._GreaterEqual=d.asm.la).apply(null,arguments)},d._LeakyRelu=function(){return(d._LeakyRelu=d.asm.ma).apply(null,arguments)},d._Less=function(){return(d._Less=d.asm.na).apply(null,arguments)},d._LessEqual=function(){return(d._LessEqual=d.asm.oa).apply(null,arguments)},d._Log=function(){return(d._Log=d.asm.pa).apply(null,arguments)},d._LogicalAnd=function(){return(d._LogicalAnd=d.asm.qa).apply(null,arguments)},d._Max=function(){return(d._Max=d.asm.ra).apply(null,arguments)},d._MaxPool=function(){return(d._MaxPool=d.asm.sa).apply(null,arguments)},d._Maximum=function(){return(d._Maximum=d.asm.ta).apply(null,arguments)},d._Mean=function(){return(d._Mean=d.asm.ua).apply(null,arguments)},d._Min=function(){return(d._Min=d.asm.va).apply(null,arguments)},d._Minimum=function(){return(d._Minimum=d.asm.wa).apply(null,arguments)},d._MirrorPad=function(){return(d._MirrorPad=d.asm.xa).apply(null,arguments)},d._Multiply=function(){return(d._Multiply=d.asm.ya).apply(null,arguments)},d._Neg=function(){return(d._Neg=d.asm.za).apply(null,arguments)},d._NonMaxSuppressionV3=function(){return(d._NonMaxSuppressionV3=d.asm.Aa).apply(null,arguments)},d._NonMaxSuppressionV4=function(){return(d._NonMaxSuppressionV4=d.asm.Ba).apply(null,arguments)},d._NonMaxSuppressionV5=function(){return(d._NonMaxSuppressionV5=d.asm.Ca).apply(null,arguments)},d._NotEqual=function(){return(d._NotEqual=d.asm.Da).apply(null,arguments)},d._OneHot=function(){return(d._OneHot=d.asm.Ea).apply(null,arguments)},d._PadV2=function(){return(d._PadV2=d.asm.Fa).apply(null,arguments)},d._Pow=function(){return(d._Pow=d.asm.Ga).apply(null,arguments)},d._Prelu=function(){return(d._Prelu=d.asm.Ha).apply(null,arguments)},d._Prod=function(){return(d._Prod=d.asm.Ia).apply(null,arguments)},d._RealDiv=function(){return(d._RealDiv=d.asm.Ja).apply(null,arguments)},d._Relu=function(){return(d._Relu=d.asm.Ka).apply(null,arguments)},d._Relu6=function(){return(d._Relu6=d.asm.La).apply(null,arguments)},d._ResizeBilinear=function(){return(d._ResizeBilinear=d.asm.Ma).apply(null,arguments)},d._Reverse=function(){return(d._Reverse=d.asm.Na).apply(null,arguments)},d._RotateWithOffset=function(){return(d._RotateWithOffset=d.asm.Oa).apply(null,arguments)},d._Round=function(){return(d._Round=d.asm.Pa).apply(null,arguments)},d._Rsqrt=function(){return(d._Rsqrt=d.asm.Qa).apply(null,arguments)},d._ScatterNd=function(){return(d._ScatterNd=d.asm.Ra).apply(null,arguments)},d._SelectV2=function(){return(d._SelectV2=d.asm.Sa).apply(null,arguments)},d._Sigmoid=function(){return(d._Sigmoid=d.asm.Ta).apply(null,arguments)},d._Sin=function(){return(d._Sin=d.asm.Ua).apply(null,arguments)},d._Softmax=function(){return(d._Softmax=d.asm.Va).apply(null,arguments)},d._SparseFillEmptyRows=function(){return(d._SparseFillEmptyRows=d.asm.Wa).apply(null,arguments)},d._SparseReshape=function(){return(d._SparseReshape=d.asm.Xa).apply(null,arguments)},d._SparseSegmentReduction=function(){return(d._SparseSegmentReduction=d.asm.Ya).apply(null,arguments)},d._Sqrt=function(){return(d._Sqrt=d.asm.Za).apply(null,arguments)},d._Square=function(){return(d._Square=d.asm._a).apply(null,arguments)},d._SquaredDifference=function(){return(d._SquaredDifference=d.asm.$a).apply(null,arguments)},d._Step=function(){return(d._Step=d.asm.ab).apply(null,arguments)},d._StridedSlice=function(){return(d._StridedSlice=d.asm.bb).apply(null,arguments)},d._Sub=function(){return(d._Sub=d.asm.cb).apply(null,arguments)},d._Sum=function(){return(d._Sum=d.asm.db).apply(null,arguments)},d._Tan=function(){return(d._Tan=d.asm.eb).apply(null,arguments)},d._Tanh=function(){return(d._Tanh=d.asm.fb).apply(null,arguments)},d._Tile=function(){return(d._Tile=d.asm.gb).apply(null,arguments)},d._TopK=function(){return(d._TopK=d.asm.hb).apply(null,arguments)},d._Transform=function(){return(d._Transform=d.asm.ib).apply(null,arguments)},d._Transpose=function(){return(d._Transpose=d.asm.jb).apply(null,arguments)},d.__FusedMatMul=function(){return(d.__FusedMatMul=d.asm.kb).apply(null,arguments)},d._malloc=function(){return(Kt=d._malloc=d.asm.lb).apply(null,arguments)}),Xt=d._free=function(){return(Xt=d._free=d.asm.mb).apply(null,arguments)},Yt=d.___errno_location=function(){return(Yt=d.___errno_location=d.asm.nb).apply(null,arguments)},Zt=d._emscripten_get_global_libc=function(){return(Zt=d._emscripten_get_global_libc=d.asm.ob).apply(null,arguments)},Jt=d._pthread_self=function(){return(Jt=d._pthread_self=d.asm.pb).apply(null,arguments)},Qt=d.___pthread_tsd_run_dtors=function(){return(Qt=d.___pthread_tsd_run_dtors=d.asm.qb).apply(null,arguments)},en=d._emscripten_main_thread_process_queued_calls=function(){return(en=d._emscripten_main_thread_process_queued_calls=d.asm.rb).apply(null,arguments)},tn=(d._emscripten_current_thread_process_queued_calls=function(){return(d._emscripten_current_thread_process_queued_calls=d.asm.sb).apply(null,arguments)},d._emscripten_register_main_browser_thread_id=function(){return(tn=d._emscripten_register_main_browser_thread_id=d.asm.tb).apply(null,arguments)}),nn=d._emscripten_main_browser_thread_id=function(){return(nn=d._emscripten_main_browser_thread_id=d.asm.ub).apply(null,arguments)},rn=d.__emscripten_do_dispatch_to_thread=function(){return(rn=d.__emscripten_do_dispatch_to_thread=d.asm.vb).apply(null,arguments)},an=d._emscripten_sync_run_in_main_thread_4=function(){return(an=d._emscripten_sync_run_in_main_thread_4=d.asm.wb).apply(null,arguments)},sn=d._emscripten_run_in_main_runtime_thread_js=function(){return(sn=d._emscripten_run_in_main_runtime_thread_js=d.asm.xb).apply(null,arguments)},on=d.__emscripten_call_on_thread=function(){return(on=d.__emscripten_call_on_thread=d.asm.yb).apply(null,arguments)},un=(d._emscripten_tls_init=function(){return(d._emscripten_tls_init=d.asm.zb).apply(null,arguments)},d.__emscripten_thread_init=function(){return(un=d.__emscripten_thread_init=d.asm.Ab).apply(null,arguments)}),ln=d.stackSave=function(){return(ln=d.stackSave=d.asm.Bb).apply(null,arguments)},cn=d.stackRestore=function(){return(cn=d.stackRestore=d.asm.Cb).apply(null,arguments)},dn=d.stackAlloc=function(){return(dn=d.stackAlloc=d.asm.Db).apply(null,arguments)},hn=d._emscripten_stack_set_limits=function(){return(hn=d._emscripten_stack_set_limits=d.asm.Eb).apply(null,arguments)},pn=d._memalign=function(){return(pn=d._memalign=d.asm.Fb).apply(null,arguments)},fn=d.__emscripten_allow_main_runtime_queued_calls=10656,mn=d.__emscripten_main_thread_futex=12292;function gn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function yn(e){if(e=e||f,!(fe>0)){if(x)return u(d),le(),void postMessage({cmd:"loaded"});ue(),fe>0||(d.setStatus?(d.setStatus("Running..."),setTimeout((function(){setTimeout((function(){d.setStatus("")}),1),t()}),1)):t())}function t(){Ut||(Ut=!0,d.calledRun=!0,U||(le(),ce(),u(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),de()))}}function bn(e,t){if(!t||!D||0!==e){if(!t&&x)throw postMessage({cmd:"exitProcess",returnCode:e}),new gn(e);D||(Pe.terminateAllThreads(),d.onExit&&d.onExit(e),U=!0),m(e,new gn(e))}}if(d.cwrap=j,d.PThread=Pe,d.PThread=Pe,d.wasmMemory=R,d.ExitStatus=gn,ge=function e(){Ut||yn(),Ut||(ge=e)},d.run=yn,d.preInit)for("function"==typeof d.preInit&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();if(x&&(D=!1,Pe.initWorker()),yn(),c&&(Vt={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!c.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!c.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Gt=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Gt=e}if(Vt){var wn=Gt._dispose;Gt._dispose=function(){wn(),Vt.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Vt.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&n.amdO?define([],(function(){return a})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=a)}}),Mu=au({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.13.0_@tensorflow+tfjs-core@3.13.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||qo,function(e){var t,n,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,r){t=e,n=r})),"undefined"!=typeof process&&process.listeners&&(a={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o={};for(i in s)s.hasOwnProperty(i)&&(o[i]=s[i]);var u=[],l=!1,c=!1,d=!1,h=!1;l="object"==typeof window,c="function"==typeof importScripts,d="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,h=!l&&!d&&!c;var p,f,m,g,y,b="";function w(e){return s.locateFile?s.locateFile(e,b):b+e}d?(b=c?Cu().dirname(b)+"/":"//",p=function(e,t){return g||(g=Tu()),y||(y=Cu()),e=y.normalize(e),g.readFileSync(e,t?null:"utf8")},m=function(e){var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),N(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),u=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof Oe))throw e})),process.on("unhandledRejection",re),s.inspect=function(){return"[Emscripten Module object]"}):h?("undefined"!=typeof read&&(p=function(e){return read(e)}),m=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?u=scriptArgs:void 0!==arguments&&(u=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(l||c)&&(c?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),r&&(b=r),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",p=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},c&&(m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),f=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var x,v,k=s.print||console.log.bind(console),I=s.printErr||console.warn.bind(console);for(i in o)o.hasOwnProperty(i)&&(s[i]=o[i]);o=null,s.arguments&&(u=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(x=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&re("no native wasm support detected");var S=!1;function N(e,t){e||re("Assertion failed: "+t)}function E(e){var t=s["_"+e];return N(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function _(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);L(e,t=De(n),n)}return t},array:function(e){var t=De(e.length);return P(e,t),t}},i=E(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=Re()),o[l]=c(r[l])):o[l]=r[l]}var d,h=i.apply(null,o);return d=h,h="string"===t?D(d):"boolean"===t?Boolean(d):d,0!==u&&Me(u),h}function T(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?E(e):function(){return _(e,t,n,arguments)}}var C,A,$,F,R="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function M(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&R)return R.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function D(e,t){return e?M($,e,t):""}function O(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function L(e,t,n){return O(e,$,t,n)}function P(e,t){A.set(e,t)}function z(e,t){return e%t>0&&(e+=t-e%t),e}function B(e){C=e,s.HEAP8=A=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=F=new Int32Array(e),s.HEAPU8=$=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var W,U=[],V=[],G=[],H=[];function j(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)Y(s.preRun.shift());pe(U)}function q(){pe(V)}function K(){pe(G)}function X(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)Z(s.postRun.shift());pe(H)}function Y(e){U.unshift(e)}function Z(e){H.unshift(e)}V.push({func:function(){$e()}});var J=0,Q=null,ee=null;function te(e){J++,s.monitorRunDependencies&&s.monitorRunDependencies(J)}function ne(e){if(J--,s.monitorRunDependencies&&s.monitorRunDependencies(J),0==J&&(null!==Q&&(clearInterval(Q),Q=null),ee)){var t=ee;ee=null,t()}}function re(e){s.onAbort&&s.onAbort(e),I(e+=""),S=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw n(t),t}function ae(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}s.preloadedImages={},s.preloadedAudios={};var se="data:application/octet-stream;base64,";function ie(e){return ae(e,se)}var oe="file://";function ue(e){return ae(e,oe)}var le="tfjs-backend-wasm.wasm";function ce(e){try{if(e==le&&x)return new Uint8Array(x);if(m)return m(e);throw"both async and sync fetching of the wasm failed"}catch(e){re(e)}}function de(){if(!x&&(l||c)){if("function"==typeof fetch&&!ue(le))return fetch(le,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+le+"'";return e.arrayBuffer()})).catch((function(){return ce(le)}));if(f)return new Promise((function(e,t){f(le,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ce(le)}))}function he(){var e={a:Ae};function t(e,t){var n=e.exports;s.asm=n,B((v=s.asm.j).buffer),W=s.asm.r,ne()}function r(e){t(e.instance)}function a(t){return de().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){I("failed to asynchronously prepare wasm: "+e),re(e)}))}if(te(),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return I("Module.instantiateWasm callback failed with error: "+e),!1}return(x||"function"!=typeof WebAssembly.instantiateStreaming||ie(le)||ue(le)||"function"!=typeof fetch?a(r):fetch(le,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(r,(function(e){return I("wasm streaming compile failed: "+e),I("falling back to ArrayBuffer instantiation"),a(r)}))}))).catch(n),{}}function pe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?W.get(n)():W.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}function fe(){re()}function me(e,t,n){$.copyWithin(e,t,t+n)}function ge(){return $.length}function ye(e){try{return v.grow(e-C.byteLength+65535>>>16),B(v.buffer),1}catch(e){}}function be(e){var t=ge(),n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),ye(Math.min(n,z(Math.max(e,a),65536))))return!0}return!1}ie(le)||(le=w(le));var we={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=we.buffers[e];0===t||10===t?((1===e?k:I)(M(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return we.varargs+=4,F[we.varargs-4>>2]},getStr:function(e){return D(e)},get64:function(e,t){return e}};function xe(e){return 0}function ve(e,t,n,r,a){}function ke(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=F[t+8*s>>2],o=F[t+(8*s+4)>>2],u=0;u<o;u++)we.printChar(e,$[i+u]);a+=o}return F[r>>2]=a,0}function Ie(){return 6}function Se(){return 28}function Ne(e){return F[Fe()>>2]=e,e}function Ee(e){switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ne(28),-1}var _e,Te,Ce,Ae={a:fe,d:me,e:be,f:xe,c:ve,b:ke,h:Ie,g:Se,i:Ee},$e=(he(),s.___wasm_call_ctors=function(){return($e=s.___wasm_call_ctors=s.asm.k).apply(null,arguments)}),Fe=(s._init=function(){return(s._init=s.asm.l).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.m).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.n).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.o).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.p).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.q).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.s).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.t).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.u).apply(null,arguments)},s._All=function(){return(s._All=s.asm.v).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.w).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.x).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.y).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.z).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.A).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.B).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.C).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.D).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.E).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.F).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.G).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.H).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.I).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.J).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.K).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.L).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.M).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.N).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.O).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.P).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.Q).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.R).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.S).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.T).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.U).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.V).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.W).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.X).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Y).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.Z).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm._).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.$).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.aa).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.ba).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.ca).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.da).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.ea).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.fa).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.ga).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.ha).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.ia).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.ja).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.ka).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.la).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.ma).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.na).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.oa).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.pa).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.qa).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.ra).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.sa).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.ta).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.ua).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.va).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.wa).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.xa).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.ya).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.za).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.Aa).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.Ba).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Ca).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Da).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Ea).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.Fa).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.Ga).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.Ha).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Ia).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Ja).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.Ka).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.La).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.Ma).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Na).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Oa).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Pa).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Qa).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Ra).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.Sa).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Ta).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Ua).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm.Va).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.Wa).apply(null,arguments)},s._free=function(){return(s._free=s.asm.Xa).apply(null,arguments)},s.___errno_location=function(){return(Fe=s.___errno_location=s.asm.Ya).apply(null,arguments)}),Re=s.stackSave=function(){return(Re=s.stackSave=s.asm.Za).apply(null,arguments)},Me=s.stackRestore=function(){return(Me=s.stackRestore=s.asm._a).apply(null,arguments)},De=s.stackAlloc=function(){return(De=s.stackAlloc=s.asm.$a).apply(null,arguments)};function Oe(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Le(e){function n(){_e||(_e=!0,s.calledRun=!0,S||(q(),K(),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),X()))}e=e||u,J>0||(j(),J>0||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n()))}if(s.cwrap=T,ee=function e(){_e||Le(),_e||(ee=e)},s.run=Le,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(Le(),a&&(Te={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!a.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!a.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)Ce=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");Ce=WasmBackendModuleThreadedSimd}if(Te){var Pe=Ce._dispose;Ce._dispose=function(){Pe(),Te.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Te.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&n.amdO?define([],(function(){return a})):"object"==typeof e&&(e.WasmBackendModule=a)}}),Du=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Ou=class{refCount(e){return Lu("refCount")}incRef(e){return Lu("incRef")}timerAvailable(){return!0}time(e){return Lu("time")}read(e){return Lu("read")}readSync(e){return Lu("readSync")}readToGPU(e,t){return Lu("readToGPU")}numDataIds(){return Lu("numDataIds")}disposeData(e,t){return Lu("disposeData")}write(e,t,n){return Lu("write")}move(e,t,n,r,a){return Lu("move")}memory(){return Lu("memory")}floatPrecision(){return Lu("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Lu("dispose")}};function Lu(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Pu(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Uu(e,t,n)}function zu(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Uu(e,n,r),Uu(t,n,r)}function Bu(e,t,n){return Math.max(e,Math.min(t,n))}function Wu(e){return e%2==0?e:e+1}function Uu(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function Vu(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function Gu(e,t){const n=Math.random();return t*n+(1-n)*e}function Hu(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function ju(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function qu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";ju(Ju(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function Ku(e){ju(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Xu(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),Array.isArray(e)||pl(e)&&!n)for(let r=0;r<e.length;++r)Xu(e[r],t,n);else t.push(e);return t}function Yu(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Zu(e){return 0===e.length}function Ju(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Qu(e){return e%1==0}function el(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function tl(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function nl(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Pu(t),t}function rl(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function al(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0;return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function sl(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function il(e,t){const n=t.length;return ju((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),ju(e.every((e=>Qu(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function ol(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:il(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function ul(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ll(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function cl(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function dl(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function hl(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function pl(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function fl(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ml(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function gl(e){return"string"==typeof e||e instanceof String}function yl(e){return"boolean"==typeof e}function bl(e){return"number"==typeof e}function wl(e){return Array.isArray(e)?wl(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":bl(e)?"float32":gl(e)?"string":yl(e)?"bool":"float32"}function xl(e){return!!(e&&e.constructor&&e.call&&e.apply)}function vl(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function kl(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Il(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=Il(e+t*o,i,n,r)}return a}function Sl(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Il(0,e,t,n)}function Nl(e,t){const n=El(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function El(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function _l(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Sl(e,new Float32Array(n));if("int32"===t)return Sl(e,new Int32Array(n));if("bool"===t)return Sl(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Tl(e){e.forEach((t=>{ju(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Cl(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Al(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function $l(e){return e&&e.then&&"function"==typeof e.then}var Fl=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Rl,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Dl().getBool("IS_TEST")||Dl().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Dl().getBool("IS_TEST")||Dl().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if($l(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}};function Rl(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return Ml(t,r[0],r[1]),r.join("=")})),t}function Ml(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function Dl(){return Ll}var Ol,Ll=null;function Pl(){if(null==Ol){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ol=e}return Ol}function zl(e,t){const n=function(){const e=Pl();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}var Bl="Abs",Wl="Acos",Ul="Acosh",Vl="Add",Gl="AddN",Hl="All",jl="Any",ql="ArgMax",Kl="ArgMin",Xl="Asin",Yl="Asinh",Zl="Atan",Jl="Atanh",Ql="Atan2",ec="AvgPool",tc="AvgPoolGrad",nc="AvgPool3D",rc="AvgPool3DGrad",ac="BatchMatMul",sc="BatchToSpaceND",ic="Bincount",oc="BroadcastTo",uc="BroadcastArgs",lc="Cast",cc="Ceil",dc="ClipByValue",hc="Complex",pc="ComplexAbs",fc="Concat",mc="Conv2D",gc="Conv2DBackpropFilter",yc="Conv2DBackpropInput",bc="Conv3D",wc="Conv3DBackpropFilterV2",xc="Conv3DBackpropInputV2",vc="Cos",kc="Cosh",Ic="Cumsum",Sc="CropAndResize",Nc="DenseBincount",Ec="DepthToSpace",_c="DepthwiseConv2dNative",Tc="DepthwiseConv2dNativeBackpropFilter",Cc="DepthwiseConv2dNativeBackpropInput",Ac="Diag",$c="Dilation2D",Fc="Dilation2DBackpropInput",Rc="Dilation2DBackpropFilter",Mc="RealDiv",Dc="Einsum",Oc="Elu",Lc="EluGrad",Pc="Erf",zc="Equal",Bc="Exp",Wc="ExpandDims",Uc="Expm1",Vc="FFT",Gc="Fill",Hc="FlipLeftRight",jc="Floor",qc="FloorDiv",Kc="FusedBatchNorm",Xc="GatherV2",Yc="GatherNd",Zc="Greater",Jc="GreaterEqual",Qc="Identity",ed="IFFT",td="Imag",nd="IsFinite",rd="IsInf",ad="IsNan",sd="LeakyRelu",id="Less",od="LessEqual",ud="LinSpace",ld="Log",cd="Log1p",dd="LogicalAnd",hd="LogicalNot",pd="LogicalOr",fd="LogSoftmax",md="LRN",gd="LRNGrad",yd="Max",bd="Maximum",wd="MaxPool",xd="MaxPoolGrad",vd="MaxPool3D",kd="MaxPool3DGrad",Id="MaxPoolWithArgmax",Sd="Mean",Nd="Min",Ed="Minimum",_d="MirrorPad",Td="Mod",Cd="Multinomial",Ad="Multiply",$d="Neg",Fd="NotEqual",Rd="NonMaxSuppressionV3",Md="NonMaxSuppressionV4",Dd="NonMaxSuppressionV5",Od="OnesLike",Ld="OneHot",Pd="Pack",zd="PadV2",Bd="Pool",Wd="Pow",Ud="Prelu",Vd="Prod",Gd="Range",Hd="Real",jd="Reciprocal",qd="Relu",Kd="Reshape",Xd="ResizeNearestNeighbor",Yd="ResizeNearestNeighborGrad",Zd="ResizeBilinear",Jd="ResizeBilinearGrad",Qd="Relu6",eh="Reverse",th="Round",nh="Rsqrt",rh="ScatterNd",ah="Select",sh="Selu",ih="Slice",oh="Sin",uh="Sinh",lh="Sign",ch="Sigmoid",dh="Softplus",hh="Sqrt",ph="Sum",fh="SpaceToBatchND",mh="SplitV",gh="Softmax",yh="SparseFillEmptyRows",bh="SparseReshape",wh="SparseSegmentMean",xh="SparseSegmentSum",vh="SparseToDense",kh="SquaredDifference",Ih="Square",Sh="StridedSlice",Nh="StringNGrams",Eh="StringSplit",_h="StringToHashBucketFast",Th="Sub",Ch="Tan",Ah="Tanh",$h="Tile",Fh="TopK",Rh="Transform",Mh="Transpose",Dh="Unique",Oh="Unpack",Lh="UnsortedSegmentSum",Ph="ZerosLike",zh="Step",Bh="FromPixels",Wh="RotateWithOffset",Uh="_FusedMatMul",Vh="FusedConv2D",Gh="FusedDepthwiseConv2D";function Hh(){Dl().getBool("IS_TEST")||Dl().getBool("PROD")||console.warn(...arguments)}function jh(){Dl().getBool("IS_TEST")||Dl().getBool("PROD")||console.log(...arguments)}var qh=zl("kernelRegistry",(()=>new Map)),Kh=zl("gradRegistry",(()=>new Map));function Xh(e,t){const n=rp(e,t);return qh.get(n)}function Yh(e){return Kh.get(e)}function Zh(e){const t=qh.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function Jh(e){const{kernelName:t,backendName:n}=e,r=rp(t,n);qh.has(r)&&Hh(`The kernel '${t}' for backend '${n}' is already registered`),qh.set(r,e)}function Qh(e){const{kernelName:t}=e;Kh.has(t)&&Dl().getBool("DEBUG")&&Hh(`Overriding the gradient for '${t}'`),Kh.set(t,e)}function ep(e,t){const n=rp(e,t);if(!qh.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);qh.delete(n)}function tp(e){if(!Kh.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Kh.delete(e)}function np(e,t){Zh(e).forEach((e=>{Jh(Object.assign({},e,{backendName:t}))}))}function rp(e,t){return`${t}_${e}`}var ap={};su(ap,{arraysEqual:()=>Ju,assert:()=>ju,assertNonNegativeIntegerDimensions:()=>Tl,assertNonNull:()=>Ku,assertShapesMatch:()=>qu,bytesFromStringArray:()=>ml,bytesPerElement:()=>fl,checkConversionForErrors:()=>cl,clamp:()=>Bu,computeStrides:()=>kl,createScalarValue:()=>kp,createShuffledIndices:()=>nl,decodeString:()=>_p,distSquared:()=>Hu,encodeString:()=>Ep,fetch:()=>Np,fingerPrint64:()=>vp,flatten:()=>Xu,getArrayFromDType:()=>ll,getTypedArrayFromDType:()=>ul,hasEncodingLoss:()=>hl,hexToLong:()=>op,indexToLoc:()=>Al,inferDtype:()=>wl,inferFromImplicitShape:()=>sl,isBoolean:()=>yl,isFunction:()=>xl,isInt:()=>Qu,isNumber:()=>bl,isPromise:()=>$l,isScalarShape:()=>Zu,isString:()=>gl,isTypedArray:()=>pl,isValidDtype:()=>dl,locToIndex:()=>Cl,makeOnesTypedArray:()=>Nl,makeZerosNestedTypedArray:()=>_l,makeZerosTypedArray:()=>El,nearestDivisor:()=>vl,nearestLargerEven:()=>Wu,now:()=>Sp,parseAxisParam:()=>il,randUniform:()=>Gu,repeatedTry:()=>al,rightPad:()=>rl,shuffle:()=>Pu,shuffleCombo:()=>zu,sizeFromShape:()=>Yu,sizeToSquarishShape:()=>tl,squeezeShape:()=>ol,sum:()=>Vu,swap:()=>Uu,tanh:()=>el,toNestedArray:()=>Sl,toTypedArray:()=>Ip});var sp=iu(ou()),ip=sp.default||sp;function op(e){return ip.fromString(e,!0,16)}var up=op("c3a5c85c97cb3127"),lp=op("b492b66fbe98f273"),cp=op("9ae16a3b2f90404f");function dp(e){return e.xor(e.shru(47))}function hp(e,t,n){const r=e.slice(t,t+n);return ip.fromBytes(Array.from(r),!0,!0)}function pp(e,t){return hp(e,t,8)}function fp(e,t){return hp(e,t,4)}function mp(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function gp(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:op("9ddfea08eb382d69"),r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function yp(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=mp(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(mp(a,44)),[a.add(r),s.add(i)]}(pp(e,t),pp(e,t+8),pp(e,t+16),pp(e,t+24),n,r)}function bp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=cp.add(2*t),r=pp(e,0).add(cp),a=pp(e,t-8);return gp(mp(a,37).mul(n).add(r),mp(r,25).add(a).mul(n),n)}if(t>=4){const n=cp.add(2*t);return gp(fp(e,0).shl(3).add(t),fp(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return dp(cp.mul(n).xor(up.mul(r))).mul(cp)}return cp}function wp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=cp.add(2*t),r=pp(e,0).mul(lp),a=pp(e,8),s=pp(e,t-8).mul(n),i=pp(e,t-16).mul(cp);return gp(mp(r.add(a),43).add(mp(s,30)).add(i),r.add(mp(a.add(cp),18)).add(s),n)}function xp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=cp.add(2*t),r=pp(e,0).mul(cp),a=pp(e,8),s=pp(e,t-8).mul(n),i=pp(e,t-16).mul(cp),o=mp(r.add(a),43).add(mp(s,30)).add(i),u=gp(o,r.add(mp(a.add(cp),18)).add(s),n),l=pp(e,16).mul(n),c=pp(e,24),d=o.add(pp(e,t-32)).mul(n),h=u.add(pp(e,t-24)).mul(n);return gp(mp(l.add(c),43).add(mp(d,30)).add(h),l.add(mp(c.add(r),18)).add(d),n)}function vp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=ip.fromNumber(81,!0);if(t<=32)return t<=16?bp(e,t):wp(e,t);if(t<=64)return xp(e,t);let r=n,a=n.mul(lp).add(113),s=dp(a.mul(cp).add(113)).mul(cp),i=[ip.UZERO,ip.UZERO],o=[ip.UZERO,ip.UZERO];r=r.mul(cp).add(pp(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=mp(r.add(a).add(i[0]).add(pp(e,u+8)),37).mul(lp),a=mp(a.add(i[1]).add(pp(e,u+48)),42).mul(lp),r=r.xor(o[1]),a=a.add(i[0]).add(pp(e,u+40)),s=mp(s.add(o[0]),33).mul(lp),i=yp(e,u,i[1].mul(lp),r.add(o[0])),o=yp(e,u+32,s.add(o[1]),a.add(pp(e,u+16))),[s,r]=[r,s],u+=64}while(u!==l);const d=lp.add(s.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=mp(r.add(a).add(i[0]).add(pp(e,u+8)),37).mul(d),a=mp(a.add(i[1]).add(pp(e,u+48)),42).mul(d),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(pp(e,u+40))),s=mp(s.add(o[0]),33).mul(d),i=yp(e,u,i[1].mul(d),r.add(o[0])),o=yp(e,u+32,s.add(o[1]),a.add(pp(e,u+16))),[s,r]=[r,s],gp(gp(i[0],o[0],d).add(dp(a).mul(up)).add(s),gp(i[1],o[1],d).add(r),d)}function kp(e,t){return"string"===t?Ep(e):Ip([e],t)}function Ip(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Xu(e)),Dl().getBool("DEBUG")&&cl(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Sp(){return Dl().platform.now()}function Np(e,t){return Dl().platform.fetch(e,t)}function Ep(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Dl().platform.encode(e,t)}function _p(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Dl().platform.decode(e,t)}function Tp(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}function Cp(e,t,n,r){const a=kl(t),s=function(e,t,n,r){const a=Yu(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?Rp(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],Ap(u[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Fp(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function Ap(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:gl(e)?`'${e}'`:"bool"===n?$p(e):parseFloat(e.toFixed(7)).toString(),rl(r,t)}function $p(e){return 0===e?"false":"true"}function Fp(e,t,n,r,a){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[Ap(Rp(e)[0],0,n)]:"bool"===n?[$p(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Rp(r),s=Rp(s)),["["+r.map(((e,t)=>Ap(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Ap(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Rp(e):Array.from(e)).map(((e,t)=>Ap(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),d=r[0]*i,h=[];if(o>20){for(let t=0;t<3;t++){const r=t*d,s=r+d;h.push(...Fp(e.slice(r,s),l,n,c,a,!1))}h.push("...");for(let t=o-3;t<o;t++){const r=t*d,s=r+d;h.push(...Fp(e.slice(r,s),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*d,s=r+d;h.push(...Fp(e.slice(r,s),l,n,c,a,t===o-1))}const p=2===u?",":"";h[0]="["+h[0]+p;for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":f),h}function Rp(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Mp=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Yu(e),null!=n){const e=n.length;ju(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ll(t,this.size),this.strides=kl(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),ju(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const a=this.locToIndex(n);this.values[a]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(const e of t){if(e<0||e>=this.shape[r]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let a=t[t.length-1];for(let e=0;e<t.length-1;++e)a+=this.strides[e]*t[e];return this.values[a]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Dp().makeTensor(this.values,this.shape,this.dtype)}},Dp=null,Op=null,Lp=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Yu(e),this.strides=kl(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Op.buffer(this.shape,this.dtype,e)}bufferSync(){return Op.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Sl(this.shape,e,"complex64"===this.dtype)}arraySync(){return Sl(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Dp().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>_p(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Dp().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Dp().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>_p(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Dp().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Dp().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Op.print(this,e)}clone(){return this.throwIfDisposed(),Op.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Cp(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Op.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),Dp().makeVariable(this,e,t,n)}};function Pp(){return zl("Tensor",(()=>Lp))}Object.defineProperty(Lp,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Pp();var zp=class extends Lp{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ju(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Dp().disposeTensor(this),this.dataId=e.dataId,Dp().incRef(this,null)}dispose(){Dp().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(zp,Symbol.hasInstance,{value:e=>e instanceof Lp&&null!=e.assign&&e.assign instanceof Function});var Bp,Wp,Up,Vp,Gp,Hp,jp,qp,Kp,Xp,Yp={};su(Yp,{assertTypesMatch:()=>tf,getTensorsInContainer:()=>rf,isTensorInList:()=>nf,makeTypesMatch:()=>ef}),(Wp=Bp||(Bp={})).R0="R0",Wp.R1="R1",Wp.R2="R2",Wp.R3="R3",Wp.R4="R4",Wp.R5="R5",Wp.R6="R6",(Vp=Up||(Up={})).float32="float32",Vp.int32="int32",Vp.bool="int32",Vp.complex64="complex64",(Hp=Gp||(Gp={})).float32="float32",Hp.int32="int32",Hp.bool="bool",Hp.complex64="complex64",(qp=jp||(jp={})).float32="float32",qp.int32="float32",qp.bool="float32",qp.complex64="complex64",(Xp=Kp||(Kp={})).float32="complex64",Xp.int32="complex64",Xp.bool="complex64",Xp.complex64="complex64";var Zp={float32:jp,int32:Up,bool:Gp,complex64:Kp};function Jp(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Zp[e][t]}function Qp(e){return Jp(e,"int32")}function ef(e,t){if(e.dtype===t.dtype)return[e,t];const n=Jp(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function tf(e,t){ju(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function nf(e,t){return t.some((t=>t.id===e.id))}function rf(e){const t=[];return af(e,t,new Set),t}function af(e,t,n){if(null==e)return;if(e instanceof Lp)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),af(r,t,n))}}function sf(e){return null!=e.kernelName}var of=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}},uf=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new of}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(Hh(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new class{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?rl(`${r}ms`,9):r.error,o=rl(e,25),u=t.rank,l=t.size,c=rl(t.shape.toString(),14);let d="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;d+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${d}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}})}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=Sp();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:Sp()-i})}if(Dl().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Tp(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}(this.backendInstance),!0}setupRegisteredKernels(){Zh(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Zh(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Ou||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Hh(`Initialization of backend ${e} failed`),Hh(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return Hh(`Initialization of backend ${e} failed`),Hh(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return uf.nextTensorId++}nextVariableId(){return uf.nextVariableId++}clone(e){const t=cf.runKernel(Qc,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return cf.runKernel(lc,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Xh(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=sf(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(sf(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=Xh(t,this.backendName);ju(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,d=sf(e)?null:e.backwardsFunc;let h;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(h=this.profiler.profileKernel(u,l,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs):t=i()})),r&&this.addTapeNode(u,l,t,d,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Yh(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(ju(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&gl(e[0])&&(a=e.map((e=>Ep(e))));const s=r.write(a,t,n),i=new Lp(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=ml(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new Lp(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new zp(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*fl(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof zp||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*fl(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=Yh(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=El(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=rf(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(ju(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));ju(a instanceof Lp,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=Nl(Yu(e),"float32");return cf.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!Ju(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),df);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){var t=this;return ju(xl(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];let s;ju(r.every((e=>e instanceof Lp)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const i={};r.forEach(((e,t)=>{i[t]=e}));const o=(t,n)=>(s=e(...r,n),ju(s.value instanceof Lp,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),ju(xl(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),u=(e,t)=>{const n=s.gradFunc(e,t),a=Array.isArray(n)?n:[n];ju(a.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),ju(a.every((e=>e instanceof Lp)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i};return t.runKernelFunc({forwardFunc:o,backwardsFunc:u,inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Sp(),n=await this.backend.time(e);return n.wallMs=Sp()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new of;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function lf(){const e=Pl();if(null==e._tfengine){const t=new Fl(e);e._tfengine=new uf(t)}var t;return t=e._tfengine.ENV,Ll=t,Dp=()=>e._tfengine,e._tfengine}uf.nextTensorId=0,uf.nextVariableId=0;var cf=lf();function df(e,t){const n={a:e,b:t};return cf.runKernel(Vl,n)}var hf,pf={};function ff(e){hf=e}function mf(e){if(void 0!==hf)return hf;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function gf(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}su(pf,{isBrowser:()=>gf,isMobile:()=>mf,mockIsMobile:()=>ff});var yf=Dl();function bf(e,t){let n=e;if(pl(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||pl(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Dl().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&wf(e,r,[]),r}function wf(e,t,n){if(n=n||[],!Array.isArray(e)&&!pl(e))return void ju(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));ju(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),ju(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)wf(e[t],r,n.concat(t))}function xf(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function vf(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof Lp)return xf(r,e.dtype,t,n),e;let a=wl(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),xf(r,a,t,n),null==e||!pl(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=bf(e,a);pl(e)||Array.isArray(e)||(e=[e]);const i=!0,o="string"!==a?Ip(e,a):Xu(e,[],i);return cf.makeTensor(o,s,a)}function kf(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const a=e;return a.map(((e,a)=>vf(e,`${t}[${a}]`,n,r)))}yf.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),yf.registerFlag("IS_BROWSER",(()=>gf())),yf.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),yf.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),yf.registerFlag("PROD",(()=>!1)),yf.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>yf.getBool("DEBUG"))),yf.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),yf.registerFlag("IS_TEST",(()=>!1)),yf.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),yf.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var If="__op";function Sf(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=If;const a=function(){cf.startScope(n);try{const e=r(...arguments);return $l(e)&&console.error("Cannot return a Promise inside of tidy."),cf.endScope(e),e}catch(e){throw cf.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var Nf=Sf({complex_:function(e,t){const n=vf(e,"real","complex"),r=vf(t,"imag","complex");qu(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return cf.runKernel(hc,a)}});function Ef(e,t,n,r){if(null==r&&(r=wl(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!pl(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Tl(t);const e=Yu(t),r=Yu(n);ju(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==Yu(t.slice(e));ju(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return pl(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Ip(e,r):Xu(e,[],!0),cf.makeTensor(e,t,r)}function _f(e,t,n){return Ef(e,t,bf(e,n),n)}var Tf={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Cf(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:$f(await Promise.all(r)),specs:n}}function Af(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=Yu(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Tf[n.dtype],c=e.slice(a,a+u*o),d="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=zf()),l=r(d)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=Yu(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=Tf[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=_f(e,o,"float32"),i=_f(r,o,"float32");n[t]=Nf(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=_f(l,o,i))}return n}function $f(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var Ff="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Rf(e){return Ff?Buffer.byteLength(e):new Blob([e]).size}function Mf(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Df(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Of(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Lf(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Pf(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Rf(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Rf(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function zf(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var Bf=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Bf.instance&&(Bf.instance=new Bf),Bf.instance}static registerSaveRouter(e){Bf.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Bf.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Bf.getHandlers(e,"save")}static getLoadHandlers(e,t){return Bf.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Bf.getInstance().loadRouters:Bf.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}},Wf=e=>Bf.registerSaveRouter(e),Uf=e=>Bf.registerLoadRouter(e),Vf=e=>Bf.getSaveHandlers(e),Gf=(e,t)=>Bf.getLoadHandlers(e,t),Hf="tensorflowjs",jf="models_store",qf="model_info_store";function Kf(){if(!Dl().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Xf(e){const t=e.result;t.createObjectStore(jf,{keyPath:"modelPath"}),t.createObjectStore(qf,{keyPath:"modelPath"})}var Yf=class{constructor(e){if(this.indexedDB=Kf(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Hf,1);r.onupgradeneeded=()=>Xf(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(jf,"readonly"),r=t.objectStore(jf).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Pf(t),s=a.transaction(qf,"readwrite");let i=s.objectStore(qf);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(jf,"readwrite");const o=u.objectStore(jf).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(qf);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};Yf.URL_SCHEME="indexeddb://";var Zf=e=>{return Dl().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Yf.URL_SCHEME)?(t=e.slice(Yf.URL_SCHEME.length),new Yf(t)):null;var t};Bf.registerSaveRouter(Zf),Bf.registerLoadRouter(Zf);var Jf="/",Qf="tensorflowjs_models",em="info",tm="model_topology",nm="weight_specs",rm="weight_data",am="model_metadata";function sm(e){return{info:[Qf,e,em].join(Jf),topology:[Qf,e,tm].join(Jf),weightSpecs:[Qf,e,nm].join(Jf),weightData:[Qf,e,rm].join(Jf),modelMetadata:[Qf,e,am].join(Jf)}}function im(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function om(e){const t=e.split(Jf);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Jf)}var um=class{constructor(e){if(!Dl().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=sm(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Pf(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ff)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw im(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ff){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};um.URL_SCHEME="localstorage://";var lm=e=>{return Dl().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(um.URL_SCHEME)?(t=e.slice(um.URL_SCHEME.length),new um(t)):null;var t};Bf.registerSaveRouter(lm),Bf.registerLoadRouter(lm);var cm="://",dm=class{constructor(){this.managers={}}static getInstance(){return null==dm.instance&&(dm.instance=new dm),dm.instance}static registerManager(e,t){ju(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(cm)&&(e=e.slice(0,e.indexOf(cm))),ju(e.length>0,(()=>"scheme must not be an empty string."));const n=dm.getInstance();ju(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function hm(e){if(-1===e.indexOf(cm))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${dm.getSchemes().join(",")}`);return{scheme:e.split(cm)[0],path:e.split(cm)[1]}}async function pm(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];ju(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Bf.getLoadHandlers(e);ju(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),ju(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=Bf.getSaveHandlers(t);ju(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),ju(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=hm(e).scheme,u=hm(e).path,l=o===hm(e).scheme,c=await a.load();n&&l&&await dm.getManager(o).removeModel(u);const d=await i.save(c);return n&&!l&&await dm.getManager(o).removeModel(u),d.modelArtifactsInfo}async function fm(){const e=dm.getSchemes(),t={};for(const n of e){const e=await dm.getManager(n).listModels();for(const r in e)t[n+cm+r]=e[r]}return t}async function mm(e){const t=hm(e);return dm.getManager(t.scheme).removeModel(t.path)}async function gm(e,t){return pm(e,t,!1)}async function ym(e,t){return pm(e,t,!0)}if(Dl().get("IS_BROWSER")){Dl().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{dm.registerManager(um.URL_SCHEME,new class{constructor(){ju(Dl().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),ju("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Qf+Jf,n=Jf+em;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[om(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=sm(e=(t=e).startsWith(um.URL_SCHEME)?t.slice(um.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return im(n),r}})}catch(e){}try{dm.registerManager(Yf.URL_SCHEME,new class{constructor(){this.indexedDB=Kf()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Hf,1);n.onupgradeneeded=()=>Xf(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(qf,"readonly"),s=a.objectStore(qf).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Yf.URL_SCHEME)?t.slice(Yf.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Hf,1);r.onupgradeneeded=()=>Xf(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(qf,"readwrite"),i=s.objectStore(qf),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(jf,"readwrite");const r=u.objectStore(jf).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}})}catch(e){}}var bm;function wm(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",Tl(e),new Mp(e,t,n)}Dl().get("IS_NODE")&&Dl().setPlatform("node",new class{constructor(){this.util=lu(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Dl().global.fetch?Dl().global.fetch(e,t):(null==bm&&(bm=uu()),bm(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var xm=Sf({cast_:function(e,t){const n=vf(e,"x","cast");if(!dl(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return cf.runKernel(lc,r,a)}}),vm=Sf({clone_:function(e){const t={x:vf(e,"x","clone","string_or_numeric")};return cf.runKernel(Qc,t)}});function km(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}lf(),Op={buffer:wm,cast:xm,clone:vm,print:km};var Im={};function Sm(e){return new Promise((e=>setTimeout(e))).then(e)}su(Im,{browserFiles:()=>Em,browserHTTPRequest:()=>Dm,concatenateArrayBuffers:()=>Mf,copyModel:()=>gm,decodeWeights:()=>Af,encodeWeights:()=>Cf,fromMemory:()=>Lm,getLoadHandlers:()=>Gf,getModelArtifactsForJSON:()=>Lf,getModelArtifactsInfoForJSON:()=>Pf,getSaveHandlers:()=>Vf,http:()=>Mm,isHTTPScheme:()=>Fm,listModels:()=>fm,loadWeights:()=>Cm,moveModel:()=>ym,registerLoadRouter:()=>Uf,registerSaveRouter:()=>Wf,removeModel:()=>mm,weightsLoaderFactory:()=>Am,withSaveHandler:()=>Pm});var Nm=class{constructor(e){if(!Dl().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Nm.URL_SCHEME)&&(e=e.slice(Nm.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Of(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Sm((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Sm((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Pf(e)}}}};function Em(e){return new class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=Lf(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Mf(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Df(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=Df(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}(e)}function _m(e,t,n,r){var a,s,i;ju(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),i=r=null==r?1:r,ju((s=n=null==n?0:n)>=0&&s<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${s}`)),ju(i>=0&&i<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${i}`)),ju(i>=s,(()=>`startFraction must be no more than endFraction, but got startFraction ${s} and endFraction ${i}`));let o=0;return Promise.all(e.map((a=>(a.then((a=>{const s=n+ ++o/e.length*(r-n);return t(s),a})),a))))}async function Tm(e,t){null==t&&(t={});const n=null==t.fetchFunc?Dl().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await _m(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await _m(a,t.onProgress,.5,1)}async function Cm(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;const a=e=>Tm(e,{requestInit:r}),s=Am(a);return s(e,t,n)}function Am(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=Tf[u]*Yu(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),d={};let h=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[h+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[h+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{const t=Af(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)d[e]=t[e]})),h+=n})),d}}Nm.URL_SCHEME="downloads://",Bf.registerSaveRouter((e=>Dl().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Nm.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Nm(e)}(e.slice(Nm.URL_SCHEME.length)):null));var $m=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ju("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Dl().platform.fetch,ju(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&ju(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Of(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Pf(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Lf(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Mf(await Tm(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function Fm(e){return null!=e.match($m.URL_SCHEME_REGEX)}$m.URL_SCHEME_REGEX=/^https?:\/\//;var Rm=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Fm(e))):Fm(e),n)return Mm(e,t)}return null};function Mm(e,t){return new $m(e,t)}function Dm(e,t){return Mm(e,t)}Bf.registerSaveRouter(Rm),Bf.registerLoadRouter(Rm);var Om=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}};function Lm(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Om(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Om({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Om({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Pm(e){return new class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}(e)}var zm={};su(zm,{confusionMatrix:()=>Vm});var Bm=Sf({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=vf(e,"a","matMul"),s=vf(t,"b","matMul");[a,s]=ef(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return cf.runKernel(ac,i,o)}}),Wm=Sf({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a=vf(e,"indices","oneHot","int32"),s={indices:a},i={depth:t,onValue:n,offValue:r};return cf.runKernel(Ld,s,i)}}),Um=Sf({transpose_:function(e,t){const n=vf(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),ju(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{ju(e>=0&&e<n.rank,(()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return cf.runKernel(Mh,r,a)}}),Vm=Sf({confusionMatrix_:function(e,t,n){const r=vf(e,"labels","confusionMatrix"),a=vf(t,"predictions","confusionMatrix");ju(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),ju(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),ju(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),ju(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),ju(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=Wm(xm(r,"int32"),n),i=Wm(xm(a,"int32"),n),o=Um(s),u=Bm(o,i);return xm(u,"int32")}}),Gm={};function Hm(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function jm(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function qm(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}su(Gm,{assertAndGetBroadcastShape:()=>qm,getBroadcastDims:()=>Hm,getReductionAxes:()=>jm});var Km,Xm={};function Ym(e,t,n){if(Ku(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=bf(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ef(e,t,r,n)}function Zm(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}const u=Xh(Bh,cf.backendName);if(null!=u){const n={pixels:e},r={numChannels:t};return cf.runKernel(Bh,n,r)}const[l,c]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let d,h;if(i)d=e.getContext("2d").getImageData(0,0,l,c).data;else if(r||n)d=e.data;else if(s||a||o){if(null==Km)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Km=new OffscreenCanvas(1,1).getContext("2d")}else Km=document.createElement("canvas").getContext("2d");Km.canvas.width=l,Km.canvas.height=c,Km.drawImage(e,0,0,l,c),d=Km.getImageData(0,0,l,c).data}if(4===t)h=new Int32Array(d);else{const e=l*c;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=d[4*n+e]}const p=[c,l,t];return Ym(h,p,"int32")}function Jm(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Qm(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if(Dl().getBool("WRAP_TO_IMAGEBITMAP")&&Jm(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Zm(n,t)}async function eg(e,t){let n=vf(e,"img","toPixels");if(!(e instanceof Lp)){const e=n;n=xm(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}su(Xm,{fromPixels:()=>tg,fromPixelsAsync:()=>Qm,toPixels:()=>eg});var tg=Sf({fromPixels_:Zm}),ng={};function rg(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Yu(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...kl(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}su(ng,{prepareAndValidate:()=>rg});var ag={};function sg(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function ig(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}sg(n,t,e)}function og(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:Yu(t.shape)/o,sliceSize:i,strides:[...kl(n.slice(0,a)),1],outputSize:Yu(n)}}su(ag,{calculateShapes:()=>og,validateInput:()=>ig,validateUpdateShape:()=>sg});var ug={};function lg(e,t,n){const r=e.shape.length;ju(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),ju(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)ju(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function cg(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function dg(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function hg(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function pg(e,t,n){return n<=e?n:n-(t-1)}function fg(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function mg(e,t,n,r,a,s,i,o,u){const l=e.length;let c=new Array(l),d=new Array(l),h=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=gg(i,u,l,r,e),d=yg(o,u,l,a,e),h=hg(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=wg(i,r,s,e,t,u),d[t]=xg(o,a,s,e,t,u),h[t]=bg(s,t,u);return{begin:c,end:d,strides:h}}function gg(e,t,n,r,a){const s=[...a],i=fg(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=pg(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function yg(e,t,n,r,a){const s=[...a],i=fg(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=pg(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=Bu(0,s[e],a[e])}return s}function bg(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function wg(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=Bu(0,i,u-1),i}function xg(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?Bu(0,i,u):Bu(-1,i,u-1),i}function vg(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function kg(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Ig(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{ju(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(ju(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function Sg(e,t,n,r,a,s,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<d.dims;e++)c&&0!=(1<<e&o)&&d.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,h);let p=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(h.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[h.beginMask&1<<t,h.endMask&1<<t],s=[h.strides[t]>0?0:-1,h.strides[t]>0?r:r-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[t];const i=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){const e=h.begin[t]<0?r+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=r)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=Ng(h.begin[t],0,h.strides[t],r,a,s),h.end[t]=Ng(h.end[t],1,h.strides[t],r,a,s);const e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===r;p=p&&e,f=f&&(0===t&&1===h.strides[t]||e)}else p=p&&1===h.strides[t]&&i,f=f&&(0===t&&1===h.strides[t]||i);let o,u=!1;if(h.beginValid&&h.endValid?(o=h.end[t]-h.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=h.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=h.strides[t]<0?0:Math.trunc(o/h.strides[t])+(o%h.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){const t=h.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==h.finalShapeGatherIndices[t])),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function Ng(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}su(ug,{assertParamsValid:()=>lg,computeFlatOffset:()=>kg,computeOutShape:()=>dg,getNormalizedAxes:()=>mg,isSliceContinous:()=>vg,maskToAxes:()=>cg,parseSliceParams:()=>Ig,sliceInfo:()=>Sg,startForAxis:()=>wg,startIndicesWithElidedDims:()=>gg,stopForAxis:()=>xg,stopIndicesWithElidedDims:()=>yg,stridesForAxis:()=>bg,stridesWithElidedDims:()=>hg});var Eg={};su(Eg,{Serializable:()=>_g,SerializationMap:()=>Tg,registerClass:()=>Cg});var _g=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Tg=class{constructor(){this.classNameMap={}}static getMap(){return null==Tg.instance&&(Tg.instance=new Tg),Tg.instance}static register(e){Tg.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Cg(e){ju(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),ju("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),ju(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Tg.register(e)}var Ag={};su(Ag,{TEST_EPSILON_FLOAT16:()=>$g,encodeStrings:()=>Wg,expectArrayBuffersEqual:()=>Bg,expectArraysClose:()=>Fg,expectArraysEqual:()=>Og,expectNumbersClose:()=>Lg,expectPromiseToFail:()=>Dg,expectValuesInRange:()=>zg,testEpsilon:()=>Rg});var $g=.1;function Fg(e,t,n){return null==n&&(n=Rg()),Mg(e,t,((e,t)=>Pg(e,t,n)))}function Rg(){return 32===cf.backend.floatPrecision()?.001:$g}function Mg(e,t,n){let r=!0;if((pl(e)||pl(t))&&(r=!1),pl(e)&&pl(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=bf(e),r=bf(t);if(!Ju(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=pl(e)?e:Xu(e),s=pl(t)?t:Xu(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Dg(e,t){e().then((()=>t.fail()),(()=>t()))}function Og(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return gl(e)||gl(e[0])||gl(t)||gl(t[0])?Mg(e,n,((e,t)=>e==t)):Mg(e,t,((e,t)=>Pg(e,t,0)))}function Lg(e,t,n){if(null==n&&(n=Rg()),!Pg(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Pg(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function zg(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Bg(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function Wg(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Wg(n):e[t]=Ep(n)}return e}var Ug="3.13.0";function Vg(){Dl().set("PROD",!0)}function Gg(){Dl().set("DEBUG",!0)}function Hg(){Dl().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function jg(e){Dl().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function qg(){cf.disposeVariables()}function Kg(){return cf}function Xg(){return cf.memory()}function Yg(e){return cf.profile(e)}function Zg(e,t){return cf.tidy(e,t)}function Jg(e){rf(e).forEach((e=>e.dispose()))}function Qg(e){return cf.keep(e)}function ey(e){return cf.time(e)}function ty(e){return cf.setBackend(e)}function ny(){return cf.ready()}function ry(){return cf.backendName}function ay(e){cf.removeBackend(e)}function sy(e){return cf.findBackend(e)}function iy(e){return cf.findBackendFactory(e)}function oy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return cf.registerBackend(e,t,n)}function uy(){return cf.backend}function ly(e,t){Dl().setPlatform(e,t)}var cy=Sf({add_:function(e,t){let n=vf(e,"a","add"),r=vf(t,"b","add");[n,r]=ef(n,r);const a={a:n,b:r};return cf.runKernel(Vl,a)}}),dy=Sf({floorDiv_:function(e,t){let n=vf(e,"a","floorDiv"),r=vf(t,"b","floorDiv");[n,r]=ef(n,r);const a={a:n,b:r};return cf.runKernel(qc,a)}}),hy=Sf({div_:function(e,t){let n=vf(e,"a","div"),r=vf(t,"b","div");if([n,r]=ef(n,r),"int32"===n.dtype&&"int32"===r.dtype)return dy(n,r);const a={a:n,b:r};return cf.runKernel(Mc,a,{})}}),py=Sf({mul_:function(e,t){let n=vf(e,"a","mul"),r=vf(t,"b","mul");[n,r]=ef(n,r);const a={a:n,b:r};return cf.runKernel(Ad,a)}}),fy=Sf({abs_:function(e){const t=vf(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return cf.runKernel(pc,e)}{const e={x:t};return cf.runKernel(Bl,e)}}}),my=Sf({acos_:function(e){const t={x:vf(e,"x","acos")};return cf.runKernel(Wl,t)}}),gy=Sf({acosh_:function(e){const t={x:vf(e,"x","acosh")};return cf.runKernel(Ul,t)}}),yy=Sf({addN_:function(e){ju(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),ju(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>vf(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!Ju(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return cf.runKernel(Gl,r)}}),by=Sf({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=vf(e,"x","all","bool"),a={x:r},s={axis:t,keepDims:n};return cf.runKernel(Hl,a,s)}}),wy=Sf({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=vf(e,"x","any","bool"),a={x:r},s={axis:t,keepDims:n};return cf.runKernel(jl,a,s)}}),xy=Sf({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=vf(e,"x","argMax"),r={x:n},a={axis:t};return cf.runKernel(ql,r,a)}}),vy=Sf({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=vf(e,"x","argMin"),r={x:n},a={axis:t};return cf.runKernel(Kl,r,a)}}),ky=Sf({asin_:function(e){const t={x:vf(e,"x","asin")};return cf.runKernel(Xl,t)}}),Iy=Sf({asinh_:function(e){const t={x:vf(e,"x","asinh")};return cf.runKernel(Yl,t)}}),Sy=Sf({atan_:function(e){const t={x:vf(e,"x","atan")};return cf.runKernel(Zl,t)}}),Ny=Sf({atan2_:function(e,t){let n=vf(e,"a","atan2"),r=vf(t,"b","atan2");[n,r]=ef(n,r);const a={a:n,b:r};return cf.runKernel(Ql,a)}}),Ey=Sf({atanh_:function(e){const t={x:vf(e,"x","atanh")};return cf.runKernel(Jl,t)}});function _y(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;const i=e[3],o=[...t,i],u=Wy(a);return Ay(e,o,n,s,r,null,null,u)}function Ty(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[o,u]=Ry(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return Ay(e,l,n,r,a,s,!1,i)}function Cy(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[o,u,l]=My(t);let c,d;if("NDHWC"===i)d="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",c=[o,u,l,e[1],e[1]]}return $y(e,c,n,r,a,!1,d,s)}function Ay(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[u,l,c,d]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,d]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,d,l,c]=e}const[h,p,,f]=t,[m,g]=Ry(n),[y,b]=Ry(r),w=Dy(h,y),x=Dy(p,b),{padInfo:v,outHeight:k,outWidth:I}=Oy(a,l,c,m,g,w,x,s,o),S=i?f*d:f;let N;return"channelsFirst"===o?N=[u,S,k,I]:"channelsLast"===o&&(N=[u,k,I,S]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:d,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function $y(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[u,l,c,d,h]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,d,h]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,h,l,c,d]=e}const[p,f,m,,g]=t,[y,b,w]=My(n),[x,v,k]=My(r),I=Dy(p,x),S=Dy(f,v),N=Dy(m,k),{padInfo:E,outDepth:_,outHeight:T,outWidth:C}=Ly(a,l,c,d,y,b,w,I,S,N,o),A=s?g*h:g;let $;return"channelsFirst"===i?$=[u,A,_,T,C]:"channelsLast"===i&&($=[u,_,T,C,A]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:d,inChannels:h,outDepth:_,outHeight:T,outWidth:C,outChannels:A,padInfo:E,strideDepth:y,strideHeight:b,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:x,dilationHeight:v,dilationWidth:k,inShape:e,outShape:$,filterShape:t}}function Fy(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const a=Dy(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Ry(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function My(e){return"number"==typeof e?[e,e,e]:e}function Dy(e,t){return t<=1?e:e+(e-1)*(t-1)}function Oy(e,t,n,r,a,s,i,o,u){let l,c,d;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Fy(e,t,n));const s=e[1];return[Py((e[0]-t+2*r)/n+1,a),Py((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);c=a[0],d=a[1]}else if("same"===e){c=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(d-1)*a+i-n),u=Math.floor(e/2),h=e-u,p=Math.floor(o/2);l={top:u,bottom:h,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const h="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:h,bottom:p,left:f,right:m,type:0===h&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Py((t-s+h+p)/r+1,o),d=Py((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:d}}function Ly(e,t,n,r,a,s,i,o,u,l,c){let d,h,p,f;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=Fy(e,t,r));const i=e[1],o=e[2];return[Py((e[0]-t+2*a)/r+1,s),Py((i-t+2*a)/r+1,s),Py((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,c);h=s[0],p=s[1],f=s[2]}else if("same"===e){h=Math.ceil(t/a),p=Math.ceil(n/s),f=Math.ceil(r/i);const e=(h-1)*a+o-t,c=(p-1)*s+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),w=c-b,x=Math.floor(m/2);d={top:b,bottom:w,left:x,right:m-x,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-o+1)/a),p=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}function Py(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function zy(e){const[t,n,r]=Ry(e);return 1===t&&1===n&&1===r}function By(e,t){return zy(e)||zy(t)}function Wy(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Uy(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)ju(Qu(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{ju(Qu(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var Vy=Sf({reshape_:function(e,t){const n={x:vf(e,"x","reshape","string_or_numeric")},r={shape:t};return cf.runKernel(Kd,n,r)}}),Gy=Sf({avgPool_:function(e,t,n,r,a){const s=vf(e,"x","avgPool","float32");ju(By(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Vy(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ju(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Uy("avgPool",r,a);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=cf.runKernel(ec,u,l);return c=xm(c,s.dtype),o?Vy(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Hy=Sf({avgPool3d_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=vf(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=Vy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ju(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),ju("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Uy("avgPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let d=cf.runKernel(nc,l,c);return d=xm(d,o.dtype),u?Vy(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),jy=Sf({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;ju(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=kf(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return vm(n[0]);const r=n,a={axis:t};return cf.runKernel(fc,r,a)}}),qy=Sf({sigmoid_:function(e){const t={x:vf(e,"x","sigmoid","float32")};return cf.runKernel(ch,t)}}),Ky=Sf({slice_:function(e,t,n){const r=vf(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return cf.runKernel(ih,a,s)}}),Xy=Sf({tanh_:function(e){const t={x:vf(e,"x","tanh","float32")};return cf.runKernel(Ah,t)}}),Yy=Sf({basicLSTMCell_:function(e,t,n,r,a,s){const i=vf(e,"forgetBias","basicLSTMCell"),o=vf(t,"lstmKernel","basicLSTMCell"),u=vf(n,"lstmBias","basicLSTMCell"),l=vf(r,"data","basicLSTMCell"),c=vf(a,"c","basicLSTMCell"),d=vf(s,"h","basicLSTMCell"),h=jy([l,d],1),p=Bm(h,o),f=cy(p,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Ky(f,[0,0],y),w=Ky(f,[0,g],y),x=Ky(f,[0,2*g],y),v=Ky(f,[0,3*g],y),k=cy(py(qy(b),Xy(w)),py(c,qy(cy(i,x))));return[k,py(Xy(k),qy(v))]}}),Zy=Sf({batchToSpaceND_:function(e,t,n){const r=vf(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));ju(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),ju(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),ju(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},i={blockShape:t,crops:n};return cf.runKernel(sc,s,i)}}),Jy=Sf({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=vf(e,"x","batchNorm"),o=vf(t,"mean","batchNorm"),u=vf(n,"variance","batchNorm");let l,c;null!=a&&(l=vf(a,"scale","batchNorm")),null!=r&&(c=vf(r,"offset","batchNorm")),ju(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ju(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ju(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const d=function(e){let t;return t=0===e.rank||1===e.rank?Vy(e,[1,1,1,e.size]):2===e.rank?Vy(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Vy(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),h={x:d,scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:s},f=cf.runKernel(Kc,h,p);return Vy(f,i.shape)}}),Qy=Sf({batchNorm2d_:function(e,t,n,r,a,s){const i=vf(e,"x","batchNorm"),o=vf(t,"mean","batchNorm"),u=vf(n,"variance","batchNorm");let l,c;return null!=a&&(l=vf(a,"scale","batchNorm")),null!=r&&(c=vf(r,"offset","batchNorm")),ju(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),ju(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),ju(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&ju(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&ju(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Jy(i,o,u,c,l,s)}}),eb=Sf({batchNorm3d_:function(e,t,n,r,a,s){const i=vf(e,"x","batchNorm"),o=vf(t,"mean","batchNorm"),u=vf(n,"variance","batchNorm");let l,c;return null!=a&&(l=vf(a,"scale","batchNorm")),null!=r&&(c=vf(r,"offset","batchNorm")),ju(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),ju(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),ju(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&ju(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&ju(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Jy(i,o,u,c,l,s)}}),tb=Sf({batchNorm4d_:function(e,t,n,r,a,s){const i=vf(e,"x","batchNorm"),o=vf(t,"mean","batchNorm"),u=vf(n,"variance","batchNorm");let l,c;return null!=a&&(l=vf(a,"scale","batchNorm")),null!=r&&(c=vf(r,"offset","batchNorm")),ju(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),ju(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),ju(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&ju(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&ju(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Jy(i,o,u,c,l,s)}}),nb=Sf({bincount_:function(e,t,n){const r=vf(e,"x","bincount"),a=vf(t,"weights","bincount");ju("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),ju(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ju(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return cf.runKernel(ic,s,i)}}),rb=Sf({broadcastArgs_:function(e,t){const n=vf(e,"s0","broadcastArgs","int32"),r=vf(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return cf.runKernel(uc,a)}}),ab=Sf({broadcastTo_:function(e,t){let n=vf(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Vy(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return vm(n);const i={x:n},o={reps:s};return cf.runKernel($h,i,o)}}),sb=Sf({ceil_:function(e){const t={x:vf(e,"x","ceil","float32")};return cf.runKernel(cc,t)}}),ib=Sf({clipByValue_:function(e,t,n){const r=vf(e,"x","clipByValue");ju(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return cf.runKernel(dc,a,s)}}),ob=Sf({concat1d_:function(e){return jy(e,0)}}),ub=Sf({concat2d_:function(e,t){return jy(e,t)}}),lb=Sf({concat3d_:function(e,t){return jy(e,t)}}),cb=Sf({concat4d_:function(e,t){return jy(e,t)}}),db=Sf({conv2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0;const o=vf(e,"x","conv2d","float32"),u=vf(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Vy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ju(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),ju(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),Uy("conv2d",r,i);const d="NHWC"===a?l.shape[3]:l.shape[1];ju(d===u.shape[2],(()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`)),ju(By(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=cf.runKernel(mc,h,p);return c?Vy(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),hb=Sf({conv1d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0;const o=vf(e,"x","conv1d"),u=vf(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Vy(o,[1,o.shape[0],o.shape[1]])),ju(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),ju(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),Uy("conv1d",r,i),ju(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),ju(By(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),ju("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const d=Vy(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=Vy(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=[1,n],f=[1,s],m="NHWC",g=db(h,d,p,r,m,f,i);return Vy(g,c?[g.shape[2],g.shape[3]]:[g.shape[0],g.shape[2],g.shape[3]])}}),pb=Sf({conv2DBackpropInput_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0;ju(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Vy(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),ju(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),ju(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),ju(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],d="NHWC"===s?u.shape[3]:u.shape[1];ju(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),ju(d===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`)),Uy("conv2dDerInput",a,i);const h={dy:u,filter:n},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=cf.runKernel(yc,h,p);return l?Vy(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),fb=Sf({conv2dTranspose_:function(e,t,n,r,a,s){const i=vf(e,"x","conv2dTranspose"),o=vf(t,"filter","conv2dTranspose");return pb(n,i,o,r,a,"NHWC",s)}}),mb=Sf({conv3d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const i=vf(e,"x","conv3d"),o=vf(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Vy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ju(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),ju(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),ju(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),ju(By(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),ju("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const c={x:u,filter:o},d={strides:n,pad:r,dataFormat:a,dilations:s},h=cf.runKernel(bc,c,d);return l?Vy(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),gb=Sf({conv3DBackpropInput_:function(e,t,n,r,a){ju(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Vy(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];ju(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),ju(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),ju(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),ju(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),ju(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},d={pad:a,strides:r,inputShape:s},h=cf.runKernel(xc,c,d);return o?Vy(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),yb=Sf({conv3dTranspose_:function(e,t,n,r,a){const s=vf(e,"x","conv3dTranspose"),i=vf(t,"filter","conv3dTranspose");return gb(n,s,i,r,a)}}),bb=Sf({cos_:function(e){const t={x:vf(e,"x","cos","float32")};return cf.runKernel(vc,t)}}),wb=Sf({cosh_:function(e){const t={x:vf(e,"x","cosh","float32")};return cf.runKernel(kc,t)}}),xb=Sf({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=vf(e,"x","cumsum"),s={x:a},i={axis:t,exclusive:n,reverse:r};return cf.runKernel(Ic,s,i)}}),vb=Sf({denseBincount_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=vf(e,"x","denseBincount"),s=vf(t,"weights","denseBincount");ju("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),ju(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),ju(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ju(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const i={x:a,weights:s},o={size:n,binaryOutput:r};return cf.runKernel(Nc,i,o)}}),kb=Sf({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const r=vf(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];ju(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),ju(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),ju(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),ju(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return cf.runKernel(Ec,o,u)}}),Ib=Sf({depthwiseConv2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0;const o=vf(e,"x","depthwiseConv2d","float32"),u=vf(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Vy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ju(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),ju(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),ju(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Uy("depthwiseConv2d",r,i);const d={x:l,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},p=cf.runKernel(_c,d,h);return c?Vy(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Sb=Sf({diag_:function(e){const t={x:vf(e,"x","diag")};return cf.runKernel(Ac,t)}}),Nb=Sf({dilation2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const i=vf(e,"x","dilation2d"),o=vf(t,"filter","dilation2d");ju(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),ju(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),ju("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=i,l=!1;3===i.rank&&(u=Vy(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},d={strides:n,pad:r,dilations:a},h=cf.runKernel($c,c,d);return l?Vy(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Eb=Sf({equal_:function(e,t){let n=vf(e,"a","equal","string_or_numeric"),r=vf(t,"b","equal","string_or_numeric");[n,r]=ef(n,r),qm(n.shape,r.shape);const a={a:n,b:r};return cf.runKernel(zc,a)}}),_b=Sf({where_:function(e,t,n){const r=vf(t,"a","where"),a=vf(n,"b","where"),s=vf(e,"condition","where","bool"),i=qm(qm(s.shape,r.shape),a.shape),o={condition:ab(s,i),t:ab(r,i),e:ab(a,i)};return cf.runKernel(ah,o)}}),Tb=Sf({zerosLike_:function(e){const t={x:vf(e,"x","zerosLike")};return cf.runKernel(Ph,t)}}),Cb=Sf({divNoNan_:function(e,t){let n=vf(e,"a","div"),r=vf(t,"b","div");[n,r]=ef(n,r);const a=hy(n,r),s=Tb(a),i=Eb(r,s);return _b(i,s,a)}}),Ab=Sf({dot_:function(e,t){const n=vf(e,"t1","dot"),r=vf(t,"t2","dot");ju(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(ju(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=Vy(n,[1,-1]),t=Vy(r,[-1,1]),a=Bm(e,t);return Vy(a,[])}if(1===n.rank&&2===r.rank){const e=Vy(n,[1,-1]),t=Vy(r,[r.shape[0],r.shape[1]]),a=Bm(e,t);return Vy(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Vy(r,[-1,1]),t=Bm(n,e);return Vy(t,[t.size])}{const e=Vy(r,[r.shape[0],r.shape[1]]);return Bm(n,e)}}}),$b=Sf({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];const a=n.map(((e,t)=>vf(e,`tensors${t}`,"einsum"))),s={equation:e};return cf.runKernel(Dc,a,s)}}),Fb=Sf({elu_:function(e){const t={x:vf(e,"x","elu","float32")};return cf.runKernel(Oc,t)}}),Rb=Sf({erf_:function(e){let t=vf(e,"x","erf");ju("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=xm(t,"float32"));const n={x:t};return cf.runKernel(Pc,n)}}),Mb=Sf({exp_:function(e){const t={x:vf(e,"x","exp")};return cf.runKernel(Bc,t)}}),Db=Sf({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=vf(e,"x","expandDims","string_or_numeric");ju(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return cf.runKernel(Wc,r,a)}}),Ob=Sf({expm1_:function(e){const t={x:vf(e,"x","expm1")};return cf.runKernel(Uc,t)}}),Lb=Sf({tile_:function(e,t){const n=vf(e,"x","tile","string_or_numeric");ju(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return cf.runKernel($h,r,a)}}),Pb=Sf({eye_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const a=wm([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Vy(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Lb(Db(i,0),[n[0],1,1]);if(2===n.length)return Lb(Db(Db(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Lb(Db(Db(Db(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function zb(e,t,n){const r={shape:e,value:t,dtype:n};return cf.runKernel(Gc,{},r)}var Bb=Sf({floor_:function(e){const t={x:vf(e,"x","floor","float32")};return cf.runKernel(jc,t)}}),Wb=Sf({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const a=vf(e,"x","gather"),s=vf(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return cf.runKernel(Xc,i,o)}}),Ub=Sf({greater_:function(e,t){let n=vf(e,"a","greater","string_or_numeric"),r=vf(t,"b","greater","string_or_numeric");[n,r]=ef(n,r),qm(n.shape,r.shape);const a={a:n,b:r};return cf.runKernel(Zc,a)}}),Vb=Sf({greaterEqual_:function(e,t){let n=vf(e,"a","greaterEqual","string_or_numeric"),r=vf(t,"b","greaterEqual","string_or_numeric");[n,r]=ef(n,r),qm(n.shape,r.shape);const a={a:n,b:r};return cf.runKernel(Jc,a)}}),Gb=Sf({imag_:function(e){const t={input:vf(e,"input","imag")};return cf.runKernel(td,t)}}),Hb=Sf({isFinite_:function(e){const t={x:vf(e,"x","isFinite")};return cf.runKernel(nd,t)}}),jb=Sf({isInf_:function(e){const t={x:vf(e,"x","isInf")};return cf.runKernel(rd,t)}}),qb=Sf({isNaN_:function(e){const t={x:vf(e,"x","isNaN")};return cf.runKernel(ad,t)}}),Kb=Sf({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n=vf(e,"x","leakyRelu"),r={x:n},a={alpha:t};return cf.runKernel(sd,r,a)}}),Xb=Sf({less_:function(e,t){let n=vf(e,"a","less","string_or_numeric"),r=vf(t,"b","less","string_or_numeric");[n,r]=ef(n,r),qm(n.shape,r.shape);const a={a:n,b:r};return cf.runKernel(id,a)}}),Yb=Sf({lessEqual_:function(e,t){let n=vf(e,"a","lessEqual","string_or_numeric"),r=vf(t,"b","lessEqual","string_or_numeric");[n,r]=ef(n,r),qm(n.shape,r.shape);const a={a:n,b:r};return cf.runKernel(od,a)}});function Zb(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return cf.runKernel(ud,{},r)}var Jb=Sf({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const s=vf(e,"x","localResponseNormalization");ju(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),ju(Qu(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Vy(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:a},c=cf.runKernel(md,u,l);return o?Vy(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Qb=Sf({log_:function(e){const t={x:vf(e,"x","log","float32")};return cf.runKernel(ld,t)}}),ew=Sf({log1p_:function(e){const t={x:vf(e,"x","log1p")};return cf.runKernel(cd,t)}});function tw(e){return ju(xl(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=vf(t,"x","tf.grad","string_or_numeric"),a=null!=n?vf(n,"dy","tf.grad"):null;return cf.tidy((()=>{const{value:t,grads:n}=cf.gradients((()=>e(r)),[r],a);return null!=a&&qu(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),ow(n),n[0]}))}}function nw(e){return ju(xl(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{ju(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=kf(t,"args","tf.grads","string_or_numeric"),a=null!=n?vf(n,"dy","tf.grads"):null;return cf.tidy((()=>{const{value:t,grads:n}=cf.gradients((()=>e(...r)),r,a);return null!=a&&qu(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ow(n),n}))}}function rw(e){return ju(xl(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{ju(t instanceof Lp,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),ju(null==n||n instanceof Lp,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:a}=cf.gradients((()=>e(t)),[t],n);return ow(r),{grad:r[0],value:a}}}function aw(e){return ju(xl(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{ju(Array.isArray(t)&&t.every((e=>e instanceof Lp)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),ju(null==n||n instanceof Lp,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=cf.gradients((()=>e(...t)),t,n);return null!=n&&qu(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ow(r.grads),r}}function sw(e,t){ju(xl(e),(()=>"The f passed in variableGrads(f) must be a function")),ju(null==t||Array.isArray(t)&&t.every((e=>e instanceof zp)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in cf.registeredVariables)t.push(cf.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;ju((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:i}=cf.gradients(e,t,null,!0);ju(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),ju(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function iw(e){return cf.customGrad(e)}function ow(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var uw=Sf({neg_:function(e){const t={x:vf(e,"x","neg")};return cf.runKernel($d,t)}}),lw=Sf({softplus_:function(e){const t={x:vf(e,"x","softplus")};return cf.runKernel(dh,t)}}),cw=Sf({logSigmoid_:function(e){const t=vf(e,"x","logSigmoid");return iw((e=>({value:uw(lw(uw(e))),gradFunc:t=>py(t,qy(uw(e)))})))(t)}}),dw=Sf({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=vf(e,"x","max"),a={x:r},s={reductionIndices:t,keepDims:n};return cf.runKernel(yd,a,s)}}),hw=Sf({sub_:function(e,t){let n=vf(e,"a","sub"),r=vf(t,"b","sub");[n,r]=ef(n,r);const a={a:n,b:r};return cf.runKernel(Th,a)}}),pw=Sf({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=vf(e,"x","sum");"bool"===r.dtype&&(r=xm(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return cf.runKernel(ph,a,s)}}),fw=Sf({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=vf(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=iw(((e,n)=>{const r=dw(e,t,!0),a=hw(e,r),s=hw(xm(a,"float32"),Qb(pw(Mb(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=Mb(r);return hw(e,py(pw(e,t,!0),a))}}}));return r(n)}});function mw(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function gw(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function yw(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function bw(e,t){return gw(e,t.map((e=>1)),t)}function ww(e,t,n){ju(mw(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function xw(e,t){if(mw(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function vw(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function kw(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var Iw=Sf({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=vf(e,"x","logSumExp"),a=il(t,r.shape),s=dw(r,a,!0),i=hw(r,s),o=Mb(i),u=pw(o,a),l=Qb(u),c=cy(Vy(s,l.shape),l);if(n){const e=bw(c.shape,a);return Vy(c,e)}return c}}),Sw=Sf({logicalAnd_:function(e,t){const n=vf(e,"a","logicalAnd","bool"),r=vf(t,"b","logicalAnd","bool");qm(n.shape,r.shape);const a={a:n,b:r};return cf.runKernel(dd,a)}}),Nw=Sf({logicalNot_:function(e){const t={x:vf(e,"x","logicalNot","bool")};return cf.runKernel(hd,t)}}),Ew=Sf({logicalOr_:function(e,t){const n=vf(e,"a","logicalOr","bool"),r=vf(t,"b","logicalOr","bool");qm(n.shape,r.shape);const a={a:n,b:r};return cf.runKernel(pd,a)}}),_w=Sf({logicalXor_:function(e,t){const n=vf(e,"a","logicalXor","bool"),r=vf(t,"b","logicalXor","bool");return qm(n.shape,r.shape),Sw(Ew(e,t),Nw(Sw(e,t)))}}),Tw=Sf({maxPool_:function(e,t,n,r,a){const s=vf(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=Vy(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ju(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),ju(By(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Uy("maxPool",r,a);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=cf.runKernel(wd,u,l);return o?Vy(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Cw=Sf({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=vf(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=Vy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ju(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),ju("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Uy("maxPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},d=cf.runKernel(vd,l,c);return u?Vy(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Aw=Sf({maxPoolWithArgmax_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s=vf(e,"x","maxPoolWithArgmax"),i={x:s},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},u=cf.runKernel(Id,i,o);return{result:u[0],indexes:u[1]}}}),$w=Sf({maximum_:function(e,t){let n=vf(e,"a","maximum"),r=vf(t,"b","maximum");[n,r]=ef(n,r),"bool"===n.dtype&&(n=xm(n,"int32"),r=xm(r,"int32")),qm(n.shape,r.shape);const a={a:n,b:r};return cf.runKernel(bd,a)}}),Fw=Sf({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=vf(e,"x","mean"),a={x:r},s={axis:t,keepDims:n};return cf.runKernel(Sd,a,s)}});function Rw(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){const t=Rw(e,"float32"),n=Rw(e,"float32");return Nf(t,n)}const n=El(Yu(e),t);return cf.makeTensor(n,e,t)}function Mw(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){const t=Mw(e,"float32"),n=Rw(e,"float32");return Nf(t,n)}const n=Nl(Yu(e),t);return cf.makeTensor(n,e,t)}function Dw(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=vf(e,"x","meshgrid",e instanceof Lp?e.dtype:"float32");if(void 0===t)return[r];let a=vf(t,"y","meshgrid",t instanceof Lp?t.dtype:"float32");const s=Yu(r.shape),i=Yu(a.shape);return"xy"===n?(r=Vy(r,[1,-1]),a=Vy(a,[-1,1]),[Bm(Mw([i,1],r.dtype),r),Bm(a,Mw([1,s],a.dtype))]):(r=Vy(r,[-1,1]),a=Vy(a,[1,-1]),[Bm(r,Mw([1,i],r.dtype)),Bm(Mw([s,1],a.dtype),a)])}var Ow=Sf({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=vf(e,"x","min"),a={x:r},s={axis:t,keepDims:n};return cf.runKernel(Nd,a,s)}}),Lw=Sf({minimum_:function(e,t){let n=vf(e,"a","minimum"),r=vf(t,"b","minimum");[n,r]=ef(n,r),"bool"===n.dtype&&(n=xm(n,"int32"),r=xm(r,"int32")),qm(n.shape,r.shape);const a={a:n,b:r};return cf.runKernel(Ed,a)}}),Pw=Sf({mirrorPad_:function(e,t,n){ju("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=vf(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ju(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)ju(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ju(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},i={x:r};return cf.runKernel(_d,i,s)}}),zw=Sf({mod_:function(e,t){let n=vf(e,"a","mod"),r=vf(t,"b","mod");[n,r]=ef(n,r);const a={a:n,b:r};return cf.runKernel(Td,a)}}),Bw=Sf({square_:function(e){const t=vf(e,"x","square");return cf.runKernel("Square",{x:t},{})}}),Ww=Sf({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=il(t,(e=vf(e,"x","moments")).shape),a=Fw(e,r,n);let s=a.shape;n||(s=bw(a.shape,r));const i=Bw(hw(xm(e,"float32"),Vy(a,s))),o=Fw(i,r,n);return{mean:a,variance:o}}}),Uw=Sf({multiRNNCell_:function(e,t,n,r){const a=vf(t,"data","multiRNNCell"),s=kf(n,"c","multiRNNCell"),i=kf(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}}),Vw=Sf({multinomial_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=vf(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o=1===i?Vy(a,[1,-1]):a,u={logits:o},l={numSamples:t,seed:n,normalized:r},c=cf.runKernel(Cd,u,l);return 1===i?Vy(c,[c.size]):c}}),Gw=Sf({notEqual_:function(e,t){let n=vf(e,"a","notEqual","string_or_numeric"),r=vf(t,"b","notEqual","string_or_numeric");[n,r]=ef(n,r),qm(n.shape,r.shape);const a={a:n,b:r};return cf.runKernel(Fd,a)}}),Hw=Sf({onesLike_:function(e){const t={x:vf(e,"x","onesLike")};return cf.runKernel(Od,t)}}),jw=Sf({outerProduct_:function(e,t){const n=vf(e,"v1","outerProduct"),r=vf(t,"v2","outerProduct");ju(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=Vy(n,[-1,1]),s=Vy(r,[1,-1]);return Bm(a,s)}}),qw=Sf({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=vf(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return cf.runKernel(zd,s,a)}}),Kw=Sf({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return ju(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),qw(e,[t],n)}}),Xw=Sf({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return ju(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),qw(e,t,n)}}),Yw=Sf({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return ju(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),qw(e,t,n)}}),Zw=Sf({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return ju(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),qw(e,t,n)}}),Jw=Sf({spaceToBatchND_:function(e,t,n){const r=vf(e,"x","spaceToBatchND");ju(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),ju(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),ju(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return cf.runKernel(fh,a,s)}}),Qw=Sf({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=vf(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=Vy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ju(By(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const c=Ty(u.shape,t,s,a,r),d=[c.dilationHeight,c.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([c.filterHeight,c.filterWidth],d):[[0,0],[0,0]];const p=1===d[0]&&1===d[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],d,h),g=p?r:"valid",y=p?u:Jw(u,d,f),b=("avg"===n?()=>Gy(y,t,s,g,i):()=>Tw(y,t,s,g,i))(),w=p?b:Zy(b,d,m);return l?Vy(w,[w.shape[1],w.shape[2],w.shape[3]]):w}}),ex=Sf({pow_:function(e,t){let n=vf(e,"base","pow"),r=vf(t,"exp","pow");[n,r]=ef(n,r);const a={a:n,b:r};return cf.runKernel(Wd,a)}}),tx=Sf({prelu_:function(e,t){const n={x:vf(e,"x","prelu"),alpha:vf(t,"alpha","prelu")};return cf.runKernel(Ud,n)}}),nx=Sf({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=vf(e,"x","prod");"bool"===r.dtype&&(r=xm(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return cf.runKernel(Vd,a,s)}}),rx=Sf({rand_:function(e,t,n){const r=Yu(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return cf.makeTensor(a,e,n)}}),ax=iu(bu()),sx=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=ax.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},ix=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=ax.alea(a.toString()),this.randn=new sx(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},ox=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ax.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}},ux=Sf({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new ix(t,n,r,a),i=wm(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),lx=Sf({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new sx(t,n,r,!1,a),i=wm(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),cx=Sf({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;const s=wm(e,r),i=new ox(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function dx(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return cf.runKernel(Gd,{},a)}var hx=Sf({real_:function(e){const t={input:vf(e,"input","real")};return cf.runKernel(Hd,t)}}),px=Sf({reciprocal_:function(e){const t={x:vf(e,"x","reciprocal")};return cf.runKernel(jd,t)}}),fx=Sf({relu_:function(e){const t={x:vf(e,"x","relu")};return cf.runKernel(qd,t)}}),mx=Sf({relu6_:function(e){const t={x:vf(e,"x","relu6")};return cf.runKernel(Qd,t)}}),gx=Sf({reverse_:function(e,t){const n={x:vf(e,"x","reverse")},r={dims:t};return cf.runKernel(eh,n,r)}}),yx=Sf({reverse1d_:function(e){const t=vf(e,"x","reverse");return ju(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),gx(t,0)}}),bx=Sf({reverse2d_:function(e,t){const n=vf(e,"x","reverse");return ju(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),gx(n,t)}}),wx=Sf({reverse3d_:function(e,t){const n=vf(e,"x","reverse");return ju(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),gx(n,t)}}),xx=Sf({reverse4d_:function(e,t){const n=vf(e,"x","reverse");return ju(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),gx(n,t)}}),vx=Sf({round_:function(e){const t={x:vf(e,"x","round")};return cf.runKernel(th,t)}}),kx=Sf({rsqrt_:function(e){const t={x:vf(e,"x","rsqrt","float32")};return cf.runKernel(nh,t)}});function Ix(e,t){if((pl(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&pl(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ef(e,[],[],t)}var Sx=Sf({selu_:function(e){const t={x:vf(e,"x","selu")};return cf.runKernel(sh,t)}}),Nx=Sf({separableConv2d_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const o=vf(e,"x","separableConv2d"),u=vf(t,"depthwiseFilter","separableConv2d"),l=vf(n,"pointwiseFilter","separableConv2d");let c=o,d=!1;if(3===o.rank&&(d=!0,c=Vy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ju(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),ju(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),ju(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),ju(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),ju(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const h=u.shape[2],p=u.shape[3];ju(l.shape[2]===h*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${l.shape[2]}.`));const f=Ib(c,u,r,a,i,s),m=1,g=db(f,l,m,"valid",i);return d?Vy(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Ex=async function(e,t){const n=vf(e,"x","setdiff1d"),r=vf(t,"y","setdiff1d");ju(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),ju(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),ju(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;const u=new Mp([o],n.dtype),l=new Mp([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},_x=Sf({sign_:function(e){const t={x:vf(e,"x","sign")};return cf.runKernel(lh,t)}}),Tx=Sf({sin_:function(e){const t={x:vf(e,"x","sin","float32")};return cf.runKernel(oh,t)}}),Cx=Sf({sinh_:function(e){const t={x:vf(e,"x","sinh")};return cf.runKernel(uh,t)}}),Ax=Sf({slice1d_:function(e,t,n){const r=vf(e,"x","slice1d");return ju(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Ky(r,[t],[n])}}),$x=Sf({slice2d_:function(e,t,n){const r=vf(e,"x","slice2d");return ju(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Ky(r,t,n)}}),Fx=Sf({slice3d_:function(e,t,n){const r=vf(e,"x","slice3d");return ju(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Ky(r,t,n)}}),Rx=Sf({slice4d_:function(e,t,n){const r=vf(e,"x","slice4d");return ju(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Ky(r,t,n)}}),Mx=Sf({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=vf(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return cf.runKernel(gh,r,a)}}),Dx=Sf({fft_:function(e){ju("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return cf.runKernel(Vc,t)}}),Ox=Sf({ifft_:function(e){ju("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return cf.runKernel(ed,t)}}),Lx=Sf({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Vy(e,[n,t]);r=Ox(a)}else{const a=[n,2*(t-1)],s=Vy(hx(e),[n,t]),i=Vy(Gb(e),[n,t]),o=gx(Ky(s,[0,1],[n,t-2]),1),u=py(gx(Ky(i,[0,1],[n,t-2]),1),Ix(-1)),l=jy([s,o],1),c=jy([i,u],1),d=Vy(Nf(l,c),[a[0],a[1]]);r=Ox(d)}if(r=hx(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Vy(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Px=Sf({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=vf(e,"x","split"),a={x:r},s={numOrSizeSplits:t,axis:n};return cf.runKernel(mh,a,s)}}),zx=Sf({rfft_:function(e,t){ju("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=Ky(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=jy([e,Rw(r)],e.shape.length-1),n=t}else a=e;const s=Tb(a),i=Vy(Nf(a,s),[r,n]),o=Dx(i),u=Math.floor(n/2)+1,l=hx(o),c=Gb(o),d=Px(l,[u,n-u],l.shape.length-1),h=Px(c,[u,n-u],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=u,Vy(Nf(d[0],h[0]),p)}}),Bx=Sf({sqrt_:function(e){const t={x:vf(e,"x","sqrt","float32")};return cf.runKernel(hh,t)}}),Wx=Sf({squaredDifference_:function(e,t){let n=vf(e,"a","squaredDifference"),r=vf(t,"b","squaredDifference");[n,r]=ef(n,r),qm(n.shape,r.shape);const a={a:n,b:r};return cf.runKernel(kh,a,{})}}),Ux=Sf({squeeze_:function(e,t){const n=vf(e,"x","squeeze");return Vy(n,ol(n.shape,t).newShape)}}),Vx=Sf({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=kf(e,"tensors","stack","string_or_numeric");ju(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&ju(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return cf.runKernel(Pd,r,a)}}),Gx=Sf({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=vf(e,"x","step"),r={x:n},a={alpha:t};return cf.runKernel(zh,r,a)}}),Hx=Sf({stridedSlice_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,u=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const l=vf(e,"x","stridedSlice","string_or_numeric"),c={x:l},d={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return cf.runKernel(Sh,c,d)}}),jx=Sf({tan_:function(e){const t={x:vf(e,"x","tan","float32")};return cf.runKernel(Ch,t)}});function qx(e,t){Ku(e);const n=bf(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ef(e,null,n,t)}function Kx(e,t,n){if(Ku(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=bf(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ef(e,t,r,n)}function Xx(e,t,n){if(Ku(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=bf(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ef(e,t,r,n)}function Yx(e,t,n){if(Ku(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=bf(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ef(e,t,r,n)}function Zx(e,t,n){if(Ku(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=bf(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ef(e,t=t||r,r,n)}var Jx=Sf({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=vf(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,u]=cf.runKernel(Fh,s,i);return{values:o,indices:u}}}),Qx=Sf({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new sx(t,n,r,!0,a),i=wm(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),ev=Sf({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=vf(e,"x","unique","string_or_numeric");ju(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,i]=cf.runKernel(Dh,r,a);return{values:s,indices:i}}}),tv=Sf({unsortedSegmentSum_:function(e,t,n){const r=vf(e,"x","unsortedSegmentSum"),a=vf(t,"segmentIds","unsortedSegmentSum","int32");ju(Qu(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},i={numSegments:n};return cf.runKernel(Lh,s,i)}}),nv=Sf({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=vf(e,"x","unstack","string_or_numeric");ju(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return cf.runKernel(Oh,r,a)}});function rv(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return cf.makeVariable(e,t,n,r)}function av(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=wm(e,"int32"),a=wm([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var sv=async function(e){const t=vf(e,"condition","whereAsync","bool"),n=await t.data(),r=av(t.shape,n);return e!==t&&t.dispose(),r},iv=async function(e,t,n){const r=vf(e,"tensor","boolMask"),a=vf(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;ju(i>0,(()=>"mask cannot be scalar")),qu(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const l=o.slice(0,s).concat([u],o.slice(s+i)),c=Vy(r,l),d=Vy(a,[-1]),h=await sv(d),p=Ux(h,[1]),f=Wb(c,p,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),c.dispose(),d.dispose(),h.dispose(),f};function ov(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return fy(e);if(1!==e.rank&&null===n)return ov(Vy(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return pw(fy(e),n);if(t===1/0)return dw(fy(e),n);if(t===-1/0)return Ow(fy(e),n);if("euclidean"===t||2===t)return Bx(pw(ex(fy(e),Ix(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return dw(pw(fy(e),n[0]),n[1]-1);if(t===1/0)return dw(pw(fy(e),n[1]),n[0]);if(t===-1/0)return Ow(pw(fy(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Bx(pw(Bw(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var uv=Sf({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=ov(e=vf(e,"x","norm"),t,n);let s=a.shape;if(r){const t=il(n,e.shape);s=bw(a.shape,t)}return Vy(a,s)}}),lv=Sf({movingAverage_:function(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=vf(e,"v","movingAverage"),i=vf(t,"x","movingAverage"),o=vf(n,"decay","movingAverage");tf(s,i),ju(Ju(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=Ix(1),l=hw(u,o);let c=py(hw(i,s),l);if(a){ju(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=vf(r,"step","movingAverage");c=hy(c,hw(u,ex(o,e)))}return cy(s,c)}}),cv=Sf({scatterND_:function(e,t,n){const r=vf(e,"indices","scatterND","int32"),a=vf(t,"updates","scatterND");ig(a,r,n);const s={indices:r,updates:a},i={shape:n};return cf.runKernel(rh,s,i)}});function dv(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}var hv=Sf({sparseToDense_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const a=vf(e,"sparseIndices","sparseToDense","int32"),s=vf(t,"sparseValues","sparseToDense"),i=vf(r,"defaultValue","sparseToDense",s.dtype);dv(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},u={outputShape:n};return cf.runKernel(vh,o,u)}}),pv=Sf({gatherND_:function(e,t){const n=vf(t,"indices","gatherND","int32"),r={params:vf(e,"x","gatherND","string_or_numeric"),indices:n};return cf.runKernel(Yc,r)}}),fv=Sf({dropout_:function(e,t,n,r){const a=vf(e,"x","dropout");if(ju("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),ju(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Lp?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(Ju(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=hy(Bb(cy(cx(s,0,1,"float32",r),i)),i);return py(a,o)}});function mv(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function gv(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return qx(a,"float32")}var yv=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const r=vf(e,"predictions","inTopK"),a=vf(t,"targets","inTopK");ju(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),ju(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),qu(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];ju(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[u,l]=[i.length/s,s],c=ul("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),_f(c,a.shape,"bool")},bv={};su(bv,{conv2d:()=>Sv,depthwiseConv2d:()=>_v,matMul:()=>Tv});var wv=Sf({conv2DBackpropFilter_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=Vy(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Vy(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ju(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),ju(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),ju(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];ju(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),ju(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Uy("conv2dDerFilter",a,i);const d={x:o,dy:u},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return cf.runKernel(gc,d,h)}});function xv(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return py(e,Gx(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function vv(e,t){let n=t;const r=jm(e.shape,t.shape);return r.length>0&&(n=pw(n,r)),Vy(n,e.shape)}function kv(e,t,n,r){if("linear"===t)return e;if("relu"===t)return fx(e);if("elu"===t)return Fb(e);if("relu6"===t)return mx(e);if("prelu"===t)return tx(e,n);if("leakyrelu"===t)return Kb(e,r);if("sigmoid"===t)return qy(e);throw new Error(`Unknown fused activation ${t}.`)}var Iv=(e,t)=>!(e>0)||"linear"===t,Sv=Sf({fusedConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:u,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:d}=e;if(l=l||"linear",!1===Iv(cf.state.gradientDepth,l)){let e=db(t,n,r,a,s,i,o);return null!=u&&(e=cy(e,u)),kv(e,l,c,d)}const h=vf(t,"x","conv2d","float32"),p=vf(n,"filter","conv2d","float32");let f=h,m=!1;3===h.rank&&(m=!0,f=Vy(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ju(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),ju(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),Uy("fused conv2d",a,o),ju(f.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),ju(By(r,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),ju("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const g=Ay(f.shape,p.shape,r,i,a,o);let y,b;null!=u&&(y=vf(u,"bias","fused conv2d"),[y]=ef(y,h),qm(g.outShape,y.shape)),null!=c&&(b=vf(c,"prelu weights","fused conv2d"));const w=(e,t)=>{const[n,s,o,u]=t,c=xv(e,o,l);ju(zy(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=[pb(s.shape,c,n,r,a),wv(s,c,n.shape,r,a)];if(null!=u){const e=vv(u,c);d.push(e)}return d},x={x:f,filter:p,bias:y,preluActivationWeights:b},v={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:o,activation:l,leakyreluAlpha:d};return null==u?iw(((e,t,n)=>{let r=cf.runKernel(Vh,x,v);return n([t,e,r]),m&&(r=Vy(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}}))(f,p):iw(((e,t,n,r)=>{let a=cf.runKernel(Vh,x,v);return r([t,e,a,n]),m&&(a=Vy(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:w}}))(f,p,y)}}),Nv=Sf({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=Vy(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Vy(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return cf.runKernel(Tc,l,c)}}),Ev=Sf({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=t,u=!1;3===t.rank&&(u=!0,o=Vy(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},d=cf.runKernel(Cc,l,c);return u?Vy(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),_v=Sf({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:u,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:d}=e;if(!1===Iv(cf.state.gradientDepth,l)){let e=Ib(t,n,r,a,s,i,o);return null!=u&&(e=cy(e,u)),kv(e,l,c,d)}const h=vf(t,"x","depthwiseConv2d","float32"),p=vf(n,"filter","depthwiseConv2d","float32");let f=h,m=!1;3===h.rank&&(m=!0,f=Vy(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ju(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),ju(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),ju(f.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==i&&(i=[1,1]),ju(By(r,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),Uy("fused depthwiseConv2d",a,o);const g=Ay(f.shape,p.shape,r,i,a,o,!0);let y,b;null!=u&&(y=vf(u,"bias","fused conv2d"),[y]=ef(y,h),qm(g.outShape,y.shape)),null!=c&&(b=vf(c,"prelu weights","fused depthwiseConv2d"));const w=(e,t)=>{ju(zy(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[n,s,u,c]=t,d=xv(e,u,l),h=Ev(s.shape,d,n,r,a,i,o),p=Nv(s,d,n.shape,r,a,i,o);return null!=c?[h,p,vv(y,d)]:[h,p]},x={x:f,filter:p,bias:y,preluActivationWeights:b},v={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:o,activation:l,leakyreluAlpha:d};return null==u?iw(((e,t,n)=>{let r=cf.runKernel(Gh,x,v);return n([t,e,r]),m&&(r=Vy(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}}))(f,p):iw(((e,t,n,r)=>{let a=cf.runKernel(Gh,x,v);return r([t,e,a,n]),m&&(a=Vy(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:w}}))(f,p,y)}}),Tv=Sf({fusedMatMul_:function(e){let{a:t,b:n,transposeA:r=!1,transposeB:a=!1,bias:s,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:u}=e;if(!1===Iv(cf.state.gradientDepth,i)){let e=Bm(t,n,r,a);return null!=s&&(e=cy(e,s)),kv(e,i,o,u)}let l=vf(t,"a","fused matMul"),c=vf(n,"b","fused matMul");[l,c]=ef(l,c);const d=r?l.shape[l.rank-2]:l.shape[l.rank-1],h=a?c.shape[c.rank-1]:c.shape[c.rank-2],p=r?l.shape[l.rank-1]:l.shape[l.rank-2],f=a?c.shape[c.rank-2]:c.shape[c.rank-1],m=l.shape.slice(0,-2),g=c.shape.slice(0,-2),y=Yu(m),b=Yu(g);ju(d===h,(()=>`Error in fused matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${r} and transposeB=${a} must match.`));const w=qm(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,f]),x=Vy(l,r?[y,d,p]:[y,p,d]),v=Vy(c,a?[b,f,h]:[b,h,f]);let k,I;null!=s&&(k=vf(s,"bias","fused matMul"),[k]=ef(k,l),qm(w,k.shape)),null!=o&&(I=vf(o,"prelu weights","fused matMul"));const S=(e,t)=>{const[n,o,u,l]=t,c=xv(Vy(e,u.shape),u,i);let d,h;return r||a?!r&&a?(d=Bm(c,o,!1,!1),h=Bm(c,n,!0,!1)):r&&!a?(d=Bm(o,c,!1,!0),h=Bm(n,c,!1,!1)):(d=Bm(o,c,!0,!0),h=Bm(c,n,!0,!0)):(d=Bm(c,o,!1,!0),h=Bm(n,c,!0,!1)),null!=s?[d,h,vv(l,c)]:[d,h]},N={a:x,b:v,bias:k,preluActivationWeights:I},E={transposeA:r,transposeB:a,activation:i,leakyreluAlpha:u};return null==s?iw(((e,t,n)=>{const r=cf.runKernel(Uh,N,E);return n([e,t,r]),{value:Vy(r,w),gradFunc:S}}))(x,v):iw(((e,t,n,r)=>{const a=cf.runKernel(Uh,N,E);return r([e,t,a,n]),{value:Vy(a,w),gradFunc:S}}))(x,v,k)}}),Cv=Sf({hammingWindow_:function(e){return gv(e,.54,.46)}}),Av=Sf({hannWindow_:function(e){return gv(e,.5,.5)}}),$v=Sf({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const i=[];for(;s+t<=e.size;)i.push(Ky(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=jy([Ky(e,s,t-r),zb([r],a)]);i.push(o),s+=n}return 0===i.length?Kx([],[0,t]):Vy(jy(i),[i.length,t])}}),Fv=Sf({stft_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Av;null==r&&(r=mv(t));const s=$v(e,t,n),i=py(s,a(t));return zx(i,r)}}),Rv=Sf({cropAndResize_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=vf(e,"image","cropAndResize"),o=vf(t,"boxes","cropAndResize","float32"),u=vf(n,"boxInd","cropAndResize","int32"),l=o.shape[0];ju(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),ju(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),ju(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),ju(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),ju(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),ju("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r},h=cf.runKernel(Sc,c,d);return h}}),Mv=Sf({flipLeftRight_:function(e){const t=vf(e,"image","flipLeftRight","float32");ju(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return cf.runKernel(Hc,n,{})}}),Dv=Sf({grayscaleToRGB_:function(e){const t=vf(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];ju(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),ju(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Lb(t,a)}}),Ov=Sf({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=vf(e,"image","rotateWithOffset","float32");ju(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r},o=cf.runKernel(Wh,s,i);return o}});function Lv(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),ju(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),ju(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),ju(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),ju(1===t.rank,(()=>"scores must be a 1D tensor")),ju(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),ju(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Pv=Sf({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=vf(e,"boxes","nonMaxSuppression","float32"),i=vf(t,"scores","nonMaxSuppression","float32"),o=Lv(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return cf.runKernel(Rd,{boxes:s,scores:i},u)}});function zv(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Bv)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Bv(e,t){return e>t?1:e<t?-1:0}function Wv(e,t,n,r,a){return Gv(e,t,n,r,a,0)}function Uv(e,t,n,r,a,s){return Gv(e,t,n,r,a,0,!1,s,!0)}function Vv(e,t,n,r,a,s){return Gv(e,t,n,r,a,s,!0)}function Gv(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],u=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(qv);const c=s>0?-.5/s:0,d=[],h=[];for(;d.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=d.length-1;n>=i;--n){const i=Hv(e,s,d[n]);if(i>=r){o=!0;break}if(t.score=t.score*jv(r,c,i),t.score<=a)break}t.suppressBeginIndex=d.length,o||(t.score===n?(d.push(s),h.push(t.score)):t.score>a&&zv(l,t,qv))}const p=d.length,f=n-p;o&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return i&&(m.selectedScores=h),u&&(m.validOutputs=p),m}function Hv(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-l)*(h-c);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,d),b=Math.min(u,h),w=Math.max(y-m,0)*Math.max(b-g,0);return w/(p+f-w)}function jv(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function qv(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var Kv=Sf({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=vf(e,"boxes","nonMaxSuppression"),o=vf(t,"scores","nonMaxSuppression"),u=Lv(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},d=cf.runKernel(Dd,l,c);return{selectedIndices:d[0],selectedScores:d[1]}}}),Xv=Sf({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=vf(e,"boxes","nonMaxSuppression"),o=vf(t,"scores","nonMaxSuppression"),u=Lv(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,h={boxes:i,scores:o},p={maxOutputSize:l,iouThreshold:c,scoreThreshold:d,padToMaxOutputSize:s},f=cf.runKernel(Md,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}}),Yv=Sf({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=vf(e,"images","resizeBilinear");ju(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),ju(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),ju(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Vy(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=cf.runKernel(Zd,o,u);return i?Vy(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Zv=Sf({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=vf(e,"images","resizeNearestNeighbor");ju(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),ju(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),ju("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),ju(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Vy(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=cf.runKernel(Xd,o,u);return i?Vy(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});function Jv(e,t){let n,r,a,s,i,o,u=qx([-1]),l=qx([0]),c=qx([0]);for(let d=0;d<e.size-1;d++){n=Ky(e,0,d+1),r=Ky(e,d+1),i=hy(pw(n),t),o=hy(pw(r),t);const h=pw(py(n,dx(0,n.size)));a=hy(h,pw(n));const p=zb(r.shape,n.size),f=cy(dx(0,r.size),p),m=py(r,f);s=hy(pw(m),pw(r));const g=hw(a,s),y=hw(a,s),b=py(i,o);c=py(py(b,g),y);const w=Ub(c,l);l=_b(w,c,l),u=_b(w,qx([d]),u)}return u}var Qv=Sf({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=vf(e,"image","threshold"),s=.2989,i=.587,o=.114,u=a.shape[0]*a.shape[1];let l,c,d,h,p=py(qx([r]),255);if(ju(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),ju(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),ju("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),ju("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[l,c,d]=Px(a,[1,1,1],-1);const e=py(l,s),t=py(c,i),n=py(d,o);h=cy(cy(e,t),n)}else h=e;"otsu"===t&&(p=Jv(nb(xm(vx(h),"int32"),_f([]),256),u));const f=n?Yb(h,p):Ub(h,p),m=xm(py(f,255),"int32");return m}}),ek=Sf({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const i=vf(e,"image","transform","float32"),o=vf(t,"transforms","transform","float32");ju(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),ju(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),ju(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return cf.runKernel(Rh,u,l)}}),tk=Sf({bandPart_:function(e,t,n){ju(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),ju(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=vf(e,"a","bandPart");ju(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Vy(dx(0,s,1,"int32"),[-1,1]),u=dx(0,i,1,"int32"),l=hw(o,u),c=Sw(Yb(l,Ix(+t,"int32")),Vb(l,Ix(-n,"int32"))),d=Rw([s,i],r.dtype);return Vy(Vx(nv(Vy(r,[-1,s,i])).map((e=>_b(c,e,d)))),a)}}),nk=Sf({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ju(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)ju(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Px(e,e.shape[0],0).map((e=>Ux(e,[0])));ju(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(cf.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=py(pw(py(n[r],e)),n[r]);e=hw(e,t)}return hy(e,uv(e,"euclidean"))})));return t?Vx(n,0):n}});function rk(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return cf.tidy((()=>{ju(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=Pb(n),s=vm(e);const i=Kx([[1]],[1,1]);let o=vm(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=cf.tidy((()=>{const t=Ky(s,[e,e],[n-e,1]),u=uv(t),l=Ky(s,[e,e],[1,1]),c=_b(Ub(l,0),Kx([[-1]]),Kx([[1]])),d=hw(l,py(c,u)),h=hy(t,d);o=1===h.shape[0]?vm(i):jy([i,Ky(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=uw(hy(Bm(c,d),u)),f=Ky(s,[e,0],[n-e,r]),m=py(p,o),g=Um(o);if(0===e)s=hw(f,Bm(m,Bm(g,f)));else{const t=hw(f,Bm(m,Bm(g,f)));s=jy([Ky(s,[0,0],[e,r]),t],0)}const y=Um(m),b=Ky(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=hw(b,Bm(Bm(b,o),y));else{const t=hw(b,Bm(Bm(b,o),y));a=jy([Ky(a,[0,0],[n,e]),t],1)}return[o,s,a]})),Jg([t,u,l])}return!t&&n>r&&(a=Ky(a,[0,0],[n,r]),s=Ky(s,[0,0],[r,r])),[a,s]}))}var ak,sk,ik=Sf({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(ju(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return rk(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=nv(Vy(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=rk(e,t);a.push(n),s.push(r)})),[Vy(Vx(a,0),e.shape),Vy(Vx(s,0),e.shape)]}}});(sk=ak||(ak={}))[sk.NONE=0]="NONE",sk[sk.MEAN=1]="MEAN",sk[sk.SUM=2]="SUM",sk[sk.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";var ok=Sf({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ak.SUM_BY_NONZERO_WEIGHTS;const r=vf(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=vf(t,"weights","computeWeightedLoss"));const s=null==a?r:py(r,a);if(n===ak.NONE)return s;if(n===ak.SUM)return pw(s);if(n===ak.MEAN){if(null==a)return Fw(s);{const e=r.size/a.size,t=hy(pw(s),pw(a));return e>1?hy(t,Ix(e)):t}}if(n===ak.SUM_BY_NONZERO_WEIGHTS){if(null==a)return hy(pw(s),Ix(r.size));{const e=py(a,Mw(r.shape)),t=xm(pw(Gw(e,Ix(0))),"float32");return hy(pw(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),uk=Sf({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ak.SUM_BY_NONZERO_WEIGHTS;const a=vf(e,"labels","absoluteDifference"),s=vf(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=vf(n,"weights","absoluteDifference")),qu(a.shape,s.shape,"Error in absoluteDifference: ");const o=fy(hw(a,s));return ok(o,i,r)}}),lk=Sf({cosineDistance_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ak.SUM_BY_NONZERO_WEIGHTS;const s=vf(e,"labels","cosineDistance"),i=vf(t,"predictions","cosineDistance");let o=null;null!=r&&(o=vf(r,"weights","cosineDistance")),qu(s.shape,i.shape,"Error in cosineDistance: ");const u=Ix(1),l=hw(u,pw(py(s,i),n,!0));return ok(l,o,a)}}),ck=Sf({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ak.SUM_BY_NONZERO_WEIGHTS,a=vf(e,"labels","hingeLoss");const s=vf(t,"predictions","hingeLoss");let i=null;null!=n&&(i=vf(n,"weights","hingeLoss")),qu(a.shape,s.shape,"Error in hingeLoss: ");const o=Ix(1);a=hw(py(Ix(2),a),o);const u=fx(hw(o,py(a,s)));return ok(u,i,r)}}),dk=Sf({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ak.SUM_BY_NONZERO_WEIGHTS;const s=vf(e,"labels","huberLoss"),i=vf(t,"predictions","huberLoss");let o=null;null!=n&&(o=vf(n,"weights","huberLoss")),qu(s.shape,i.shape,"Error in huberLoss: ");const u=Ix(r),l=fy(hw(i,s)),c=Lw(l,u),d=hw(l,c),h=cy(py(Ix(.5),Bw(c)),py(u,d));return ok(h,o,a)}}),hk=Sf({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ak.SUM_BY_NONZERO_WEIGHTS;const s=vf(e,"labels","logLoss"),i=vf(t,"predictions","logLoss");let o=null;null!=n&&(o=vf(n,"weights","logLoss")),qu(s.shape,i.shape,"Error in logLoss: ");const u=Ix(1),l=Ix(r),c=uw(py(s,Qb(cy(i,l)))),d=py(hw(u,s),Qb(cy(hw(u,i),l))),h=hw(c,d);return ok(h,o,a)}}),pk=Sf({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ak.SUM_BY_NONZERO_WEIGHTS;const a=vf(e,"labels","meanSquaredError"),s=vf(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=vf(n,"weights","meanSquaredError")),qu(a.shape,s.shape,"Error in meanSquaredError: ");const o=Wx(a,s);return ok(o,i,r)}});function fk(e,t){const n=vf(e,"labels","sigmoidCrossEntropyWithLogits"),r=vf(t,"logits","sigmoidCrossEntropyWithLogits");qu(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=fx(r),s=py(r,n),i=ew(Mb(uw(fy(r))));return cy(hw(a,s),i)}var mk=Sf({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ak.SUM_BY_NONZERO_WEIGHTS,s=vf(e,"multiClassLabels","sigmoidCrossEntropy");const i=vf(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=vf(n,"weights","sigmoidCrossEntropy")),qu(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Ix(r),t=Ix(1),n=Ix(.5);s=cy(py(s,hw(t,e)),py(n,e))}const u=fk(s,i);return ok(u,o,a)}});function gk(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=iw(((e,t,r)=>{const a=Iw(t,[n],!0),s=hw(xm(t,"float32"),a);r([e,s]);const i=uw(py(s,e));return{value:pw(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=bw(e.shape,[n]);return[py(Vy(e,s),hw(xm(r,"float32"),Mb(a))),py(Vy(e,s),hw(Mb(a),xm(r,"float32")))]}}}));return r(e,t)}var yk=Sf({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ak.SUM_BY_NONZERO_WEIGHTS,s=vf(e,"onehotLabels","softmaxCrossEntropy");const i=vf(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=vf(n,"weights","softmaxCrossEntropy")),qu(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Ix(r),t=Ix(1),n=Ix(s.shape[1]);s=cy(py(s,hw(t,e)),hy(e,n))}const u=gk(s,i);return ok(u,o,a)}}),bk=Sf({sparseFillEmptyRows_:function(e,t,n,r){const a=vf(e,"indices","sparseFillEmptyRows","int32"),s=vf(t,"values","sparseFillEmptyRows"),i=vf(n,"denseShape","sparseFillEmptyRows","int32"),o=vf(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},l=cf.runKernel(yh,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),wk=Sf({sparseReshape_:function(e,t,n){const r=vf(e,"inputIndices","sparseReshape","int32"),a=vf(t,"inputShape","sparseReshape","int32"),s=vf(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=cf.runKernel(bh,i);return{outputIndices:o[0],outputShape:o[1]}}}),xk=Sf({sparseSegmentMean_:function(e,t,n){const r=vf(e,"data","sparseSegmentMean"),a=vf(t,"indices","sparseSegmentMean","int32"),s=vf(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return cf.runKernel(wh,i)}}),vk=Sf({sparseSegmentSum_:function(e,t,n){const r=vf(e,"data","sparseSegmentSum"),a=vf(t,"indices","sparseSegmentSum","int32"),s=vf(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return cf.runKernel(xh,i)}}),kk=Sf({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=vf(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=vf(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},d={data:u,dataSplits:l},h=cf.runKernel(Nh,d,c);return{nGrams:h[0],nGramsSplits:h[1]}}}),Ik=Sf({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=vf(e,"input","stringSplit","string"),a=vf(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=cf.runKernel(Eh,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Sk=Sf({stringToHashBucketFast_:function(e,t){const n=vf(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return cf.runKernel(_h,a,r)}}),Nk={fft:Dx,ifft:Ox,rfft:zx,irfft:Lx},Ek={hammingWindow:Cv,hannWindow:Av,frame:$v,stft:Fv},_k={flipLeftRight:Mv,grayscaleToRGB:Dv,resizeNearestNeighbor:Zv,resizeBilinear:Yv,rotateWithOffset:Ov,cropAndResize:Rv,nonMaxSuppression:Pv,nonMaxSuppressionAsync:async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=vf(e,"boxes","nonMaxSuppressionAsync"),i=vf(t,"scores","nonMaxSuppressionAsync"),o=Lv(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:d}=Wv(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),qx(d,"int32")},nonMaxSuppressionWithScore:Kv,nonMaxSuppressionWithScoreAsync:async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=vf(e,"boxes","nonMaxSuppressionAsync"),o=vf(t,"scores","nonMaxSuppressionAsync"),u=Lv(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],d=l[1],{selectedIndices:h,selectedScores:p}=Vv(c,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:qx(h,"int32"),selectedScores:qx(p)}},nonMaxSuppressionPadded:Xv,nonMaxSuppressionPaddedAsync:async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=vf(e,"boxes","nonMaxSuppressionAsync"),o=vf(t,"scores","nonMaxSuppressionAsync"),u=Lv(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Uv(h,p,l,c,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:qx(f,"int32"),validOutputs:Ix(m,"int32")}},threshold:Qv,transform:ek},Tk={bandPart:tk,gramSchmidt:nk,qr:ik},Ck={absoluteDifference:uk,computeWeightedLoss:ok,cosineDistance:lk,hingeLoss:ck,huberLoss:dk,logLoss:hk,meanSquaredError:pk,sigmoidCrossEntropy:mk,softmaxCrossEntropy:yk},Ak={sparseFillEmptyRows:bk,sparseReshape:wk,sparseSegmentMean:xk,sparseSegmentSum:vk},$k={stringNGrams:kk,stringSplit:Ik,stringToHashBucketFast:Sk},Fk=class extends _g{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Jg(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return sw(e,t)}dispose(){null!=this.iterations_&&Jg(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ix(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Fk,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Rk=class extends Fk{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=cf.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=cf.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Zg((()=>Tb(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Zg((()=>Tb(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Zg((()=>{const e=cy(py(s,this.rho),py(Bw(a),1-this.rho)),t=py(hy(Bx(cy(i,this.epsilon)),Bx(cy(s,this.epsilon))),a),n=cy(py(i,this.rho),py(Bw(t),1-this.rho));s.assign(e),i.assign(n);const o=cy(py(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Jg(this.accumulatedGrads.map((e=>e.variable))),Jg(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Rk.className="Adadelta",Cg(Rk);var Mk=class extends Fk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=cf.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Zg((()=>zb(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Zg((()=>{const e=cy(s,Bw(a));s.assign(e);const t=cy(py(hy(a,Bx(cy(e,cf.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Jg(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Mk.className="Adagrad",Cg(Mk);var Dk=class extends Fk{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Zg((()=>{this.accBeta1=Ix(t).variable(),this.accBeta2=Ix(n).variable()})),null==r&&(this.epsilon=cf.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Zg((()=>{const n=hw(1,this.accBeta1),r=hw(1,this.accBeta2);t.forEach(((t,a)=>{const s=cf.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Zg((()=>Tb(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Zg((()=>Tb(s).variable(!1)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=cy(py(o,this.beta1),py(i,1-this.beta1)),c=cy(py(u,this.beta2),py(Bw(i),1-this.beta2)),d=hy(l,n),h=hy(c,r);o.assign(l),u.assign(c);const p=cy(py(hy(d,cy(Bx(h),this.epsilon)),-this.learningRate),s);s.assign(p)})),this.accBeta1.assign(py(this.accBeta1,this.beta1)),this.accBeta2.assign(py(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Jg(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Jg(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Zg((()=>{this.accBeta1.assign(ex(this.beta1,this.iterations_+1)),this.accBeta2.assign(ex(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Dk.className="Adam",Cg(Dk);var Ok=class extends Fk{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Zg((()=>{this.iteration=Ix(0).variable(),this.accBeta1=Ix(t).variable()})),null==r&&(this.epsilon=cf.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Zg((()=>{const n=hw(1,this.accBeta1),r=hy(-this.learningRate,cy(py(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=cf.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Tb(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Tb(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=cy(py(o,this.beta1),py(i,1-this.beta1)),c=py(u,this.beta2),d=fy(i),h=$w(c,d);o.assign(l),u.assign(h);const p=cy(py(hy(r,n),hy(l,cy(h,this.epsilon))),s);s.assign(p)})),this.iteration.assign(cy(this.iteration,1)),this.accBeta1.assign(py(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Jg(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Jg(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Ok.className="Adamax",Cg(Ok);var Lk=class extends Fk{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=cf.registeredVariables[t];Zg((()=>{const e=cy(py(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Qg(Ix(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Lk.className="SGD",Cg(Lk);var Pk=class extends Lk{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ix(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=cf.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Zg((()=>Tb(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Zg((()=>{let e;const t=cy(py(this.m,a),s);e=this.useNesterov?cy(py(this.c,cy(s,py(t,this.m))),r):cy(py(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Jg(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Pk.className="Momentum",Cg(Pk);var zk=class extends Fk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=cf.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=cf.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Zg((()=>Tb(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Zg((()=>Tb(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Zg((()=>Tb(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Zg((()=>{const e=cy(py(i,this.decay),py(Bw(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=cy(py(t,this.decay),py(s,1-this.decay)),u=hy(py(s,this.learningRate),Bx(hw(e,cy(Bw(a),this.epsilon)))),l=cy(py(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=hw(r,l);r.assign(c)}else{const e=cy(py(i,this.decay),py(Bw(s),1-this.decay)),t=cy(py(o,this.momentum),hy(py(s,this.learningRate),Bx(cy(e,this.epsilon))));i.assign(e),o.assign(t);const n=hw(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Jg(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Jg(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Jg(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};zk.className="RMSProp",Cg(zk);var Bk=class{static sgd(e){return new Lk(e)}static momentum(e,t){return new Pk(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new zk(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Dk(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Rk(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Ok(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Mk(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},Wk={sgd:Bk.sgd,momentum:Bk.momentum,adadelta:Bk.adadelta,adagrad:Bk.adagrad,rmsprop:Bk.rmsprop,adamax:Bk.adamax,adam:Bk.adam},Uk="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Vk(){return new Promise((e=>Uk((()=>e()))))}var Gk={};function Hk(e,t){const n=e[0].length;e.forEach(((e,t)=>{ju(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),ju(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)ju(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function jk(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}su(Gk,{ERF_A1:()=>aI,ERF_A2:()=>sI,ERF_A3:()=>iI,ERF_A4:()=>oI,ERF_A5:()=>uI,ERF_P:()=>rI,PARALLELIZE_THRESHOLD:()=>qk,SELU_SCALE:()=>nI,SELU_SCALEALPHA:()=>tI,applyActivation:()=>kv,assertAndGetBroadcastShape:()=>qm,assertAxesAreInnerMostDims:()=>ww,assertParamsConsistent:()=>Hk,assignToTypedArray:()=>fI,axesAreInnerMostDims:()=>mw,calculateShapes:()=>og,checkEinsumDimSizes:()=>xI,checkPadOnDimRoundingMode:()=>Uy,combineLocations:()=>gw,complexWithEvenIndex:()=>dI,complexWithOddIndex:()=>hI,computeConv2DInfo:()=>Ay,computeConv3DInfo:()=>$y,computeDefaultPad:()=>Fy,computeDilation2DInfo:()=>_y,computeOptimalWindowSize:()=>Kk,computeOutAndReduceShapes:()=>yw,computeOutShape:()=>jk,computePool2DInfo:()=>Ty,computePool3DInfo:()=>Cy,convertConv2DDataFormat:()=>Wy,decodeEinsumEquation:()=>bI,eitherStridesOrDilationsAreOne:()=>By,expandShapeToKeepDim:()=>bw,exponent:()=>gI,exponents:()=>mI,fromStringArrayToUint8:()=>UI,fromUint8ToStringArray:()=>WI,getAxesPermutation:()=>xw,getBroadcastDims:()=>Hm,getComplexWithIndex:()=>pI,getEinsumComputePath:()=>vI,getEinsumPermutation:()=>wI,getFusedBiasGradient:()=>vv,getFusedDyActivation:()=>xv,getImageCenter:()=>Xk,getInnerMostAxes:()=>kw,getPermuted:()=>Zk,getReductionAxes:()=>jm,getReshaped:()=>Yk,getReshapedPermuted:()=>Jk,getSliceBeginCoords:()=>Qk,getSliceSize:()=>eI,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>NI,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>EI,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>_I,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>AI,getSparseReshapeInputOutputMismatchErrorMessage:()=>FI,getSparseReshapeInputOutputMultipleErrorMessage:()=>$I,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>TI,getSparseReshapeNegativeOutputDimErrorMessage:()=>CI,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>OI,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>RI,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>MI,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>DI,getUndoAxesPermutation:()=>vw,isIdentityPermutation:()=>kI,log:()=>jh,mergeRealAndImagArrays:()=>lI,prepareAndValidate:()=>rg,prepareSplitSize:()=>SI,segment_util:()=>LI,shouldFuse:()=>Iv,slice_util:()=>ug,splitRealAndImagArrays:()=>cI,tupleValuesAreOne:()=>zy,upcastType:()=>Jp,validateInput:()=>ig,validateUpdateShape:()=>sg,warn:()=>Hh});var qk=30;function Kk(e){return e<=qk?e:vl(e,Math.floor(Math.sqrt(e)))}function Xk(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Yk(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Zk(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Jk(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Qk(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function eI(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var tI=1.7580993408473768,nI=1.0507009873554805,rI=.3275911,aI=.254829592,sI=-.284496736,iI=1.421413741,oI=-1.453152027,uI=1.061405429;function lI(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function cI(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function dI(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function hI(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function pI(e,t){return{real:e[2*t],imag:e[2*t+1]}}function fI(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function mI(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function gI(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var yI=/->/g;function bI(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(yI,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");ju(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function wI(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function xI(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:ju(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function vI(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=II(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function kI(e){return e.every(((e,t)=>e===t))}function II(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function SI(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"==typeof t)ju(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{ju(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}ju(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function NI(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function EI(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function _I(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function TI(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function CI(e,t){return`size ${e} must be non-negative, not ${t}`}function AI(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function $I(e,t){return`Input to reshape is a SparseTensor with ${Yu(e)}\n  dense values, but the requested shape requires a multiple of ${Yu(t)}. inputShape=${e} outputShape= ${t}`}function FI(e,t){return`Input to reshape is a tensor with ${Yu(e)} dense values, but the requested shape has ${Yu(t)}. inputShape=${e} outputShape=${t}`}function RI(){return"segment ids must be >= 0"}function MI(){return"segment ids are not increasing"}function DI(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function OI(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var LI={};function PI(e,t){let n,r=!1;for(e<=qk?(n=e,r=!0):n=vl(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=vl(e,n+1);return n}function zI(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function BI(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function WI(e){try{return e.map((e=>_p(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function UI(e){return e.map((e=>Ep(e)))}su(LI,{collectGatherOpShapeInfo:()=>BI,computeOutShape:()=>zI,segOpComputeOptimalWindowSize:()=>PI});var VI={};su(VI,{nonMaxSuppressionV3Impl:()=>Wv,nonMaxSuppressionV4Impl:()=>Uv,nonMaxSuppressionV5Impl:()=>Vv,whereImpl:()=>av});var GI={kernelName:Bl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>py(e,Gx(xm(n,"float32"),-1))}}},HI={kernelName:Wl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Bw(xm(n,"float32")),r=Bx(hw(Ix(1),t));return uw(hy(e,r))}}}},jI={kernelName:Ul,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Bx(hw(Bw(xm(n,"float32")),1));return hy(e,t)}}}},qI={kernelName:Vl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qm(n.shape,r.shape);return{a:()=>{let t=e;const r=jm(n.shape,a);return r.length>0&&(t=pw(t,r)),Vy(t,n.shape)},b:()=>{let t=e;const n=jm(r.shape,a);return n.length>0&&(t=pw(t,n)),Vy(t,r.shape)}}}},KI={kernelName:Gl,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},XI={kernelName:ql,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tb(n)}}},YI={kernelName:Kl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tb(n)}}},ZI={kernelName:Xl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hy(e,Bx(hw(Ix(1),Bw(xm(n,"float32")))))}}},JI={kernelName:Yl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Bx(cy(Ix(1),Bw(xm(n,"float32"))));return hy(e,t)}}}},QI={kernelName:Ql,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qm(n.shape,r.shape);return{a:()=>{const t=cy(Bw(n),Bw(r));let s=py(e,hy(r,t));const i=jm(n.shape,a);return i.length>0&&(s=pw(s,i)),Vy(s,n.shape)},b:()=>{const t=cy(Bw(n),Bw(r));let s=uw(py(e,hy(n,t)));const i=jm(r.shape,a);return i.length>0&&(s=pw(s,i)),Vy(s,r.shape)}}}},eS={kernelName:Zl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hy(e,cy(Bw(xm(n,"float32")),1))}}},tS={kernelName:Jl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hy(e,hw(Ix(1),Bw(xm(n,"float32"))))}}},nS=Sf({avgPool3dGrad_:function(e,t,n,r,a,s){const i=vf(e,"dy","avgPool3dGrad"),o=vf(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=Vy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Vy(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ju(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),ju(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),Uy("avgPool3dGrad",a,s);const d={dy:u,input:l},h={filterSize:n,strides:r,pad:a,dimRoundingMode:s},p=cf.runKernel(rc,d,h);return c?Vy(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),rS={kernelName:nc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>nS(e,r,a,s,i,o)}}},aS=Sf({avgPoolGrad_:function(e,t,n,r,a){const s=vf(e,"dy","avgPoolGrad"),i=vf(t,"input","avgPoolGrad");ju(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=Vy(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Vy(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ju(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),ju(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},d={filterSize:n,strides:r,pad:a},h=cf.runKernel(tc,c,d);return l?Vy(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),sS={kernelName:ec,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>aS(e,r,a,s,i)}}},iS={kernelName:ac,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Bm(e,a,!1,!1),b:()=>Bm(e,r,!0,!1)}:s&&!i?{a:()=>Bm(a,e,!1,!0),b:()=>Bm(r,e,!1,!1)}:{a:()=>Bm(a,e,!0,!0),b:()=>Bm(e,r,!0,!0)}:{a:()=>Bm(e,a,!1,!0),b:()=>Bm(r,e,!0,!1)}}},oS={kernelName:sc,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Jw(e,r,a)}}},uS={kernelName:oc,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>pw(e,o,!0)}}},lS={kernelName:lc,gradFunc:e=>({x:()=>e.clone()})},cS={kernelName:cc,gradFunc:e=>({x:()=>Tb(e)})},dS={kernelName:dc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>_b(Sw(Vb(r,a),Yb(r,s)),e,Tb(e))}}},hS={kernelName:pc,inputsToSave:["x"],gradFunc:GI.gradFunc},pS={kernelName:fc,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=il(a,t[0].shape)[0],i=r.map((e=>e[s]));return Px(e,i,s).map((e=>()=>e))}},fS={kernelName:mc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return ju(zy(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>pb(r.shape,e,a,i,o,u),filter:()=>wv(r,e,a.shape,i,o,u)}}},mS={kernelName:yc,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>db(e,a,s,i,o,1,u),filter:()=>wv(e,r,a.shape,s,i,o,u)}}},gS=Sf({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Vy(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Vy(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ju(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),ju(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),ju(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),ju(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),ju(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return cf.runKernel(wc,o,u)}}),yS={kernelName:bc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;ju(zy(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>gb(i.shape,e,o,a,s),filter:()=>gS(i,e,o.shape,a,s)}}},bS={kernelName:vc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>py(uw(Tx(xm(n,"float32"))),e)}}},wS={kernelName:kc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>py(Cx(xm(n,"float32")),e)}}},xS={kernelName:Ic,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=xw([a],r.rank);let n=xb(e,a,s,!i);return null!=t&&(n=Um(n,t)),n}}}},vS={kernelName:_c,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;ju(zy(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return ju(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),ju(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),ju(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),ju(By(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),Uy("depthwiseConv2d",s,i),{x:()=>Ev(u.shape,e,l,a,s,o,i),filter:()=>Nv(u,e,l.shape,a,s,o,i)}}},kS={kernelName:$c,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>cf.runKernel(Fc,s,n),filter:()=>cf.runKernel(Rc,i,n)}}},IS={kernelName:Oc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>cf.runKernel(Lc,r)}}},SS={kernelName:Pc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=py(Mb(uw(Bw(n))),2/Math.sqrt(Math.PI));return{x:()=>py(e,r)}}},NS={kernelName:Bc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>py(e,n)}}},ES={kernelName:Wc,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Vy(e,n.shape)}}},_S={kernelName:Uc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>py(e,Mb(n))}}},TS={kernelName:jc,gradFunc:e=>({x:()=>Tb(e)})},CS={kernelName:qc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qm(n.shape,r.shape);return{a:()=>{const t=hy(e,xm(r,"float32")),s=jm(n.shape,a);return s.length>0?Vy(pw(t,s),n.shape):t},b:()=>{let t=py(e,xm(n,"float32"));const s=jm(r.shape,a);s.length>0&&(t=Vy(pw(t,s),r.shape));const i=Bw(r);return uw(hy(t,xm(i,"float32")))}}}},AS={kernelName:Kc,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?Ix(1):o,l=jm(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const d=hw(a,s),h=py(e,u),p=kx(cy(i,Ix(r))),f=py(py(py(p,p),p),Ix(-.5));return{x:()=>1===s.rank?Vy(py(py(e,Lb(Vy(p,[1,1,1,s.shape[0]]),c)),u),a.shape):Vy(py(py(e,p),u),a.shape),mean:()=>{let e=py(py(p,Ix(-1)),h);return 1===s.rank&&(e=pw(e,l)),Vy(e,s.shape)},variance:()=>{let e=py(py(f,d),h);return 1===s.rank&&(e=pw(e,l)),Vy(e,s.shape)},scale:()=>{const t=py(d,p);let n=py(e,t);return 1===s.rank&&(n=pw(n,l)),Vy(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=pw(t,l)),Vy(t,s.shape)}}}},$S={kernelName:Xc,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=il(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,d=FS(0,u),h=FS(u+1,u+1+c),p=RS([o,[n],l]),f=Vy(e,p),m=Vy(a,[n]),g=RS([[u],d,h]),y=Um(f,g);let b=tv(y,m,r.shape[i]);const w=vw(g);return b=Um(b,w),b},indices:()=>a}}};function FS(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function RS(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var MS={kernelName:Jc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Tb(n),b:()=>Tb(r)}}},DS={kernelName:Qc,gradFunc:e=>({x:()=>xm(e,"float32")})},OS={kernelName:nd,gradFunc:e=>({x:()=>Tb(e)})},LS={kernelName:rd,gradFunc:e=>({x:()=>Tb(e)})},PS={kernelName:ad,gradFunc:e=>({x:()=>Tb(e)})},zS={kernelName:sd,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=Ub(r,0);return{x:()=>_b(s,e,py(e,a))}}},BS={kernelName:cd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hy(e,cy(n,1))}}},WS={kernelName:ld,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hy(e,xm(n,"float32"))}}},US={kernelName:fd,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=Mb(r);return hw(e,py(pw(e,a,!0),t))}}}},VS=Sf({localResponseNormalizationBackprop_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5;const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return cf.runKernel(gd,o,u)}}),GS={kernelName:md,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>VS(r,a,e,s,i,o,u)}}};function HS(e,t,n,r){return t.rank<n.rank&&(t=Vy(t,bw(t.shape,r))),e.rank<n.rank&&(e=Vy(e,bw(e.shape,r))),{x:()=>py(e,xm(Eb(n,t),e.dtype))}}var jS={kernelName:yd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=HS(e,t[1],s,il(a,s.shape));return{x:()=>i.x()}}},qS={kernelName:bd,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>py(e,xm(Vb(n,r),"float32")),b:()=>py(e,xm(Xb(n,r),"float32"))}}},KS=Sf({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=vf(e,"dy","maxPool3dGrad"),u=vf(t,"input","maxPool3dGrad"),l=vf(n,"output","maxPool3dGrad");let c=o,d=u,h=l,p=!1;4===u.rank&&(p=!0,c=Vy(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=Vy(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=Vy(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),ju(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),ju(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),ju(5===h.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`)),Uy("maxPool3dGrad",s,i);const f={dy:c,input:d,output:h},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=cf.runKernel(kd,f,m);return p?Vy(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),XS={kernelName:vd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>KS(e,r,a,s,i,o,u)}}},YS=Sf({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=vf(e,"dy","maxPoolGrad"),u=vf(t,"input","maxPoolGrad"),l=vf(n,"output","maxPoolGrad");ju(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),ju(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),ju(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),Uy("maxPoolGrad",s,i);const c={dy:o,input:u,output:l},d={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return cf.runKernel(xd,c,d)}}),ZS={kernelName:zd,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Ky(e,s,r.shape)}}},JS={kernelName:fh,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Zy(e,r,a)}}},QS={kernelName:mh,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>jy(e,r)}}},eN=[GI,HI,jI,qI,KI,XI,YI,ZI,JI,QI,eS,tS,rS,sS,iS,oS,uS,lS,cS,dS,hS,pS,mS,fS,yS,bS,wS,xS,vS,kS,{kernelName:Mc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qm(n.shape,r.shape);return{a:()=>{const t=hy(e,xm(r,"float32")),s=jm(n.shape,a);return s.length>0?Vy(pw(t,s),n.shape):t},b:()=>{let t=py(e,xm(n,"float32"));const s=jm(r.shape,a);s.length>0&&(t=Vy(pw(t,s),r.shape));const i=Bw(r);return uw(hy(t,xm(i,"float32")))}}}},IS,SS,NS,ES,_S,CS,TS,AS,$S,MS,DS,OS,LS,PS,zS,BS,WS,US,GS,jS,jS,qS,XS,{kernelName:wd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>YS(e,r,a,s,i,o)}}},{kernelName:Sd,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=il(a,r.shape),i=Yu(yw(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=Vy(e,t);return hy(py(n,Mw(r.shape,"float32")),i)}}}},{kernelName:Nd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=HS(e,i,s,il(a,s.shape));return{x:()=>o.x()}}},{kernelName:Ed,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>py(e,xm(Yb(n,r),"float32")),b:()=>py(e,xm(Ub(n,r),"float32"))}}},{kernelName:_d,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Ky(e,s,r.shape)}}},{kernelName:Td,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qm(n.shape,r.shape);return{a:()=>{const t=jm(n.shape,a);return t.length>0?Vy(pw(e,t),n.shape):e},b:()=>{const t=py(e,uw(Bb(hy(n,r)))),s=jm(r.shape,a);return s.length>0?Vy(pw(t,s),r.shape):t}}}},{kernelName:Ad,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qm(n.shape,r.shape);return{a:()=>{const t=py(e,xm(r,"float32")),s=jm(n.shape,a);return s.length>0?Vy(pw(t,s),n.shape):t},b:()=>{const t=py(e,xm(n,"float32")),s=jm(r.shape,a);return s.length>0?Vy(pw(t,s),r.shape):t}}}},{kernelName:$d,gradFunc:e=>({x:()=>uw(e)})},{kernelName:Ld,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Rw(n.shape,"float32")}}},{kernelName:Od,gradFunc:e=>({x:()=>Tb(e)})},{kernelName:Pd,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return nv(e,r).map((e=>()=>e))}},ZS,ZS,{kernelName:Wd,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=qm(s.shape,i.shape);return{a:()=>{const t=xm(i,"float32");let n=py(e,py(t,ex(s,hw(t,Ix(1)))));const r=jm(s.shape,o);return r.length>0&&(n=pw(n,r)),Vy(n,s.shape)},b:()=>{const t=Ub(s,0),n=_b(t,Qb(s),Tb(s));let r=py(e,py(a,n));const u=jm(i.shape,o);return u.length>0&&(r=pw(r,u)),Vy(r,i.shape)}}}},{kernelName:Ud,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Ub(n,0);return{x:()=>_b(a,e,py(e,r)),alpha:()=>{let t=_b(a,Tb(e),py(e,n));const s=jm(r.shape,e.shape);return s.length>0&&(t=pw(t,s)),Vy(t,r.shape)}}}},{kernelName:jd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hy(e,uw(Bw(n)))}}},{kernelName:Qd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=py(Yb(n,6),Gx(n));return{x:()=>py(e,xm(r,"float32"))}}},{kernelName:qd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>py(e,xm(Gx(n),"float32"))}}},{kernelName:Kd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vy(e,n.shape)}}},{kernelName:Zd,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>cf.runKernel(Jd,a,n)}}},{kernelName:Xd,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>cf.runKernel(Yd,a,n)}}},{kernelName:eh,gradFunc:(e,t,n)=>{const{dims:r}=n,a=il(r,e.shape);return{x:()=>gx(e,a)}}},{kernelName:th,gradFunc:e=>({x:()=>Tb(e)})},{kernelName:nh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uw(hy(e,py(ex(n,1.5),2)))}}},{kernelName:ah,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>xm(Tb(n),"float32"),t:()=>py(e,xm(n,e.dtype)),e:()=>py(e,xm(Nw(n),e.dtype))}}},{kernelName:sh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ub(n,Ix(0)),r=Ix(tI),a=Ix(nI),s=py(e,a),i=py(py(e,r),Mb(xm(n,"float32")));return _b(t,s,i)}}}},{kernelName:ch,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>py(e,py(n,hw(Ix(1),n)))}}},{kernelName:lh,gradFunc:e=>({x:()=>Tb(e)})},{kernelName:oh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>py(bb(xm(n,"float32")),e)}}},{kernelName:uh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>py(wb(xm(n,"float32")),e)}}},{kernelName:ih,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=Ig(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>qw(e,l)}}},{kernelName:gh,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=py(e,r);return{logits:()=>hw(s,py(pw(s,[a],!0),r))}}},{kernelName:dh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>py(e,qy(n))}}},JS,JS,QS,QS,{kernelName:hh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hy(e,py(Bx(xm(n,"float32")),2))}}},{kernelName:kh,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ix(2);return{a:()=>py(e,py(a,hw(n,r))),b:()=>py(e,py(a,hw(r,n)))}}},{kernelName:Ih,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>py(e,py(xm(n,"float32"),2))}}},{kernelName:zh,gradFunc:e=>({x:()=>Tb(e)})},{kernelName:Th,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qm(n.shape,r.shape);return{a:()=>{let t=e;const r=jm(n.shape,a);return r.length>0&&(t=pw(t,r)),Vy(t,n.shape)},b:()=>{let t=e;const n=jm(r.shape,a);return n.length>0&&(t=pw(t,n)),Vy(uw(t),r.shape)}}}},{kernelName:ph,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;il(s,r.shape).forEach((e=>{a[e]=1}));const i=Vy(e,a),o=py(i,Mw(r.shape,"float32"));return{x:()=>o}}},{kernelName:Ch,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hy(e,Bw(bb(n)))}}},{kernelName:Ah,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>py(hw(Ix(1),Bw(n)),e)}}},{kernelName:$h,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Tb(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=cy(t,Ky(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=cy(t,Ky(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=cy(t,Ky(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=cy(t,Ky(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Mh,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=vw(a);return{x:()=>Um(e,s)}}},{kernelName:Oh,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Vx(e,a)}}},{kernelName:Lh,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=$w(t,Tb(t)),r=Wb(e,n);let a=Vb(t,Ix(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=Db(a,e+1);a=Sw(a,Mw(r.shape,"bool"));const i=Tb(r);return _b(a,r,i)}(e,n)}}},{kernelName:Ph,gradFunc:e=>({x:()=>Tb(e)})}];for(const e of eN)Qh(e);Pp().prototype.abs=function(){return this.throwIfDisposed(),fy(this)},Pp().prototype.acos=function(){return this.throwIfDisposed(),my(this)},Pp().prototype.acosh=function(){return this.throwIfDisposed(),gy(this)},Pp().prototype.add=function(e){return this.throwIfDisposed(),cy(this,e)},Pp().prototype.all=function(e,t){return this.throwIfDisposed(),by(this,e,t)},Pp().prototype.any=function(e,t){return this.throwIfDisposed(),wy(this,e,t)},Pp().prototype.argMax=function(e){return this.throwIfDisposed(),xy(this,e)},Pp().prototype.argMin=function(e){return this.throwIfDisposed(),vy(this,e)},Pp().prototype.asScalar=function(){return this.throwIfDisposed(),ju(1===this.size,(()=>"The array must have only 1 element.")),Vy(this,[])},Pp().prototype.asType=function(e){return this.throwIfDisposed(),xm(this,e)},Pp().prototype.as1D=function(){return this.throwIfDisposed(),Vy(this,[this.size])},Pp().prototype.as2D=function(e,t){return this.throwIfDisposed(),Vy(this,[e,t])},Pp().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Vy(this,[e,t,n])},Pp().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Vy(this,[e,t,n,r])},Pp().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Vy(this,[e,t,n,r,a])},Pp().prototype.asin=function(){return this.throwIfDisposed(),ky(this)},Pp().prototype.asinh=function(){return this.throwIfDisposed(),Iy(this)},Pp().prototype.atan=function(){return this.throwIfDisposed(),Sy(this)},Pp().prototype.atan2=function(e){return this.throwIfDisposed(),Ny(this,e)},Pp().prototype.atanh=function(){return this.throwIfDisposed(),Ey(this)},Pp().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Gy(this,e,t,n,r)},Pp().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Zy(this,e,t)},Pp().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Jy(this,e,t,n,r,a)},Pp().prototype.broadcastTo=function(e){return this.throwIfDisposed(),ab(this,e)},Pp().prototype.cast=function(e){return this.throwIfDisposed(),xm(this,e)},Pp().prototype.ceil=function(){return this.throwIfDisposed(),sb(this)},Pp().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ib(this,e,t)},Pp().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Lp&&(e=[e]),jy([this,...e],t)},Pp().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),hb(this,e,t,n,r,a,s)},Pp().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),fb(this,e,t,n,r,a)},Pp().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),db(this,e,t,n,r,a,s)},Pp().prototype.cos=function(){return this.throwIfDisposed(),bb(this)},Pp().prototype.cosh=function(){return this.throwIfDisposed(),wb(this)},Pp().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),xb(this,e,t,n)},Pp().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),kb(this,e,t)},Pp().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Ib(this,e,t,n,r,a,s)},Pp().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Nb(this,e,t,n,r,a)},Pp().prototype.divNoNan=function(e){return this.throwIfDisposed(),Cb(this,e)},Pp().prototype.div=function(e){return this.throwIfDisposed(),hy(this,e)},Pp().prototype.dot=function(e){return this.throwIfDisposed(),Ab(this,e)},Pp().prototype.elu=function(){return this.throwIfDisposed(),Fb(this)},Pp().prototype.equal=function(e){return this.throwIfDisposed(),Eb(this,e)},Pp().prototype.erf=function(){return this.throwIfDisposed(),Rb(this)},Pp().prototype.exp=function(){return this.throwIfDisposed(),Mb(this)},Pp().prototype.expandDims=function(e){return this.throwIfDisposed(),Db(this,e)},Pp().prototype.expm1=function(){return this.throwIfDisposed(),Ob(this)},Pp().prototype.fft=function(){return this.throwIfDisposed(),Dx(this)},Pp().prototype.flatten=function(){return this.throwIfDisposed(),Vy(this,[this.size])},Pp().prototype.floor=function(){return this.throwIfDisposed(),Bb(this)},Pp().prototype.floorDiv=function(e){return this.throwIfDisposed(),dy(this,e)},Pp().prototype.gather=function(e,t){return this.throwIfDisposed(),Wb(this,e,t)},Pp().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Vb(this,e)},Pp().prototype.greater=function(e){return this.throwIfDisposed(),Ub(this,e)},Pp().prototype.ifft=function(){return this.throwIfDisposed(),Ox(this)},Pp().prototype.irfft=function(){return this.throwIfDisposed(),Lx(this)},Pp().prototype.isFinite=function(){return this.throwIfDisposed(),Hb(this)},Pp().prototype.isInf=function(){return this.throwIfDisposed(),jb(this)},Pp().prototype.isNaN=function(){return this.throwIfDisposed(),qb(this)},Pp().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Kb(this,e)},Pp().prototype.lessEqual=function(e){return this.throwIfDisposed(),Yb(this,e)},Pp().prototype.less=function(e){return this.throwIfDisposed(),Xb(this,e)},Pp().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Jb(this,e,t,n,r)},Pp().prototype.logSigmoid=function(){return this.throwIfDisposed(),cw(this)},Pp().prototype.logSoftmax=function(e){return this.throwIfDisposed(),fw(this,e)},Pp().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Iw(this,e,t)},Pp().prototype.log=function(){return this.throwIfDisposed(),Qb(this)},Pp().prototype.log1p=function(){return this.throwIfDisposed(),ew(this)},Pp().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Sw(this,e)},Pp().prototype.logicalNot=function(){return this.throwIfDisposed(),Nw(this)},Pp().prototype.logicalOr=function(e){return this.throwIfDisposed(),Ew(this,e)},Pp().prototype.logicalXor=function(e){return this.throwIfDisposed(),_w(this,e)},Pp().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Bm(this,e,t,n)},Pp().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Tw(this,e,t,n,r)},Pp().prototype.max=function(e,t){return this.throwIfDisposed(),dw(this,e,t)},Pp().prototype.maximum=function(e){return this.throwIfDisposed(),$w(this,e)},Pp().prototype.mean=function(e,t){return this.throwIfDisposed(),Fw(this,e,t)},Pp().prototype.min=function(e,t){return this.throwIfDisposed(),Ow(this,e,t)},Pp().prototype.minimum=function(e){return this.throwIfDisposed(),Lw(this,e)},Pp().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Pw(this,e,t)},Pp().prototype.mod=function(e){return this.throwIfDisposed(),zw(this,e)},Pp().prototype.mul=function(e){return this.throwIfDisposed(),py(this,e)},Pp().prototype.neg=function(){return this.throwIfDisposed(),uw(this)},Pp().prototype.norm=function(e,t,n){return this.throwIfDisposed(),uv(this,e,t,n)},Pp().prototype.notEqual=function(e){return this.throwIfDisposed(),Gw(this,e)},Pp().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Wm(this,e,t,n)},Pp().prototype.onesLike=function(){return this.throwIfDisposed(),Hw(this)},Pp().prototype.pad=function(e,t){return this.throwIfDisposed(),qw(this,e,t)},Pp().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),Qw(this,e,t,n,r,a,s)},Pp().prototype.pow=function(e){return this.throwIfDisposed(),ex(this,e)},Pp().prototype.prelu=function(e){return this.throwIfDisposed(),tx(this,e)},Pp().prototype.prod=function(e,t){return this.throwIfDisposed(),nx(this,e,t)},Pp().prototype.reciprocal=function(){return this.throwIfDisposed(),px(this)},Pp().prototype.relu=function(){return this.throwIfDisposed(),fx(this)},Pp().prototype.relu6=function(){return this.throwIfDisposed(),mx(this)},Pp().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Vy(this,e.shape)},Pp().prototype.reshape=function(e){return this.throwIfDisposed(),Vy(this,e)},Pp().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Yv(this,e,t,n)},Pp().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Zv(this,e,t,n)},Pp().prototype.reverse=function(e){return this.throwIfDisposed(),gx(this,e)},Pp().prototype.rfft=function(){return this.throwIfDisposed(),zx(this)},Pp().prototype.round=function(){return this.throwIfDisposed(),vx(this)},Pp().prototype.rsqrt=function(){return this.throwIfDisposed(),kx(this)},Pp().prototype.selu=function(){return this.throwIfDisposed(),Sx(this)},Pp().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Nx(this,e,t,n,r,a,s)},Pp().prototype.sigmoid=function(){return this.throwIfDisposed(),qy(this)},Pp().prototype.sign=function(){return this.throwIfDisposed(),_x(this)},Pp().prototype.sin=function(){return this.throwIfDisposed(),Tx(this)},Pp().prototype.sinh=function(){return this.throwIfDisposed(),Cx(this)},Pp().prototype.slice=function(e,t){return this.throwIfDisposed(),Ky(this,e,t)},Pp().prototype.softmax=function(e){return this.throwIfDisposed(),Mx(this,e)},Pp().prototype.softplus=function(){return this.throwIfDisposed(),lw(this)},Pp().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Jw(this,e,t)},Pp().prototype.split=function(e,t){return this.throwIfDisposed(),Px(this,e,t)},Pp().prototype.sqrt=function(){return this.throwIfDisposed(),Bx(this)},Pp().prototype.square=function(){return this.throwIfDisposed(),Bw(this)},Pp().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Wx(this,e)},Pp().prototype.squeeze=function(e){return this.throwIfDisposed(),Ux(this,e)},Pp().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Lp?[this,e]:[this,...e];return Vx(n,t)},Pp().prototype.step=function(e){return this.throwIfDisposed(),Gx(this,e)},Pp().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Hx(this,e,t,n,r,a,s,i,o)},Pp().prototype.sub=function(e){return this.throwIfDisposed(),hw(this,e)},Pp().prototype.sum=function(e,t){return this.throwIfDisposed(),pw(this,e,t)},Pp().prototype.tan=function(){return this.throwIfDisposed(),jx(this)},Pp().prototype.tanh=function(){return this.throwIfDisposed(),Xy(this)},Pp().prototype.tile=function(e){return this.throwIfDisposed(),Lb(this,e)},Pp().prototype.toBool=function(){return this.throwIfDisposed(),xm(this,"bool")},Pp().prototype.toFloat=function(){return this.throwIfDisposed(),xm(this,"float32")},Pp().prototype.toInt=function(){return this.throwIfDisposed(),xm(this,"int32")},Pp().prototype.topk=function(e,t){return this.throwIfDisposed(),Jx(this,e,t)},Pp().prototype.transpose=function(e){return this.throwIfDisposed(),Um(this,e)},Pp().prototype.unique=function(e){return this.throwIfDisposed(),ev(this,e)},Pp().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),tv(this,e,t)},Pp().prototype.unstack=function(e){return this.throwIfDisposed(),nv(this,e)},Pp().prototype.where=function(e,t){return this.throwIfDisposed(),_b(e,this,t)},Pp().prototype.zerosLike=function(){return this.throwIfDisposed(),Tb(this)};var tN,nN={};function rN(){return null==tN&&(tN=uy().epsilon()),tN}su(nN,{maxNorm:()=>PN,minMaxNorm:()=>WN,nonNeg:()=>BN,unitNorm:()=>zN});var aN=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,aN.prototype)}},sN=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sN.prototype)}},iN=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,iN.prototype)}},oN=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,oN.prototype)}},uN=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,uN.prototype)}};function lN(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function cN(e,t){if(!e)throw new uN(t)}function dN(e,t){let n=0;for(const r of e)r===t&&n++;return n}function hN(e){return 1===e.length?e[0]:e}function pN(e){return Array.isArray(e)?e:[e]}function fN(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function mN(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var gN={};function yN(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function bN(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>bN(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?bN(t):e[n]=t.value)}}}function wN(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in gN)s=gN[a];else if(s=t[a],null==s)throw new iN(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new iN(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in gN?[o,u]=gN.className:i in t&&([o,u]=t[i]),null==o)throw new iN(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(gN))e[t]=gN[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},gN);for(const e of Object.keys(n))gN[e]=n[e];bN(s.config);const r=u(o,s.config,n,a);return gN=Object.assign({},t),r}{const e=Object.assign({},gN);for(const e of Object.keys(n))gN[e]=n[e];const t=new o(s.config);return gN=Object.assign({},e),t}}}function xN(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function vN(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function kN(e){if(null==e)throw new iN(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function IN(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new iN(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function SN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return cN(n>=0),cN(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function NN(e,t){Array.isArray(e)?(ap.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>NN(e,`element ${n+1} of ${t}`)))):ap.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${EN(e)}.`))}function EN(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>EN(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function _N(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function TN(e,t){return Zg((()=>Bx(pw(py(e,e),t,!0))))}var CN=class extends Eg.Serializable{getConfig(){return{}}},AN=class extends CN{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Zg((()=>{const t=TN(e,this.axis),n=ib(t,0,this.maxValue);return py(e,hy(n,cy(rN(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};AN.className="MaxNorm",Eg.registerClass(AN);var $N=class extends CN{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Zg((()=>hy(e,cy(rN(),TN(e,this.axis)))))}getConfig(){return{axis:this.axis}}};$N.className="UnitNorm",Eg.registerClass($N);var FN=class extends CN{apply(e){return fx(e)}};FN.className="NonNeg",Eg.registerClass(FN);var RN=class extends CN{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Zg((()=>{const t=TN(e,this.axis),n=cy(py(this.rate,ib(t,this.minValue,this.maxValue)),py(1-this.rate,t));return py(e,hy(n,cy(rN(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};RN.className="MinMaxNorm",Eg.registerClass(RN);var MN={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function DN(e){return yN(e)}function ON(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return wN(e,Eg.SerializationMap.getMap().classNameMap,t,"constraint")}function LN(e){return null==e?null:"string"==typeof e?ON({className:e in MN?MN[e]:e,config:{}}):e instanceof CN?e:ON(e)}function PN(e){return new AN(e)}function zN(e){return new $N(e)}function BN(){return new FN}function WN(e){return new RN(e)}var UN={};su(UN,{constant:()=>XE,glorotNormal:()=>n_,glorotUniform:()=>t_,heNormal:()=>r_,heUniform:()=>a_,identity:()=>QE,leCunNormal:()=>s_,leCunUniform:()=>i_,ones:()=>KE,orthogonal:()=>o_,randomNormal:()=>ZE,randomUniform:()=>YE,truncatedNormal:()=>JE,varianceScaling:()=>e_,zeros:()=>qE});var VN=["channelsFirst","channelsLast"],GN=["nearest","bilinear"],HN=["valid","same","causal"],jN=["max","avg"],qN=["sum","mul","concat","ave"],KN=new Map;function XN(e){IN(VN,"DataFormat",e)}function YN(e){IN(HN,"PaddingMode",e)}function ZN(e){IN(jN,"PoolMode",e)}var JN=[];function QN(e,t){JN.push(e);try{const e=t();return JN.pop(),e}catch(e){throw JN.pop(),e}}function eE(e){if(!rE(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===JN.length?"":JN.join("/")+"/")+e}function tE(e){if(!rE(e))throw new Error("Not a valid tensor name: '"+e+"'");KN.has(e)||KN.set(e,0);const t=KN.get(e);if(KN.set(e,KN.get(e)+1),t>0){const n=`${e}_${t}`;return KN.set(n,1),n}return e}var nE=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function rE(e){return!!e.match(nE)}function aE(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function sE(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function iE(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function oE(e,t){if(t<e)throw new iN(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function uE(e,t){return xm(e,t)}function lE(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Vy(e,n)}function cE(e){const t=[aE(e.shape)];return Vy(e,t)}function dE(e,t,n){return Zg((()=>{switch(e.rank){case 1:return Ax(e,t,n);case 2:return $x(e,[t,0],[n,e.shape[1]]);case 3:return Fx(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Rx(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ky(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ky(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new iN(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function hE(e,t,n){return Zg((()=>{switch(e.rank){case 1:return Ax(e,t,n);case 2:return $x(e,[0,t],[e.shape[0],n]);case 3:return Fx(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Rx(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new iN(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function pE(e,t,n,r){return Zg((()=>{switch(e.rank){case 1:return Ax(e,t,n);case 2:switch(r){case 1:return dE(e,t,n);case 2:return hE(e,t,n);default:throw new iN(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return dE(e,t,n);case 2:return Fx(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return hE(e,t,n);default:throw new iN(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return dE(e,t,n);case 2:return Rx(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Rx(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return hE(e,t,n);default:throw new iN(`The axis is not within the rank of the tensor ${r}`)}default:throw new iN(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function fE(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),jy(e,n)}function mE(e,t){switch(e.rank){case 1:return ob([e,t]);case 2:return ub([e,t],0);case 3:return lb([e,t],0);case 4:return cb([e,t],0);default:throw new iN(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function gE(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new iN(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Lb(e,t)}function yE(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;return lx(e,t,n,r,a)}function bE(e,t,n,r){if(e.rank<2||t.rank<2)throw new oN(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new oN(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank){const a=!1,s=!1;return bv.matMul({a:e,b:t,transposeA:a,transposeB:s,bias:r?vE(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),s=a.pop();e=Vy(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Vy(Um(t,c),[u,-1]);const d=[...a,...l],h=!1,p=!1;return Vy(bv.matMul({a:e,b:t,transposeA:h,transposeB:p,bias:r?vE(e.rank,r,"channelsLast"):null,activation:n}),d)}}function wE(e,t,n){return Zg((()=>(t=Array.isArray(t)?qx(t,"int32"):xm(t,"int32"),Wb(e,t,n))))}function xE(e){return py(e,e)}function vE(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new iN(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Vy(t,[1,r[0],1,1,1]):Vy(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Vy(t,[1,1,1,1,r[0]]):Vy(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Vy(t,[1,r[0],1,1]):Vy(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Vy(t,[1,1,1,r[0]]):Vy(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Vy(t,[1,r[0],1]):Vy(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Vy(t,[1,1,r[0]]):Vy(t,[1].concat(r))}else if(e<3)return t;throw new iN(`Unsupported input rank by biasAdd: ${t.rank}`)}function kE(e,t,n){return Zg((()=>(null==n&&(n="channelsLast"),XN(n),cy(e,vE(e.rank,t,n)))))}function IE(e,t,n,r){return Zg((()=>fv(e,t,n,r)))}function SE(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return n?e():t()}var NE=["fanIn","fanOut","fanAvg"],EE=["normal","uniform","truncatedNormal"],_E=class extends Eg.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},TE=class extends _E{apply(e,t){return Rw(e,t)}};TE.className="Zeros",Eg.registerClass(TE);var CE=class extends _E{apply(e,t){return Mw(e,t)}};CE.className="Ones",Eg.registerClass(CE);var AE=class extends _E{constructor(e){if(super(),"object"!=typeof e)throw new iN(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new iN(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Zg((()=>py(Ix(this.value),Mw(e,t))))}getConfig(){return{value:this.value}}};AE.className="Constant",Eg.registerClass(AE);var $E=class extends _E{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return cx(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};$E.className="RandomUniform",Eg.registerClass($E);var FE=class extends _E{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new oN(`randomNormal does not support dType ${t}.`);return yE(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};FE.className="RandomNormal",Eg.registerClass(FE);var RE=class extends _E{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new oN(`truncatedNormal does not support dType ${t}.`);return Qx(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};RE.className="TruncatedNormal",Eg.registerClass(RE);var ME=class extends _E{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Zg((()=>{if(2!==e.length||e[0]!==e[1])throw new iN("Identity matrix initializer can only be used for 2D square matrices.");return py(this.gain,Pb(e[0]))}))}getConfig(){return{gain:this.gain}}};ME.className="Identity",Eg.registerClass(ME);var DE=class extends _E{constructor(e){if(super(),e.scale<0)throw new iN(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,IN(NE,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){IN(EE,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(XN(r),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===r){const r=aE(e,2);t=e[1]*r,n=e[0]*r}else if("channelsLast"===r){const r=aE(e,0,e.length-2);t=e[e.length-2]*r,n=e[e.length-1]*r}}else{const r=aE(e);t=Math.sqrt(r),n=Math.sqrt(r)}return[t,n]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new oN(`${this.getClassName()} does not support dType ${t}.`);return Qx(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return cx(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};DE.className="VarianceScaling",Eg.registerClass(DE);var OE=class extends DE{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return DE.className}};OE.className="GlorotUniform",Eg.registerClass(OE);var LE=class extends DE{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return DE.className}};LE.className="GlorotNormal",Eg.registerClass(LE);var PE=class extends DE{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return DE.className}};PE.className="HeNormal",Eg.registerClass(PE);var zE=class extends DE{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return DE.className}};zE.className="HeUniform",Eg.registerClass(zE);var BE=class extends DE{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return DE.className}};BE.className="LeCunNormal",Eg.registerClass(BE);var WE=class extends DE{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return DE.className}};WE.className="LeCunNormal",Eg.registerClass(WE);var UE=class extends _E{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new oN("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Zg((()=>{if(e.length<2)throw new oN("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=yE(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Tk.gramSchmidt(t);return e[0]>e[1]&&(n=Um(n)),py(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};UE.className="Orthogonal",Eg.registerClass(UE);var VE={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function GE(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return wN(e,Eg.SerializationMap.getMap().classNameMap,t,"initializer")}function HE(e){return yN(e)}function jE(e){if("string"==typeof e){const t=e in VE?VE[e]:e;if("GlorotNormal"===t)return new LE;if("GlorotUniform"===t)return new OE;if("HeNormal"===t)return new PE;if("HeUniform"===t)return new zE;if("LeCunNormal"===t)return new BE;if("LeCunUniform"===t)return new WE;{const e={};return e.className=t,e.config={},GE(e)}}return e instanceof _E?e:GE(e)}function qE(){return new TE}function KE(){return new CE}function XE(e){return new AE(e)}function YE(e){return new $E(e)}function ZE(e){return new FE(e)}function JE(e){return new RE(e)}function QE(e){return new ME(e)}function e_(e){return new DE(e)}function t_(e){return new OE(e)}function n_(e){return new LE(e)}function r_(e){return new PE(e)}function a_(e){return new zE(e)}function s_(e){return new BE(e)}function i_(e){return new WE(e)}function o_(e){return new UE(e)}var u_={};su(u_,{Layer:()=>__,RNN:()=>eA,RNNCell:()=>tA,activation:()=>I$,add:()=>F$,alphaDropout:()=>kF,average:()=>R$,averagePooling1d:()=>U$,averagePooling2d:()=>H$,averagePooling3d:()=>K$,avgPool1d:()=>V$,avgPool2d:()=>j$,avgPool3d:()=>X$,avgPooling1d:()=>G$,avgPooling2d:()=>q$,avgPooling3d:()=>Y$,batchNormalization:()=>z$,bidirectional:()=>fF,concatenate:()=>M$,conv1d:()=>f$,conv2d:()=>m$,conv2dTranspose:()=>g$,conv3d:()=>y$,conv3dTranspose:()=>b$,convLstm2d:()=>cF,convLstm2dCell:()=>dF,cropping2D:()=>x$,dense:()=>S$,depthwiseConv2d:()=>k$,dot:()=>P$,dropout:()=>N$,elu:()=>u$,embedding:()=>$$,flatten:()=>_$,gaussianDropout:()=>vF,gaussianNoise:()=>xF,globalAveragePooling1d:()=>Z$,globalAveragePooling2d:()=>J$,globalMaxPool1d:()=>gF,globalMaxPool2d:()=>yF,globalMaxPooling1d:()=>Q$,globalMaxPooling2d:()=>eF,gru:()=>aF,gruCell:()=>sF,input:()=>tC,inputLayer:()=>o$,layerNormalization:()=>B$,leakyReLU:()=>c$,lstm:()=>iF,lstmCell:()=>oF,masking:()=>IF,maxPool1d:()=>bF,maxPool2d:()=>wF,maxPooling1d:()=>tF,maxPooling2d:()=>nF,maxPooling3d:()=>rF,maximum:()=>D$,minimum:()=>O$,multiply:()=>L$,permute:()=>A$,prelu:()=>d$,reLU:()=>l$,repeatVector:()=>T$,reshape:()=>C$,rnn:()=>hF,separableConv2d:()=>w$,simpleRNN:()=>uF,simpleRNNCell:()=>lF,softmax:()=>h$,spatialDropout1d:()=>E$,stackedRNNCells:()=>pF,thresholdedReLU:()=>p$,timeDistributed:()=>mF,upSampling2d:()=>v$,zeroPadding2d:()=>W$});var l_=0;function c_(){return l_++}var d_={};function h_(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in d_||(d_[e]=0),d_[e]+=1,e+d_[e].toString()}function p_(e){return Array.isArray(e)&&Array.isArray(e[0])}function f_(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function m_(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new iN(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function g_(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new iN(`Expected exactly 1 Shape; got ${e.length}`)}return e}function y_(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var b_="Variable",w_=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:b_,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=c_(),n=null==n?b_:n,this.originalName=eE(n),this.name=tE(this.originalName),this.trainable_=r,this.constraint=a,this.val=rv(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function x_(e){return e.map((e=>e.read()))}function v_(e){e.forEach((e=>{e[0].write(e[1])}))}var k_=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},I_=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=c_(),null!=s&&(this.originalName=eE(s),this.name=tE(this.originalName)),this.rank=t.length}},S_=0,N_=class{constructor(e,t){this.callArgs=t,this.id=S_++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},E_=0,__=class extends Eg.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=E_++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=fN(e)+"_"+h_(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new sN(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new iN(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return hN(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return hN(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new aN(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new aN(`Layer ${this.name} is not connected, no input to return.`);return hN(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new aN(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new aN(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return hN(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=pN(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=pN(this.inputSpec);if(e.length!==t.length)throw new iN(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new iN(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new iN(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new iN(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new iN(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new iN(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new iN(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=pN(e);let r=!0;for(const e of n)if(!(e instanceof I_)){r=!1;break}let a=!0;for(const e of n)if(e instanceof I_){a=!1;break}if(r===a)throw new iN("Arguments to apply() must be all SymbolicTensors or all Tensors");return QN(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of pN(e))t.push(n.shape);this.build(hN(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=pN(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=hN(s),null!=this.activityRegularizer)throw new oN("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=pN(e);const t=[];for(const n of e)t.push(n.shape);return hN(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new I_(s,n,this,pN(e),t,this.name,r))):new I_(s,r,this,pN(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new oN("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new aN(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new aN(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new sN(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return y_(this.weights)}build(e){this.built=!0}getWeights(){return x_(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){Zg((()=>{const t=this.weights;if(t.length!==e.length)throw new iN(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=x_(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!ap.arraysEqual(s.shape,o.shape))throw new iN(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}v_(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new iN(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():jE("zeros"));const u=r.apply(t,n),l=new w_(u,n,e,s,i);return u.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=pN(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const o=pN(e);t=pN(t),n=pN(n),r=pN(r),a=f_(a),s=f_(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new N_({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function T_(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=T_(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var C_,A_,$_=class extends __{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:h_("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new iN("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new iN("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new iN("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new I_(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new N_({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new iN(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function F_(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new iN("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new $_({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function R_(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Jg(r)}}function M_(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}$_.className="InputLayer",Eg.registerClass($_),(A_=C_||(C_={}))[A_.SILENT=0]="SILENT",A_[A_.VERBOSE=1]="VERBOSE";var D_=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},O_=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}},L_=class extends D_{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=Zg((()=>cy(this.totals[e],py(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Zg((()=>{const n=py(hy(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Qg(t[e])})))}},P_=class extends D_{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},z_=class extends D_{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Vk,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ap.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():ap.now();return function(){const s=null!=n?n():ap.now();return s-a<t||(a=s,r=e(...arguments)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await R_(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await R_(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await R_(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await R_(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await R_(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):ap.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await R_(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await R_(e),await this.trainEnd(e))}};function B_(e,t){return null==e&&(e={}),e instanceof D_?[e]:Array.isArray(e)&&e[0]instanceof D_?e:pN(e).map((e=>new z_(e,t)))}var W_=class{constructor(){}static registerCallbackConstructor(e,t){ap.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),W_.checkForDuplicate(t),null==W_.constructors[e]&&(W_.constructors[e]=[]),W_.constructors[e].push(t)}static checkForDuplicate(e){for(const t in W_.constructors)W_.constructors[+t].forEach((t=>{if(t===e)throw new iN("Duplicate callback constructor.")}))}static clear(){W_.constructors={}}static createCallbacks(e){const t=[];for(const n in W_.constructors){const r=+n;e>=r&&t.push(...W_.constructors[r])}return t.map((e=>new e))}};function U_(e,t,n,r,a,s,i,o,u){const l=new P_,c=[new L_,...W_.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const d=new O_(c);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:l}}function V_(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return wN(e,Eg.SerializationMap.getMap().classNameMap,t,"layer",n)}function G_(e,t){return Zg((()=>{"float32"!==e.dtype&&(e=xm(e,"float32"));const n=pw(xE(e),t,!0),r=zb(n.shape,rN()),a=Bx($w(n,r));return hy(e,a)}))}function H_(e,t){return Zg((()=>Fw(xE(hw(t,e)),-1)))}function j_(e,t){return Zg((()=>Fw(fy(hw(t,e)),-1)))}function q_(e,t){return Zg((()=>{const n=hw(e,t),r=ib(fy(e),rN(),Number.MAX_VALUE),a=fy(hy(n,r));return py(100,Fw(a,-1))}))}function K_(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Zg((()=>{if(n)t=Mx(t);else{const e=pw(t,t.shape.length-1,!0);t=hy(t,e)}return t=ib(t,rN(),1-rN()),uw(pw(py(xm(e,"float32"),Qb(t)),t.shape.length-1))}))}function X_(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Zg((()=>{const r=xm(Bb(cE(e)),"int32"),a=(t=ib(t,rN(),1-rN())).shape;return K_(Vy(Wm(r,a[a.length-1]),a),t,n)}))}function Y_(e,t){return Zg((()=>{let n;return n=ib(t,rN(),1-rN()),n=Qb(hy(n,hw(1,n))),Fw(function(e,t){if(!ap.arraysEqual(e.shape,t.shape))throw new iN(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Zg((()=>{const n=fx(t),r=uw(fy(t));return cy(hw(n,py(t,e)),ew(Mb(r)))}))}(e,n),-1)}))}function Z_(e,t){return Zg((()=>{const n=G_(e,-1),r=G_(t,-1),a=py(n,r);return uw(pw(a,-1))}))}W_.constructors={};var J_={meanSquaredError:H_,meanAbsoluteError:j_,meanAbsolutePercentageError:q_,meanSquaredLogarithmicError:function(e,t){return Zg((()=>{const n=ib(t,rN(),Number.MAX_VALUE),r=Qb(cy(1,n)),a=ib(e,rN(),Number.MAX_VALUE),s=Qb(cy(1,a));return Fw(xE(hw(r,s)),-1)}))},squaredHinge:function(e,t){return Zg((()=>{const n=$w(0,hw(1,py(e,t)));return Fw(xE(n),-1)}))},hinge:function(e,t){return Zg((()=>{const n=$w(0,hw(1,py(e,t)));return Fw(n,-1)}))},categoricalHinge:function(e,t){return Zg((()=>{const n=pw(py(e,t),-1),r=dw(py(hw(1,e),t),-1);return $w(0,cy(1,hw(r,n)))}))},logcosh:function(e,t){return Zg((()=>{const n=Math.log(2),r=hw(t,e),a=hw(cy(r,lw(py(-2,r))),n);return Fw(a,-1)}))},categoricalCrossentropy:K_,sparseCategoricalCrossentropy:X_,binaryCrossentropy:Y_,kullbackLeiblerDivergence:function(e,t){return Zg((()=>{const n=ib(e,rN(),1),r=ib(t,rN(),1);return pw(py(e,Qb(hy(n,r))),-1)}))},poisson:function(e,t){return Zg((()=>{const n=Qb(cy(rN(),t));return Fw(hw(t,py(e,n)),-1)}))},cosineProximity:Z_};function Q_(e){if("string"==typeof e){if(e in J_)return J_[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new iN(t)}return e}function eT(e,t){return Zg((()=>{const n=py(.5,Hw(t)),r=uE(Ub(t,n),e.dtype);return Fw(Eb(e,r),-1)}))}function tT(e,t){return Zg((()=>uE(Eb(xy(e,-1),xy(t,-1)),"float32")))}function nT(e,t){return Zg((()=>xm(pw(Sw(Eb(e,1),Eb(t,1))),"float32")))}function rT(e,t){return Zg((()=>{const n=nT(e,t),r=function(e,t){return Zg((()=>xm(pw(Sw(Eb(e,0),Eb(t,1))),"float32")))}(e,t),a=cy(n,r);return xm(_b(Ub(a,0),hy(n,a),0),"float32")}))}function aT(e,t){return Y_(e,t)}function sT(e,t){return e.rank===t.rank&&(e=Ux(e,[e.rank-1])),(t=xy(t,-1)).dtype!==e.dtype&&(t=xm(t,e.dtype)),xm(Eb(e,t),"float32")}var iT=K_,oT=X_,uT={binaryAccuracy:eT,categoricalAccuracy:tT,precision:rT,categoricalCrossentropy:iT,sparseCategoricalCrossentropy:oT,mse:H_,MSE:H_,mae:j_,MAE:j_,mape:q_,MAPE:q_,cosine:Z_};function lT(e){if("string"==typeof e&&e in uT)return uT[e];if("string"!=typeof e&&null!=e)return e;throw new iN(`Unknown metric ${e}`)}function cT(e){if(cN(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(J_))if(J_[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(uT))if(uT[n]===e){t=n;break}return void 0!==t?t:e.name}}var dT=1048576;function hT(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!pT(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>dT&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function pT(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!pT(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!pT(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function fT(e){let t;return t=null!=e.collectedTrainableWeights?y_(e.collectedTrainableWeights):y_(e.trainableWeights),t}function mT(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}function gT(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function yT(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}gT([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function bT(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];gT([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<s.length;++e)gT(["","","",s[e]],t,r)}function wT(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function xT(e,t){if(null===e)return null;if("string"==typeof e)return mN(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];wT(t,a,r)?n.push(r):n.push(xT(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=mN(n);t[e]=xT(r,e)}}return t}}function vT(e,t){if(null==e)return null;if("string"==typeof e)return fN(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];wT(t,a,r)?n.push(r):n.push(vT(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[fN(n)]="name"!==n&&"className"!==n||"string"!=typeof r?vT(r,n):r}return t}}var kT="3.13.0",IT=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof IT)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new iN(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return xm(t,e.dtype)}catch(n){throw new iN(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof I_){if(null==this.id2Value[e.id])throw new iN(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new iN(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof I_){if(null==this.id2Value[e.id])throw new iN(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new iN(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Jg(this.id2Mask)}},ST={},NT={};function ET(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let d,h;if(null==ST[c]){const e=function(e,t){ap.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=TT(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=TT(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:_T(r)}}(i,t);d=e.sorted,h=e.recipientCounts,ST[c]=d,NT[c]=h}d=ST[c],h={},a||Object.assign(h,NT[c]);const p=new IT(t);for(let e=0;e<d.length;++e){if(null!=r){const e=Xg().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=d[e],i=s.sourceLayer;if(i instanceof $_)continue;const l=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=p.getValue(e),r=p.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=pN(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=CT(s),w=Array.isArray(b)?b:[b];for(let e=0;e<w.length;++e){p.hasKey(w[e])||p.add(w[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(w[e].name);-1!==t&&(u[t]=g[e])}a||Jg(f)}return p.disposeMasks(),s?u:u[0]}function _T(e){const t={};for(const n in e)t[n]=e[n].size;return t}function TT(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function CT(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var AT=class extends __{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=h_(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],vN(this.inputs).length!==this.inputs.length)throw new iN(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);vN(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;cN(0===n,"input layer has >1 nodes"),cN(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof $_))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new sN(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(AT.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const d={};for(const e in t){const r=t[e];r in d||(d[r]=[]),d[r].push(n[e])}const h={};for(const e in r){const t=r[e];t in h||(h[t]=[]),h[t].push(a[e])}let p=Object.keys(h).map((e=>parseInt(e,10))).sort(xN);this.layers=[];for(const e of p){const t=h[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof AT&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,p=Object.keys(d).map((e=>parseInt(e,10))).sort(xN);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of d[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new sN(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new sN(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new N_({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new iN("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new iN(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new iN(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new iN(`${e.length} of ${r} weights are not set: ${e}`)}v_(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${kT}`,t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=vT(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Zg((()=>{e=pN(e);const n=new IT;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return ET(this.outputs,n,t)}))}computeMask(e,t){return Zg((()=>{let n;return e=pN(e),n=null==t?lN(null,e.length):pN(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=f_(e);if(t.length!==this.inputLayers.length)throw new iN(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(xN);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=f_(t.computeOutputShape(hN(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];cN(t in n),a.push(n[t])}return hN(a)}runInternalGraph(e,t){null==t&&(t=lN(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(xN);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=pN(t.call(e,l)),u=pN(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=pN(t.call(r,l)),u=pN(t.computeMask(r,i));if(t.activityRegularizer)throw new oN("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){cN(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof AT?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=AT.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new iN(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new iN("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new iN(`No such layer: ${e}`)}calculateLosses(){return Zg((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=AT.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=AT.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[AT.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=AT.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=AT.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={},a={};function s(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function i(e,t){const n=[];let a;for(const i of t){const o=i[0],u=i[1],l=i[2];if(a=null==i[3]?{}:i[3],!(o in r))return void s(e,t);const c=r[o];if(c.inboundNodes.length<=u)return void s(e,t);const d=c.inboundNodes[u];n.push(d.outputTensors[l])}n.length>0&&e.apply(hN(n),a)}function o(e){const a=e.name,i=V_(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(n),r[a]=i,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new iN(`Corrupted configuration, expected array for nodeData: ${e}`);s(i,e)}))}const u=t.name,l=t.layers;for(const e of l)o(e);for(;!kN(a);)for(const e of l){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)i(t,n)}}const c=[],d=[],h=t.inputLayers;for(const e of h){const t=e[0],n=e[1],a=e[2];cN(t in r);const s=r[t].inboundNodes[n].outputTensors;c.push(s[a])}const p=t.outputLayers;for(const e of p){const t=e[0],n=e[1],a=e[2];cN(t in r);const s=r[t].inboundNodes[n].outputTensors;d.push(s[a])}return new e({inputs:c,outputs:d,name:u})}get stateful(){if(this._stateful)throw new iN("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Zg((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function $T(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided classWeight is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so classWeight must be either an array with ${r} elements or an object with ${t} keys. Provided classWeight not understood: ${JSON.stringify(e)}`)}(e,t)}async function FT(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Zg((()=>{if(1===e.shape.length)return vm(e);if(2===e.shape.length){if(e.shape[1]>1)return xy(e,1);if(1===e.shape[1])return Vy(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Jg(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),qx(a,"float32")}return null}function RT(e,t){return py(e,t)}function MT(e,t){let n,r;const a=t;n=a.xs,r=a.ys,ap.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=DT("input",e.inputNames,n),i=DT("output",e.outputNames,r),o=s[0].shape[0];ap.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),ap.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)ap.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)ap.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function DT(e,t,n){if(n instanceof Lp)return[n];if(Array.isArray(n))return ap.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new iN(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function OT(e){return"function"==typeof e.iterator}function LT(e){ap.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function PT(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>dE(e,t,n-t))):dE(e,t,n-t)}function zT(e,t){return Zg((()=>null==e?null:Array.isArray(e)?e.map((e=>zT(e,t))):wE(e,"int32"===t.dtype?t:xm(t,"int32"))))}function BT(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function WT(e,t,n,r,a,s,i,o,u,l,c,d,h,p,f){null==a&&(a=32),null==s&&(s=1),null==c&&(c=!0),null==h&&(h=0);let m=!1;if(null!=u&&null!=l&&(m=!0),null!=f&&(m=!0,null==p))throw new iN("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=e.checkNumSamples(n,a,p,"steps_per_epoch");let y;null!=g&&(y=oE(0,g)),null==i&&(i=1);const{callbackList:b,history:w}=U_(o,i,s,h,g,p,a,m,d);b.setModel(e),e.history=w,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=h;i<s;++i){await b.onEpochBegin(i);const s={};if(null!=p)throw new oN("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new oN("batch shuffling is not implemneted yet");c&&ap.shuffle(y);const i=qx(y),o=BT(g,a);for(let c=0;c<o.length;++c){const d={};if(await b.onBatchBegin(c,d),Zg((()=>{const h=o[c][0],p=o[c][1],f=dE(i,h,p-h);d.batch=c,d.size=p-h;const g=zT(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];d[t]=n,Qg(n)}if(c===o.length-1&&m){const t=e.testLoop(u,l,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];Qg(a),s["val_"+n]=a}}})),await b.onBatchEnd(c,d),M_(d),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}function UT(e){const t=[];e instanceof Lp&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(lE(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function VT(e,t){if(null==e)return;const n=[];if(t instanceof Lp)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Lp)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function GT(e){return Array.isArray(e)}function HT(e){return!function(e){return e instanceof Lp}(e)&&!GT(e)}function jT(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(GT(e)&&e.length>0)t=!0;else if(HT(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new iN(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));if(HT(e)){e=e,r=[];for(const n of t){if(null==e[n])throw new iN(`No data provided for "${n}". Need data for each key in: ${t}`);r.push(e[n])}}else if(GT(e)){if((e=e).length!==t.length)throw new iN(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);r=e}else{if(e=e,t.length>1)throw new iN(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);r=[e]}if(r=UT(r),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=r[e];if(i.shape.length!==n[e].length)throw new iN(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!a)continue;const r=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&r!==o)throw new iN(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return r}function qT(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new iN(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);r=e}else{if(t.length>1)throw new iN(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);r=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=r[e];if(i.shape.length!==n[e].length)throw new iN(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let r=0;r<n[e].length;++r){if(0===r&&!a)continue;const o=i.shape[r],u=n[e][r];if(null!=u&&u!==o)throw new iN(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var KT=class extends AT{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new iN("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const a=mT(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),gT(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?yT(o[e],n,r):bT(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=fT(e),l=y_(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Wk.adagrad(.01),Adadelta:()=>Wk.adadelta(1,.95,rN()),Adam:()=>Wk.adam(.001,.9,.999,rN()),Adamax:()=>Wk.adamax(.002,.9,.999,rN(),0),RMSProp:()=>Wk.rmsprop(.001,.9,0,rN()),SGD:()=>Wk.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new iN(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Fk))throw new iN("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new iN(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Q_(e)))}else{const n=Q_(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new iN(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Q_(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],QN("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};QN("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===Y_?-1!==["accuracy","acc"].indexOf(i)?r=eT:-1!==["crossentropy","ce"].indexOf(i)&&(r=aT):this.lossFunctions[e]===X_?-1!==["accuracy","acc"].indexOf(i)?r=sT:-1!==["crossentropy","ce"].indexOf(i)&&(r=oT):-1!==["accuracy","acc"].indexOf(i)?r=tT:-1!==["crossentropy","ce"].indexOf(i)&&(r=iT),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=lT(i);s=e,n=""+cT(i)}let t;QN(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=null==n.batchSize?32:n.batchSize;LT(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return hN(this.testLoop(i,s,r,n.verbose,n.steps))}finally{VT(a[0],e),VT(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new oN("Verbose mode is not implemented yet.");ap.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=Zg((()=>{if(t.value){const{xs:n,ys:r}=MT(e,t.value),i=n.concat(r),l=Zg((()=>a(i)));if(Jg(i),0===u)for(let e=0;e<l.length;++e)s.push(Ix(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=Zg((()=>cy(s[e],py(c,t)))),u>0&&Jg(n)}Jg(l),o+=c,++u}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=hy(s[e],o),Jg(t)}return hN(s)}(this,e,t)}checkNumSamples(e,t,n){let r,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(r=null,null!=t)throw new iN(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new iN(`Either the input data should have a defined shape, or ${a} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new iN("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new IT;if(e instanceof Lp&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new iN(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new iN(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=ET(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=lN(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new iN(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Zg((()=>{const r=this.checkNumSamples(e);if(n)throw new oN("Verbose predictLoop() is not implemented yet.");const a=BT(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)Zg((()=>{const n=a[t][0],r=a[t][1],s=PT(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new IT(i);return ET(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return hN(s.map((e=>jy(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=UT(e);qT(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return LT(r),this.predictLoop(n,r)}finally{VT(n,e)}}predictOnBatch(e){qT(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new sN("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===X_?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){const r=vN(e.map((e=>e.shape[0])));r.sort();const a=vN(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new iN(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new iN(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!ap.arraysEqual(r,a))throw new iN(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=jT(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=jT(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const r=[H_,Y_,K_];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===K_&&1===s.shape[s.shape.length-1])throw new iN(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new iN(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!=0)throw new iN(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=$T(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await FT(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4?arguments[4]:void 0;return Zg((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new oN("Verbose mode is not implemented yet.");if(null!=a)throw new oN("steps mode in testLoop() is not implemented yet");{const r=BT(s,n),a=qx(oE(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=dE(a,s,o-s),l=zT(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(Ix(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=cy(i[e],py(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=hy(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;dN(e,r)>1&&(a+=`_${dN(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new IT(e),o=ET(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=RT(n,a[e]));const s=Fw(n);t.push(s),u=0===e?n:cy(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Fw(t(r[a],o[a]))}Qg(n),s.push(n)}return u=Fw(u),this.calculateLosses().forEach((e=>{u=cy(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>Zg((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new IT(s),o=ET(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=Fw(r(a[e],o[e]));n=0===e?s:cy(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Fw(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t){return async function(e,t,n){let r,a,s,i,o,u,l,c,d,h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const p=null==h.batchSize?32:h.batchSize;LT(p);const f=!1,m=await e.standardizeUserData(t,n,h.sampleWeight,h.classWeight,f,p);r=m[0],a=m[1],d=m[2];let g,y=!1;if(null!=h.validationData&&h.validationData.length>0){if(y=!0,2!==h.validationData.length)throw 3===h.validationData.length?new oN("validationData including sample weights is not supported yet."):new iN(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${h.validationData} is invalid.`);o=h.validationData[0],u=h.validationData[1];const t=!0,n=await e.standardizeUserData(o,u,null,null,t,p);l=n[0],c=n[1],g=l.concat(c)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){y=!0;const e=Math.floor(r[0].shape[0]*(1-h.validationSplit)),t=r[0].shape[0];l=PT(r,e,t),s=r,r=PT(r,0,e),c=PT(a,e,t),i=a,a=PT(a,0,e),g=l.concat(c)}else null!=h.validationSteps&&(y=!0);const b=r.concat(a).concat(d);e.checkTrainableWeightsConsistency();const w=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let v,k;y?(e.makeTestFunction(),v=e.testFunction,k=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,g=[],k=x.slice());const I=B_(h.callbacks,h.yieldEvery);return await WT(e,w,b,x,p,h.epochs,h.verbose,I,v,g,h.shuffle,k,h.initialEpoch,null,null)}finally{e.isTraining=!1,VT(r,t),VT(a,n),VT(s,t),VT(i,n),VT(l,o),VT(c,u),null!=d&&Jg(d)}}(this,e,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(ap.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ap.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ap.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ap.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ap.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(OT(n.validationData))ap.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new oN("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=B_(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:h,history:p}=U_(c,d,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,l);h.setModel(e),e.history=p,await h.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await h.onEpochBegin(f);let c=0,d=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){const{xs:r,ys:a}=MT(e,t.value),s={};s.batch=d,s.size=r[0].shape[0],await h.onBatchBegin(d,s);const i=[];if(null!=n.classWeight){const t=$T(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await FT(a[e],null,t[e]))}const l=r.concat(a).concat(i),p=o(l);Jg(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];s[t]=n,Qg(n)}await h.onBatchEnd(d,s),M_(s),d++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=OT(n.validationData)?pN(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):pN(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,l),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return Jg(s),VT(n[0],e),VT(n[1],t),hN(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Xg().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Xg().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=fN(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>fN(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=fN(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[fN(cT(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>fN(cT(e))));{const e={};for(const t in this.metrics)e[t]=fN(cT(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=V_(xT(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=mN(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>mN(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=mN(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>mN(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=mN(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=Im.getSaveHandlers(e);if(0===t.length)throw new iN(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new iN(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new iN("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Im.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${kT}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await Im.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Im.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;hT(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){hT(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};KT.className="Model",Eg.registerClass(KT);var XT=class extends KT{};async function YT(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=V_(xT(n),t);if(null!=e.weightsManifest){const t=await Im.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),Jg(t)}return r}XT.className="Functional",Eg.registerClass(XT);var ZT=class extends KT{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:h_("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new iN(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof ZT||e instanceof KT;let n;if(t){if(n=e,1!==n.outputs.length)throw new iN("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new iN("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new iN("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=F_({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new iN(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new iN("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=T_(this.outputs[0])}this.inboundNodes=[],new N_({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:lN(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(g_(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new KT({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new sN("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new sN("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new sN("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new sN("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new iN("Legacy serialization format not supported yet.");n=t}else ap.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,a=t;const s=new e(a);if(!(s instanceof ZT))throw new oN(`Sequential.fromConfig called on non-Sequential input: ${s}`);for(const e of n){const t=V_(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(e){if(null==this.model)throw new iN("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new iN("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function JT(e){return new KT(e)}function QT(e){return new ZT(e)}function eC(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Im.getLoadHandlers(e,t);if(0===n.length)n.push(Im.browserHTTPRequest(e,t));else if(n.length>1)throw new iN(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new iN("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=V_(xT(a),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new iN("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Im.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Jg(e),Jg(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function tC(e){return F_(e)}function nC(e,t){W_.registerCallbackConstructor(e,t)}ZT.className="Sequential",Eg.registerClass(ZT);var rC=class extends Eg.Serializable{getConfig(){return{}}},aC=class extends rC{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new oN(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Fb(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}};aC.className="elu",Eg.registerClass(aC);var sC=class extends rC{apply(e){return Sx(e)}};sC.className="selu",Eg.registerClass(sC);var iC=class extends rC{apply(e){return fx(e)}};iC.className="relu",Eg.registerClass(iC);var oC=class extends rC{apply(e){return Zg((()=>Lw(6,fx(e))))}};oC.className="relu6",Eg.registerClass(oC);var uC=class extends rC{apply(e){return e}};uC.className="linear",Eg.registerClass(uC);var lC=class extends rC{apply(e){return qy(e)}};lC.className="sigmoid",Eg.registerClass(lC);var cC=class extends rC{apply(e){return function(e){return Zg((()=>{const t=cy(.5,py(.2,e));return ib(t,0,1)}))}(e)}};cC.className="hardSigmoid",Eg.registerClass(cC);var dC=class extends rC{apply(e){return lw(e)}};dC.className="softplus",Eg.registerClass(dC);var hC=class extends rC{apply(e){return function(e){return Zg((()=>hy(e,cy(fy(e),1))))}(e)}};hC.className="softsign",Eg.registerClass(hC);var pC=class extends rC{apply(e){return Xy(e)}};pC.className="tanh",Eg.registerClass(pC);var fC=class extends rC{apply(e){return Mx(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}};fC.className="softmax",Eg.registerClass(fC);var mC=class extends rC{apply(e){return fw(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}};mC.className="logSoftmax",Eg.registerClass(mC);var gC=class extends rC{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return Zg((()=>py(qy(py(e,t)),e)))}};gC.className="swish",Eg.registerClass(gC);var yC=class extends rC{apply(e){return Zg((()=>py(e,Xy(lw(e)))))}};function bC(e){return e.getClassName()}function wC(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return wN(e,Eg.SerializationMap.getMap().classNameMap,t,"activation")}function xC(e){if(null==e){return wC({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},wC(t)}return e instanceof rC?e:wC(e)}function vC(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}yC.className="mish",Eg.registerClass(yC);var kC=class extends Eg.Serializable{},IC=class extends kC{constructor(e){super(),vC(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Zg((()=>{let t=Rw([1]);return this.hasL1&&(t=cy(t,pw(py(this.l1,fy(e))))),this.hasL2&&(t=cy(t,pw(py(this.l2,xE(e))))),Vy(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};IC.className="L1L2",Eg.registerClass(IC);var SC={l1l2:"L1L2"};function NC(e){return yN(e)}function EC(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return wN(e,Eg.SerializationMap.getMap().classNameMap,t,"regularizer")}function _C(e){return null==e?null:"string"==typeof e?EC({className:e in SC?SC[e]:e,config:{}}):e instanceof kC?e:EC(e)}var TC=class extends __{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=m_(e);let n=fx(e);return null!=this.maxValue&&(n=ib(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};TC.className="ReLU",Eg.registerClass(TC);var CC=class extends __{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=m_(e);return Kb(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};CC.className="LeakyReLU",Eg.registerClass(CC);var AC=class extends __{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=jE(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=_C(e.alphaRegularizer),this.alphaConstraint=LN(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new iN(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=g_(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new k_({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=m_(e),tx(e,this.alpha.read())}getConfig(){const e={alphaInitializer:HE(this.alphaInitializer),alphaRegularizer:NC(this.alphaRegularizer),alphaConstraint:DN(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};AC.className="PReLU",Eg.registerClass(AC);var $C=class extends __{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new oN(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=m_(e);return Fb(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};$C.className="ELU",Eg.registerClass($C);var FC=class extends __{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=m_(e);return py(n,xm(Ub(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};FC.className="ThresholdedReLU",Eg.registerClass(FC);var RC=class extends __{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new fC).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=m_(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function MC(e,t,n){if("number"==typeof e)return lN(e,t);if(e.length!==t)throw new iN(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new iN(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function DC(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;if(null==e)return e;const s=t+(t-1)*(a-1);let i;return i="same"===n?e:e-s+1,Math.floor((i+r-1)/r)}function OC(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+iE([n-t,0]);else{if("same"!==r)throw new iN(`Unsupport padding mode: ${r}.`);e*=t}return e}function LC(e,t){return Zg((()=>(XN(t),"channelsFirst"===t?Um(e,[0,2,3,1]):e)))}function PC(e,t){return Zg((()=>(XN(t),"channelsFirst"===t?Um(e,[0,2,3,4,1]):e)))}function zC(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return Zg((()=>{if(null==s&&(s="channelsLast"),XN(s),3!==e.rank&&4!==e.rank)throw new iN(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new iN(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=LC(e,s);if("causal"===a)throw new oN("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=bv.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=Um(u,[0,3,1,2])),u}))}RC.className="Softmax",Eg.registerClass(RC);var BC=class extends __{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",BC.verifyArgs(t),this.rank=e,NN(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new oN(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=MC(t.kernelSize,e,"kernelSize"),this.strides=MC(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,YN(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,XN(this.dataFormat),this.activation=xC(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=jE(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=LN(t.biasConstraint),this.biasRegularizer=_C(t.biasRegularizer),this.activityRegularizer=_C(t.activityRegularizer),this.dilationRate=MC(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new iN(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new iN(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new iN(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(cN("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!SN(e.kernelSize,"number",1,3))throw new iN(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:bC(this.activation),useBias:this.useBias,biasInitializer:HE(this.biasInitializer),biasRegularizer:NC(this.biasRegularizer),activityRegularizer:NC(this.activityRegularizer),biasConstraint:DN(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},WC=class extends BC{constructor(e,t){super(e,t),this.kernel=null,WC.verifyArgs(t),this.filters=t.filters,NN(this.filters,"filters"),this.kernelInitializer=jE(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=LN(t.kernelConstraint),this.kernelRegularizer=_C(t.kernelRegularizer)}build(e){e=g_(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new iN(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Zg((()=>{let t;e=m_(e);const n=null==this.bias?null:this.bias.read(),r=_N(this.activation.getClassName());if(null!=r&&2===this.rank)t=zC(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return Zg((()=>{if(null==s&&(s="channelsLast"),XN(s),3!==e.shape.length)throw new iN(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new iN(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new iN(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Um(e,[0,2,1])),"causal"===a)throw new oN("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=hb(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=kE(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=zC(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new oN("convolutions greater than 3D are not implemented yet.");t=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return Zg((()=>{if(null==s&&(s="channelsLast"),XN(s),4!==e.rank&&5!==e.rank)throw new iN(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new iN(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=PC(e,s);if("causal"===a)throw new oN("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=mb(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=kE(o,n)),"channelsFirst"===s&&(o=Um(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=g_(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=DC(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:HE(this.kernelInitializer),kernelRegularizer:NC(this.kernelRegularizer),kernelConstraint:DN(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new iN(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},UC=class extends WC{constructor(e){super(2,e),UC.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!SN(e.kernelSize,"number",1,2))throw new iN(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};UC.className="Conv2D",Eg.registerClass(UC);var VC=class extends WC{constructor(e){super(3,e),VC.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new iN(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};VC.className="Conv3D",Eg.registerClass(VC);var GC=class extends UC{constructor(e){if(super(e),this.inputSpec=[new k_({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new iN(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=g_(e)).length)throw new iN("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new iN("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new k_({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Zg((()=>{let t=m_(e);if(4!==t.shape.length)throw new iN(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],d=this.strides[1],h=[r,OC(i,c,u,this.padding),OC(o,d,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Um(t,[0,2,3,1]));let p=fb(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Um(p,[0,3,1,2])),null!=this.bias&&(p=kE(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=g_(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=OC(t[r],o,s,this.padding),t[a]=OC(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};GC.className="Conv2DTranspose",Eg.registerClass(GC);var HC=class extends VC{constructor(e){if(super(e),this.inputSpec=[new k_({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new iN(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=g_(e)).length)throw new iN("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new iN("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new k_({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Zg((()=>{let t=m_(e);if(5!==t.shape.length)throw new iN(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],l=n[s],c=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,OC(o,p,c,this.padding),OC(u,f,d,this.padding),OC(l,m,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Um(t,[0,2,3,4,1]));let y=yb(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Um(y,[0,4,1,2,3])),null!==this.bias&&(y=kE(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=g_(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=OC(t[r],l,i,this.padding),t[a]=OC(t[a],c,o,this.padding),t[s]=OC(t[s],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};HC.className="Conv3DTranspose",Eg.registerClass(HC);var jC=class extends WC{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new iN("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new iN("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new iN(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=jE(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=_C(t.depthwiseRegularizer),this.depthwiseConstraint=LN(t.depthwiseConstraint),this.pointwiseInitializer=jE(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=_C(t.pointwiseRegularizer),this.pointwiseConstraint=LN(t.pointwiseConstraint)}build(e){if((e=g_(e)).length<this.rank+2)throw new iN(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new iN(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new k_({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Zg((()=>{let t;if(e=m_(e),1===this.rank)throw new oN("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Um(e,[0,2,3,1])),t=Nx(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=kE(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Um(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=HE(this.depthwiseInitializer),e.pointwiseInitializer=HE(this.pointwiseInitializer),e.depthwiseRegularizer=NC(this.depthwiseRegularizer),e.pointwiseRegularizer=NC(this.pointwiseRegularizer),e.depthwiseConstraint=DN(this.depthwiseConstraint),e.pointwiseConstraint=DN(this.pointwiseConstraint),e}};jC.className="SeparableConv";var qC=class extends jC{constructor(e){super(2,e)}};qC.className="SeparableConv2D",Eg.registerClass(qC);var KC=class extends WC{constructor(e){super(1,e),KC.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!SN(e.kernelSize,"number",1,1))throw new iN(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};KC.className="Conv1D",Eg.registerClass(KC);var XC=class extends __{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Zg((()=>{if(e=m_(e),"channelsLast"===this.dataFormat){const t=pE(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return pE(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=pE(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return pE(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};XC.className="Cropping2D",Eg.registerClass(XC);var YC=class extends __{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,XN(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,IN(GN,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Zg((()=>{let t=m_(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Um(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?_k.resizeNearestNeighbor(t,[e,r]):_k.resizeBilinear(t,[e,r]);return Um(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?_k.resizeNearestNeighbor(t,[e,r]):_k.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};YC.className="UpSampling2D",Eg.registerClass(YC);var ZC=class extends BC{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=jE(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=LN(e.depthwiseConstraint),this.depthwiseRegularizer=_C(e.depthwiseRegularizer)}build(e){if((e=g_(e)).length<4)throw new iN(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new iN(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Zg((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return Zg((()=>{null==a&&(a="channelsLast"),XN(a);let i=LC(e,a);if(4!==e.rank)throw new iN(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new iN(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Ib(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Um(i,[0,3,1,2])),i}))}(e=m_(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=kE(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=g_(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=DC(t,this.kernelSize[0],this.padding,this.strides[0]),s=DC(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=HE(this.depthwiseInitializer),e.depthwiseRegularizer=NC(this.depthwiseRegularizer),e.depthwiseConstraint=DN(this.depthwiseRegularizer),e}};function JC(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new iN("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function QC(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return Zg((()=>{const u=t.shape.length;if(u<3)throw new iN(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(oE(2,u));if(t=Um(t,l),null!=s)throw new oN("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&(a=xm(xm(a,"bool"),"float32"),a.rank===u-1&&(a=Db(a,-1)),a=Um(a,l)),r&&(t=gx(t,0),null!=a&&(a=gx(a,0)));const c=[];let d,h=n;const p=t.shape[0],f=nv(t);let m,g;null!=a&&(m=nv(a));for(let t=0;t<p;++t){const n=f[t],r=Zg((()=>e(n,h)));if(null==a)d=r[0],h=r[1];else{const e=Zg((()=>{const e=m[t],n=hw(Hw(e),e);return{output:cy(py(r[0],e),py(h[0],n)),newStates:h.map(((t,a)=>cy(py(r[1][a],e),py(t,n))))}}));d=e.output,h=e.newStates}o&&c.push(d)}return o&&(g=Vx(c,1)),[d,g,h]}))}ZC.className="DepthwiseConv2D",Eg.registerClass(ZC);var eA=class extends __{constructor(e){let t;if(super(e),null==e.cell)throw new iN("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new uA({cells:e.cell}):e.cell,null==t.stateSize)throw new iN("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new k_({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?oE(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){p_(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Zg((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new oN("Constants support is not implemented in RNN yet.");p_(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new k_({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ap.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new iN(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new k_({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Zg((()=>{if(!this.stateful)throw new aN("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new iN("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Rw([n,e]))):this.states_=[Rw([n,this.cell.stateSize])];else if(null==e)Jg(this.states_),null!=this.keptStates&&(Jg(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Rw([n,e]))):this.states_[0]=Rw([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new iN(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Jg(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!ap.arraysEqual(r.shape,s))throw new iN(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Qg(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=JC(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new k_({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof I_){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Zg((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=m_(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new iN(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=QC(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const d=this.returnSequences?l:u;return this.returnState?[d].concat(c):d}))}getInitialState(e){return Zg((()=>{let t=Rw(e.shape);return t=pw(t,[1,2]),t=lE(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?gE(t,[1,e]):t)):this.cell.stateSize>1?[gE(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===eA.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=V_(t.cell,n);return new e(Object.assign(t,{cell:r}))}};eA.className="RNN",Eg.registerClass(eA);var tA=class extends __{},nA=class extends tA{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,NN(this.units,"units"),this.activation=xC(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jE(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jE(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jE(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_C(e.kernelRegularizer),this.recurrentRegularizer=_C(e.recurrentRegularizer),this.biasRegularizer=_C(e.biasRegularizer),this.kernelConstraint=LN(e.kernelConstraint),this.recurrentConstraint=LN(e.recurrentConstraint),this.biasConstraint=LN(e.biasConstraint),this.dropout=sE([1,iE([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=sE([1,iE([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=g_(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Zg((()=>{if(2!==(e=e).length)throw new iN(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=lA({ones:()=>Hw(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=lA({ones:()=>Hw(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=bE(null!=s?py(e,s):e,this.kernel.read()),null!=this.bias&&(a=kE(a,this.bias.read())),null!=i&&(n=py(n,i));let o=cy(a,bE(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:bC(this.activation),useBias:this.useBias,kernelInitializer:HE(this.kernelInitializer),recurrentInitializer:HE(this.recurrentInitializer),biasInitializer:HE(this.biasInitializer),kernelRegularizer:NC(this.kernelRegularizer),recurrentRegularizer:NC(this.recurrentRegularizer),biasRegularizer:NC(this.biasRegularizer),activityRegularizer:NC(this.activityRegularizer),kernelConstraint:DN(this.kernelConstraint),recurrentConstraint:DN(this.recurrentConstraint),biasConstraint:DN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};nA.className="SimpleRNNCell",Eg.registerClass(nA);var rA=class extends eA{constructor(e){e.cell=new nA(e),super(e)}call(e,t){return Zg((()=>{null!=this.cell.dropoutMask&&(Jg(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jg(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};rA.className="SimpleRNN",Eg.registerClass(rA);var aA=class extends tA{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new iN("GRUCell does not support reset_after parameter set to true.");this.units=e.units,NN(this.units,"units"),this.activation=xC(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=xC(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jE(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jE(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jE(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_C(e.kernelRegularizer),this.recurrentRegularizer=_C(e.recurrentRegularizer),this.biasRegularizer=_C(e.biasRegularizer),this.kernelConstraint=LN(e.kernelConstraint),this.recurrentConstraint=LN(e.recurrentConstraint),this.biasConstraint=LN(e.biasConstraint),this.dropout=sE([1,iE([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=sE([1,iE([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=g_(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Zg((()=>{if(2!==(e=e).length)throw new iN(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=lA({ones:()=>Hw(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=lA({ones:()=>Hw(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=py(e,a[0]));let l=bE(e,this.kernel.read());this.useBias&&(l=kE(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=py(r,s[0]));const c=this.recurrentKernel.read(),[d,h]=Px(c,[2*this.units,this.units],c.rank-1),p=bE(r,d),[f,m,g]=Px(l,3,l.rank-1),[y,b]=Px(p,2,p.rank-1);i=this.recurrentActivation.apply(cy(f,y)),o=this.recurrentActivation.apply(cy(m,b));const w=bE(py(o,r),h);u=this.activation.apply(cy(g,w));const x=cy(py(i,r),py(cy(1,uw(i)),u));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:bC(this.activation),recurrentActivation:bC(this.recurrentActivation),useBias:this.useBias,kernelInitializer:HE(this.kernelInitializer),recurrentInitializer:HE(this.recurrentInitializer),biasInitializer:HE(this.biasInitializer),kernelRegularizer:NC(this.kernelRegularizer),recurrentRegularizer:NC(this.recurrentRegularizer),biasRegularizer:NC(this.biasRegularizer),activityRegularizer:NC(this.activityRegularizer),kernelConstraint:DN(this.kernelConstraint),recurrentConstraint:DN(this.recurrentConstraint),biasConstraint:DN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};aA.className="GRUCell",Eg.registerClass(aA);var sA=class extends eA{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new aA(e),super(e)}call(e,t){return Zg((()=>{null!=this.cell.dropoutMask&&(Jg(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jg(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};sA.className="GRU",Eg.registerClass(sA);var iA=class extends tA{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,NN(this.units,"units"),this.activation=xC(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=xC(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jE(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jE(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jE(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=_C(e.kernelRegularizer),this.recurrentRegularizer=_C(e.recurrentRegularizer),this.biasRegularizer=_C(e.biasRegularizer),this.kernelConstraint=LN(e.kernelConstraint),this.recurrentConstraint=LN(e.recurrentConstraint),this.biasConstraint=LN(e.biasConstraint),this.dropout=sE([1,iE([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=sE([1,iE([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=g_(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends _E{apply(t,r){const a=e.apply([n]),s=(new CE).apply([n]),i=e.apply([2*n]);return mE(mE(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Zg((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new iN(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=lA({ones:()=>Hw(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=lA({ones:()=>Hw(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=py(e,s[0]));let d=bE(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=py(r,i[0])),d=cy(d,bE(r,this.recurrentKernel.read())),this.useBias&&(d=kE(d,this.bias.read()));const[h,p,f,m]=Px(d,4,d.rank-1);o=this.recurrentActivation.apply(h),u=this.recurrentActivation.apply(p),l=cy(py(u,a),py(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=py(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:bC(this.activation),recurrentActivation:bC(this.recurrentActivation),useBias:this.useBias,kernelInitializer:HE(this.kernelInitializer),recurrentInitializer:HE(this.recurrentInitializer),biasInitializer:HE(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:NC(this.kernelRegularizer),recurrentRegularizer:NC(this.recurrentRegularizer),biasRegularizer:NC(this.biasRegularizer),activityRegularizer:NC(this.activityRegularizer),kernelConstraint:DN(this.kernelConstraint),recurrentConstraint:DN(this.recurrentConstraint),biasConstraint:DN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};iA.className="LSTMCell",Eg.registerClass(iA);var oA=class extends eA{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new iA(e),super(e)}call(e,t){return Zg((()=>{null!=this.cell.dropoutMask&&(Jg(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jg(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};oA.className="LSTM",Eg.registerClass(oA);var uA=class extends tA{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Zg((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;p_(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{QN(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=[];for(const e of t.cells)r.push(V_(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return x_(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}v_(t)}};function lA(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):IE(t(),n),o=()=>SE(i,t,r);return!a||a<=1?Qg(o().clone()):Array(a).fill(void 0).map(o).map((e=>Qg(e.clone())))}uA.className="StackedRNNCells",Eg.registerClass(uA);var cA=class extends eA{constructor(e){if(e.unroll)throw new oN("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new oN("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new k_({ndim:5})]}call(e,t){return Zg((()=>{if(null!=this.cell.dropoutMask&&(Jg(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jg(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new iN("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Zg((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Rw([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Zg((()=>{if(!this.stateful)throw new aN("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new iN("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Rw(a))):this.states_=[Rw(a)];else if(null==e)Jg(this.states_),null!=this.keptStates&&(Jg(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Rw(a))):this.states_[0]=Rw(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new iN(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Jg(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!ap.arraysEqual(n.shape,r))throw new iN(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Qg(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=DC(u,r[0],a,s[0],i[0]),d=DC(l,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,d]:[c,d,n]]}};cA.className="ConvRNN2D";var dA=class extends iA{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,NN(this.filters,"filters"),this.kernelSize=MC(n,2,"kernelSize"),this.kernelSize.forEach((e=>NN(e,"kernelSize"))),this.strides=MC(r||1,2,"strides"),this.strides.forEach((e=>NN(e,"strides"))),this.padding=a||"valid",YN(this.padding),this.dataFormat=s||"channelsLast",XN(this.dataFormat),this.dilationRate=MC(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>NN(e,"dilationRate")))}build(e){var t;e=g_(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new iN(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends _E{apply(e,t){return fE([n.apply([r]),Mw([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Zg((()=>{if(3!==e.length)throw new iN(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=lA({ones:()=>Hw(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?py(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),d=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=lA({ones:()=>Hw(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const h=this.recurrentDropoutMask;let p=o(a,h,0),f=o(a,h,1),m=o(a,h,2),g=o(a,h,3);const[y,b,w,x]=Px(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?Px(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,w,I,this.padding),d=this.inputConv(d,x,S,this.padding);const[N,E,_,T]=Px(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,E),m=this.recurrentConv(m,_),g=this.recurrentConv(g,T);const C=this.recurrentActivation.apply(cy(u,p)),A=this.recurrentActivation.apply(cy(l,f)),$=cy(py(A,s),py(C,this.activation.apply(cy(c,m)))),F=py(this.recurrentActivation.apply(cy(d,g)),this.activation.apply($));return[F,F,$]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=db(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?kE(a,n,this.dataFormat):a}recurrentConv(e,t){return db(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};dA.className="ConvLSTM2DCell",Eg.registerClass(dA);var hA=class extends cA{constructor(e){const t=new dA(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};hA.className="ConvLSTM2D",Eg.registerClass(hA);var pA=class extends __{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Zg((()=>{this.invokeCallHook(e,t);const n=m_(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return SE((()=>IE(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};pA.className="Dropout",Eg.registerClass(pA);var fA=class extends pA{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}};fA.className="SpatialDropout1D",Eg.registerClass(fA);var mA=class extends __{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,NN(this.units,"units"),this.activation=xC(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=jE(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=jE(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=LN(e.kernelConstraint),this.biasConstraint=LN(e.biasConstraint),this.kernelRegularizer=_C(e.kernelRegularizer),this.biasRegularizer=_C(e.biasRegularizer),this.activityRegularizer=_C(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=g_(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=g_(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Zg((()=>{this.invokeCallHook(e,t);const n=m_(e),r=_N(this.activation.getClassName());let a;return null!=r?a=bE(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=bE(n,this.kernel.read()),null!=this.bias&&(a=kE(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:bC(this.activation),useBias:this.useBias,kernelInitializer:HE(this.kernelInitializer),biasInitializer:HE(this.biasInitializer),kernelRegularizer:NC(this.kernelRegularizer),biasRegularizer:NC(this.biasRegularizer),activityRegularizer:NC(this.activityRegularizer),kernelConstraint:DN(this.kernelConstraint),biasConstraint:DN(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};mA.className="Dense",Eg.registerClass(mA);var gA=class extends __{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=g_(e);for(const t of e.slice(1))if(null==t)throw new iN(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],aE(e,1)]}call(e,t){return Zg((()=>{this.invokeCallHook(e,t);let n=m_(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Um(n,e)}return function(e){if(e.rank<=1)throw new iN(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],aE(e.shape,1)];return Vy(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}};gA.className="Flatten",Eg.registerClass(gA);var yA=class extends __{constructor(e){super(e),this.supportsMasking=!0,this.activation=xC(e.activation)}call(e,t){return Zg((()=>{this.invokeCallHook(e,t);const n=m_(e);return this.activation.apply(n)}))}getConfig(){const e={activation:bC(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};yA.className="Activation",Eg.registerClass(yA);var bA=class extends __{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Zg((()=>{return e=m_(e),t=e,n=this.n,Zg((()=>{if(2!==t.shape.length)throw new iN(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return gE(lE(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};bA.className="RepeatVector",Eg.registerClass(bA);var wA=class extends __{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new iN("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=aE(e);if(null!==s){if(0===a||i%a!=0)throw new iN(n);r[s]=i/a}else if(i!==a)throw new iN(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Zg((()=>{this.invokeCallHook(e,t);const n=m_(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Vy(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};wA.className="Reshape",Eg.registerClass(wA);var xA=class extends __{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=oE(1,e.dims.length+1);if(!ap.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new k_({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=g_(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Um(m_(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};xA.className="Permute",Eg.registerClass(xA);var vA=class extends __{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=m_(e);return wy(Gw(n,this.maskValue),-1)}call(e,t){return Zg((()=>{this.invokeCallHook(e,t);const n=m_(e),r=wy(Gw(n,this.maskValue),-1,!0);return py(n,xm(r,n.dtype))}))}};vA.className="Masking",Eg.registerClass(vA);var kA=class extends __{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(pN(e.inputLength))}this.inputDim=e.inputDim,NN(this.inputDim,"inputDim"),this.outputDim=e.outputDim,NN(this.outputDim,"outputDim"),this.embeddingsInitializer=jE(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=_C(e.embeddingsRegularizer),this.activityRegularizer=_C(e.activityRegularizer),this.embeddingsConstraint=LN(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Zg((()=>this.maskZero?(e=m_(e),Gw(e,Tb(e))):null))}computeOutputShape(e){if(e=g_(e),null==this.inputLength)return[...e,this.outputDim];const t=pN(this.inputLength);if(t.length!==e.length-1)throw new iN(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new iN(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Zg((()=>{this.invokeCallHook(e,t);let n=m_(e);"int32"!==n.dtype&&(n=uE(n,"int32"));const r=wE(this.embeddings.read(),Vy(n,[n.size]));return Vy(r,g_(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:HE(this.embeddingsInitializer),embeddingsRegularizer:NC(this.embeddingsRegularizer),activityRegularizer:NC(this.activityRegularizer),embeddingsConstraint:DN(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};kA.className="Embedding",Eg.registerClass(kA);var IA=class extends __{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new oN}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new iN("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[g_(e)]),(e=e).length<2)throw new iN(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=vN(t),t.length>1)throw new iN(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===vN(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Zg((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=iE(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=lE(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=Vy(r,[a].concat(aE(e.slice(1))));i=Um(i,[1,0]),i=Vy(i,s),t.push(i),n=!0}else if(e>1){const a=oE(1,e).concat([0]);t.push(Um(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Vy(Um(Vy(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(oE(0,a-1));r=Um(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=vN(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Zg((()=>{if(null==t)return null;if(!Array.isArray(t))throw new iN("`mask` should be an Array");if(!Array.isArray(e))throw new iN("`inputs` should be an Array");if(t.length!==e.length)throw new iN(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Db(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Sw(n,t[e]);return n}))}},SA=class extends IA{constructor(e){super(e)}mergeFunction(e){return Zg((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=cy(t,e[n]);return t}))}};SA.className="Add",Eg.registerClass(SA);var NA=class extends IA{constructor(e){super(e)}mergeFunction(e){return Zg((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=py(t,e[n]);return t}))}};NA.className="Multiply",Eg.registerClass(NA);var EA=class extends IA{constructor(e){super(e)}mergeFunction(e){return Zg((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=cy(t,e[n]);return py(1/e.length,t)}))}};EA.className="Average",Eg.registerClass(EA);var _A=class extends IA{constructor(e){super(e)}mergeFunction(e){return Zg((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=$w(t,e[n]);return t}))}};_A.className="Maximum",Eg.registerClass(_A);var TA=class extends IA{constructor(e){super(e)}mergeFunction(e){return Zg((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Lw(t,e[n]);return t}))}};TA.className="Minimum",Eg.registerClass(TA);var CA=class extends IA{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new iN("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(ap.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new iN("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Zg((()=>fE(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new iN("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new iN("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new iN("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new iN(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Zg((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(xm(Hw(e[n]),"bool")):t[n].rank<e[n].rank?r.push(Db(t[n],-1)):r.push(t[n]);const a=jy(r,this.axis);return by(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function AA(e,t){for(;e<0;)e+=t;return e}CA.className="Concatenate",Eg.registerClass(CA);var $A=class extends IA{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ap.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new oN("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new iN(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new iN(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>AA(t,e[n].shape.length))):[AA(this.axes,n.shape.length),AA(this.axes,r.shape.length)],this.normalize&&(n=G_(n,t[0]),r=G_(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new oN("batchDot is not implemented for tensors of 4D or higher rank yet");if(ap.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),ap.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new oN("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return Zg((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=Vy(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Vy(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?pw(py(e,t),s[0]):pw(py(Um(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Bm(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=Ux(i,t)}return 1===i.shape.length&&(i=Db(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[AA(this.axes,e.length),AA(this.axes,t.length)],n}computeOutputShape(e){ap.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new oN("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};$A.className="Dot",Eg.registerClass($A);var FA=class extends __{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Zg((()=>{this.invokeCallHook(e,t);const n=m_(e);return SE((()=>cy(yE(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};FA.className="GaussianNoise",Eg.registerClass(FA);var RA=class extends __{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Zg((()=>{this.invokeCallHook(e,t);const n=m_(e);return this.rate>0&&this.rate<1?SE((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return py(n,yE(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};RA.className="GaussianDropout",Eg.registerClass(RA);var MA=class extends __{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||m_(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Zg((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return SE((()=>{const t=m_(e),r=-1.7580993408473766;let a=Vb(cx(n),this.rate);a=uE(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=cy(py(t,a),py(cy(a,-1),r));return cy(py(o,s),i)}),(()=>m_(e)),t.training||!1)}return e}))}};function DA(e,t,n,r,a){let s,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=Qy(e,t,n,r,a,i);else if(3===e.rank)s=eb(e,t,n,r,a,i);else{if(4!==e.rank)throw new oN(`batchNormalization is not implemented for array of rank ${e.rank} yet`);s=tb(e,t,n,r,a,i)}return s}function OA(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Zg((()=>{const s=Ww(e,r),i=s.mean,o=s.variance;return[DA(e,i,o,n,t,a),i,o]}))}function LA(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Zg((()=>{const s=Ww(e,r),i=s.mean,o=s.variance,u=[];for(const t of oE(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=Vy(i,u),c=Vy(o,u),d=null==t?null:Vy(t,u),h=null==n?null:Vy(n,u);return[DA(e,l,c,h,d,a),i,o]}))}MA.className="AlphaDropout",Eg.registerClass(MA);var PA=class extends __{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jE(e.betaInitializer||"zeros"),this.gammaInitializer=jE(e.gammaInitializer||"ones"),this.movingMeanInitializer=jE(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=jE(e.movingVarianceInitializer||"ones"),this.betaConstraint=LN(e.betaConstraint),this.gammaConstraint=LN(e.gammaConstraint),this.betaRegularizer=_C(e.betaRegularizer),this.gammaRegularizer=_C(e.gammaRegularizer)}build(e){e=g_(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new iN(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new k_({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Zg((()=>{const n=null!=t.training&&t.training,r=m_(e),a=r.shape,s=a.length,i=oE(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=lN(1,s);u[o]=a[o];const l=i.slice();l.sort();const c=!ap.arraysEqual(l,oE(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=Vy(this.movingMean.read(),u),t=Vy(this.movingVariance.read(),u),n=this.center?Vy(this.beta.read(),u):null,a=this.scale?Vy(this.gamma.read(),u):null;return DA(r,e,t,n,a,this.epsilon)}return DA(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,h,p]=function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return ap.arraysEqual(r.slice().sort(),oE(0,e.rank-1))?OA(e,t,n,r,a):LA(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Zg((()=>{const r=1-n,a=e.read(),s=py(hw(a,t),r);e.write(hw(a,s))}))};return(()=>{f(this.movingMean,h,this.momentum),f(this.movingVariance,p,this.momentum)})(),d}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:HE(this.betaInitializer),gammaInitializer:HE(this.gammaInitializer),movingMeanInitializer:HE(this.movingMeanInitializer),movingVarianceInitializer:HE(this.movingVarianceInitializer),betaRegularizer:NC(this.betaRegularizer),gammaRegularizer:NC(this.gammaRegularizer),betaConstraint:DN(this.betaConstraint),gammaConstraint:DN(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};PA.className="BatchNormalization",Eg.registerClass(PA);var zA=class extends __{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jE(e.betaInitializer||"zeros"),this.gammaInitializer=jE(e.gammaInitializer||"ones"),this.betaRegularizer=_C(e.betaRegularizer),this.gammaRegularizer=_C(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=g_(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==vN(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=m_(e),r=n.shape,a=r.length;return Zg((()=>{let{mean:e,variance:t}=Ww(n,this.axis,!0);const s=lN(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a?Vy(e,s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=Lb(e,l),t=Lb(t,l),o=Lb(o,c),u=Lb(u,c),DA(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:HE(this.betaInitializer),gammaInitializer:HE(this.gammaInitializer),betaRegularizer:NC(this.betaRegularizer),gammaRegularizer:NC(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};zA.className="LayerNormalization",Eg.registerClass(zA);var BA=class extends __{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new iN(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new iN(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new iN(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new k_({ndim:4})]}computeOutputShape(e){let t,n;return e=g_(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Zg((()=>{return t=m_(e),n=this.padding,r=this.dataFormat,Zg((()=>{if(4!==t.rank)throw new iN(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new iN("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new iN(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],qw(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function WA(e,t,n,r,a,s){return Zg((()=>{let i;XN(a),ZN(s),YN(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=LC(e,a);const o="same"===r?"same":"valid";return i="max"===s?Tw(e,t,n,o):Gy(e,t,n,o),"channelsFirst"===a&&(i=Um(i,[0,3,1,2])),i}))}function UA(e,t,n,r,a,s){return Zg((()=>{let i;XN(a),ZN(s),YN(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=PC(e,a);const o="same"===r?"same":"valid";return i="max"===s?Cw(e,t,n,o):Hy(e,t,n,o),"channelsFirst"===a&&(i=Um(i,[0,4,1,2,3])),i}))}BA.className="ZeroPadding2D",Eg.registerClass(BA);var VA=class extends __{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new iN(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(NN(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new iN(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}NN(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,YN(this.padding),this.inputSpec=[new k_({ndim:3})]}computeOutputShape(e){const t=DC((e=g_(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Zg((()=>{this.invokeCallHook(e,t),e=lE(m_(e),2);const n=this.poolingFunction(m_(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ux(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},GA=class extends VA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return XN(a),YN(r),WA(e,t,n,r,a,"max")}};GA.className="MaxPooling1D",Eg.registerClass(GA);var HA=class extends VA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return XN(a),YN(r),WA(e,t,n,r,a,"avg")}};HA.className="AveragePooling1D",Eg.registerClass(HA);var jA=class extends __{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new iN(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];NN(this.poolSize,"poolSize"),NN(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,XN(this.dataFormat),YN(this.padding),this.inputSpec=[new k_({ndim:4})]}computeOutputShape(e){e=g_(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=DC(t,this.poolSize[0],this.padding,this.strides[0]),n=DC(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Zg((()=>(this.invokeCallHook(e,t),this.poolingFunction(m_(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},qA=class extends jA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return XN(a),YN(r),WA(e,t,n,r,a,"max")}};qA.className="MaxPooling2D",Eg.registerClass(qA);var KA=class extends jA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return XN(a),YN(r),WA(e,t,n,r,a,"avg")}};KA.className="AveragePooling2D",Eg.registerClass(KA);var XA=class extends __{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new iN(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];NN(this.poolSize,"poolSize"),NN(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,XN(this.dataFormat),YN(this.padding),this.inputSpec=[new k_({ndim:5})]}computeOutputShape(e){e=g_(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=DC(t,this.poolSize[0],this.padding,this.strides[0]),n=DC(n,this.poolSize[1],this.padding,this.strides[1]),r=DC(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Zg((()=>(this.invokeCallHook(e,t),this.poolingFunction(m_(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},YA=class extends XA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return XN(a),YN(r),UA(e,t,n,r,a,"max")}};YA.className="MaxPooling3D",Eg.registerClass(YA);var ZA=class extends XA{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return XN(a),YN(r),UA(e,t,n,r,a,"avg")}};ZA.className="AveragePooling3D",Eg.registerClass(ZA);var JA=class extends __{constructor(e){super(e),this.inputSpec=[new k_({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new oN}},QA=class extends JA{constructor(e){super(e||{})}call(e,t){return Zg((()=>{const t=m_(e);return Fw(t,1)}))}};QA.className="GlobalAveragePooling1D",Eg.registerClass(QA);var e$=class extends JA{constructor(e){super(e||{})}call(e,t){return Zg((()=>{const t=m_(e);return dw(t,1)}))}};e$.className="GlobalMaxPooling1D",Eg.registerClass(e$);var t$=class extends __{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,XN(this.dataFormat),this.inputSpec=[new k_({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new oN}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},n$=class extends t${call(e,t){return Zg((()=>{const t=m_(e);return"channelsLast"===this.dataFormat?Fw(t,[1,2]):Fw(t,[2,3])}))}};n$.className="GlobalAveragePooling2D",Eg.registerClass(n$);var r$=class extends t${call(e,t){return Zg((()=>{const t=m_(e);return"channelsLast"===this.dataFormat?dw(t,[1,2]):dw(t,[2,3])}))}};r$.className="GlobalMaxPooling2D",Eg.registerClass(r$);var a$=class extends __{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=V_(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}},s$=class extends a${constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=g_(e)).length<3)throw new iN(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=g_(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Zg((()=>QC(((e,n)=>[m_(this.layer.call(e,t)),[]]),e=m_(e),[],!1,null,null,!1,!0)[1]))}};s$.className="TimeDistributed",Eg.registerClass(s$);var i$=class extends a${constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=V_(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=V_(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,IN(qN,"BidirectionalMergeMode",a),e.weights)throw new oN("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):hN(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=JC(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new iN("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new k_({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new oN("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof I_;for(const e of s)if(e instanceof I_!==o)throw new iN("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Zg((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=gx(a,1)),"concat"===this.mergeMode?i=fE([r,a]):"sum"===this.mergeMode?i=cy(r,a):"ave"===this.mergeMode?i=py(.5,cy(r,a)):"mul"===this.mergeMode?i=py(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){QN(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),QN(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=V_(t.layer);if(delete t.layer,null!=t.numConstants)throw new oN("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}};function o$(e){return new $_(e)}function u$(e){return new $C(e)}function l$(e){return new TC(e)}function c$(e){return new CC(e)}function d$(e){return new AC(e)}function h$(e){return new RC(e)}function p$(e){return new FC(e)}function f$(e){return new KC(e)}function m$(e){return new UC(e)}function g$(e){return new GC(e)}function y$(e){return new VC(e)}function b$(e){return new HC(e)}function w$(e){return new qC(e)}function x$(e){return new XC(e)}function v$(e){return new YC(e)}function k$(e){return new ZC(e)}function I$(e){return new yA(e)}function S$(e){return new mA(e)}function N$(e){return new pA(e)}function E$(e){return new fA(e)}function _$(e){return new gA(e)}function T$(e){return new bA(e)}function C$(e){return new wA(e)}function A$(e){return new xA(e)}function $$(e){return new kA(e)}function F$(e){return new SA(e)}function R$(e){return new EA(e)}function M$(e){return new CA(e)}function D$(e){return new _A(e)}function O$(e){return new TA(e)}function L$(e){return new NA(e)}function P$(e){return new $A(e)}function z$(e){return new PA(e)}function B$(e){return new zA(e)}function W$(e){return new BA(e)}function U$(e){return new HA(e)}function V$(e){return U$(e)}function G$(e){return U$(e)}function H$(e){return new KA(e)}function j$(e){return H$(e)}function q$(e){return H$(e)}function K$(e){return new ZA(e)}function X$(e){return K$(e)}function Y$(e){return K$(e)}function Z$(e){return new QA(e)}function J$(e){return new n$(e)}function Q$(e){return new e$(e)}function eF(e){return new r$(e)}function tF(e){return new GA(e)}function nF(e){return new qA(e)}function rF(e){return new YA(e)}function aF(e){return new sA(e)}function sF(e){return new aA(e)}function iF(e){return new oA(e)}function oF(e){return new iA(e)}function uF(e){return new rA(e)}function lF(e){return new nA(e)}function cF(e){return new hA(e)}function dF(e){return new dA(e)}function hF(e){return new eA(e)}function pF(e){return new uA(e)}function fF(e){return new i$(e)}function mF(e){return new s$(e)}i$.className="Bidirectional",Eg.registerClass(i$);var gF=Q$,yF=eF,bF=tF,wF=nF;function xF(e){return new FA(e)}function vF(e){return new RA(e)}function kF(e){return new MA(e)}function IF(e){return new vA(e)}var SF={};function NF(e,t){return eT(e,t)}function EF(e,t){return aT(e,t)}function _F(e,t){return sT(e,t)}function TF(e,t){return tT(e,t)}function CF(e,t){return iT(e,t)}function AF(e,t){return rT(e,t)}function $F(e,t){return function(e,t){return Zg((()=>{const n=nT(e,t),r=function(e,t){return Zg((()=>xm(pw(Sw(Eb(e,1),Eb(t,0))),"float32")))}(e,t),a=cy(n,r);return xm(_b(Ub(a,0),hy(n,a),0),"float32")}))}(e,t)}function FF(e,t){return Z_(e,t)}function RF(e,t){return j_(e,t)}function MF(e,t){return q_(e,t)}function DF(e,t){return q_(e,t)}function OF(e,t){return q_(e,t)}function LF(e,t){return H_(e,t)}function PF(e,t){return H_(e,t)}function zF(e,t){return H_(e,t)}su(SF,{MAPE:()=>DF,MSE:()=>PF,binaryAccuracy:()=>NF,binaryCrossentropy:()=>EF,categoricalAccuracy:()=>TF,categoricalCrossentropy:()=>CF,cosineProximity:()=>FF,mape:()=>OF,meanAbsoluteError:()=>RF,meanAbsolutePercentageError:()=>MF,meanSquaredError:()=>LF,mse:()=>zF,precision:()=>AF,recall:()=>$F,sparseCategoricalAccuracy:()=>_F});var BF={};su(BF,{modelFromJSON:()=>YT});var WF={};function UF(e){return new IC(e)}function VF(e){return vC(t=e),new IC({l1:null!=t?t.l1:null,l2:0});var t}function GF(e){return vC(t=e),new IC({l2:null!=t?t.l2:null,l1:0});var t}su(WF,{l1:()=>VF,l1l2:()=>UF,l2:()=>GF});var HF=class extends D_{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof KT))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function jF(e,t){return e<t}function qF(e,t){return e>t}var KF,XF,YF,ZF=class extends HF{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new oN("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=jF:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=qF:this.monitorFunc=jF,this.monitorFunc===jF&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===jF?1/0:-1/0}async onEpochEnd(e,t){await R_(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}},JF={earlyStopping:function(e){return new ZF(e)}};Dl().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),(XF=KF||(KF={}))[XF.DT_INVALID=0]="DT_INVALID",XF[XF.DT_FLOAT=1]="DT_FLOAT",XF[XF.DT_DOUBLE=2]="DT_DOUBLE",XF[XF.DT_INT32=3]="DT_INT32",XF[XF.DT_UINT8=4]="DT_UINT8",XF[XF.DT_INT16=5]="DT_INT16",XF[XF.DT_INT8=6]="DT_INT8",XF[XF.DT_STRING=7]="DT_STRING",XF[XF.DT_COMPLEX64=8]="DT_COMPLEX64",XF[XF.DT_INT64=9]="DT_INT64",XF[XF.DT_BOOL=10]="DT_BOOL",XF[XF.DT_QINT8=11]="DT_QINT8",XF[XF.DT_QUINT8=12]="DT_QUINT8",XF[XF.DT_QINT32=13]="DT_QINT32",XF[XF.DT_BFLOAT16=14]="DT_BFLOAT16",XF[XF.DT_QINT16=15]="DT_QINT16",XF[XF.DT_QUINT16=16]="DT_QUINT16",XF[XF.DT_UINT16=17]="DT_UINT16",XF[XF.DT_COMPLEX128=18]="DT_COMPLEX128",XF[XF.DT_HALF=19]="DT_HALF",XF[XF.DT_RESOURCE=20]="DT_RESOURCE",XF[XF.DT_VARIANT=21]="DT_VARIANT",XF[XF.DT_UINT32=22]="DT_UINT32",XF[XF.DT_UINT64=23]="DT_UINT64",XF[XF.DT_FLOAT_REF=101]="DT_FLOAT_REF",XF[XF.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",XF[XF.DT_INT32_REF=103]="DT_INT32_REF",XF[XF.DT_UINT8_REF=104]="DT_UINT8_REF",XF[XF.DT_INT16_REF=105]="DT_INT16_REF",XF[XF.DT_INT8_REF=106]="DT_INT8_REF",XF[XF.DT_STRING_REF=107]="DT_STRING_REF",XF[XF.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",XF[XF.DT_INT64_REF=109]="DT_INT64_REF",XF[XF.DT_BOOL_REF=110]="DT_BOOL_REF",XF[XF.DT_QINT8_REF=111]="DT_QINT8_REF",XF[XF.DT_QUINT8_REF=112]="DT_QUINT8_REF",XF[XF.DT_QINT32_REF=113]="DT_QINT32_REF",XF[XF.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",XF[XF.DT_QINT16_REF=115]="DT_QINT16_REF",XF[XF.DT_QUINT16_REF=116]="DT_QUINT16_REF",XF[XF.DT_UINT16_REF=117]="DT_UINT16_REF",XF[XF.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",XF[XF.DT_HALF_REF=119]="DT_HALF_REF",XF[XF.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",XF[XF.DT_VARIANT_REF=121]="DT_VARIANT_REF",XF[XF.DT_UINT32_REF=122]="DT_UINT32_REF",XF[XF.DT_UINT64_REF=123]="DT_UINT64_REF",function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(YF||(YF={}));var QF={};function eR(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};QF[e]=n}function tR(e){return QF[e]}function nR(e){delete QF[e]}function rR(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return aR(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>aR(e,n,r,a)));const o=aR(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:ap.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function aR(e,t,n,r){const[a,s]=oR(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[iR(a,e)]));return void 0!==i?t[iR(a,i)][s]:void 0}function sR(e,t){const[n,r,a]=oR(e);return[iR(n,t&&t.currentContextId),r,a]}function iR(e,t){return t?`${e}-${t}`:e}function oR(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function uR(e,t,n){let r=rR("pad",e,t,n);if("explicit"===r){r=rR("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function lR(e){return e.kept?e:vm(e)}var cR={};su(cR,{json:()=>dR});var dR=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],hR={};su(hR,{json:()=>pR});var pR=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fR={};su(fR,{json:()=>mR});var mR=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],gR={};su(gR,{json:()=>yR});var yR=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],bR={};su(bR,{json:()=>wR});var wR=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],xR={};su(xR,{json:()=>vR});var vR=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],kR={};su(kR,{json:()=>IR});var IR=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],SR={};su(SR,{json:()=>NR});var NR=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],ER={};su(ER,{json:()=>_R});var _R=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],TR={};su(TR,{json:()=>CR});var CR=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],AR={};su(AR,{json:()=>$R});var $R=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],FR={};su(FR,{json:()=>RR});var RR=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],MR={};su(MR,{json:()=>DR});var DR=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],OR={};su(OR,{json:()=>LR});var LR=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],PR={};su(PR,{json:()=>zR});var zR=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],BR={};su(BR,{json:()=>WR});var WR=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],UR={};su(UR,{json:()=>VR});var VR=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],GR={};su(GR,{json:()=>HR});var HR=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],jR={};su(jR,{json:()=>qR});var qR=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],KR=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[cR,hR,fR,gR,bR,xR,kR,SR,ER,TR,AR,FR,MR,OR,PR,BR,UR,GR,jR].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(i);d.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=sR(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?d.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=sR(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=sR(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=tR(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=YR(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=YR(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=iM(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=iM(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=JR(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=JR(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=sM(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=sM(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=ZR(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ZR(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=uM(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=uM(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=aM(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=aM(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=oM(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=oM(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=tM(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=tM(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=nM(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=nM(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=eM(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=eM(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=sR(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:QR(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=sR(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=sR(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function XR(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Dl().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function YR(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e[t];return null!=a?XR(a.s,r):n}function ZR(e,t,n){const r=e[t];return r?r.b:n}function JR(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function QR(e){switch("string"==typeof e&&(e=KF[e]),e){case KF.DT_FLOAT:case KF.DT_HALF:return"float32";case KF.DT_INT32:case KF.DT_INT64:case KF.DT_INT8:case KF.DT_UINT8:return"int32";case KF.DT_BOOL:return"bool";case KF.DT_DOUBLE:return"float32";case KF.DT_STRING:return"string";default:return null}}function eM(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function tM(e,t,n){const r=e[t];return r&&r.type?QR(r.type):n}function nM(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>QR(e))):n}function rM(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function aM(e,t,n){const r=e[t];return r&&r.shape?rM(r.shape):n}function sM(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function iM(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>XR(e,r))):n}function oM(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>rM(e))):n}function uM(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}function lM(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!=typeof e&&"number"!=typeof t){ap.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];ap.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function cM(e){return"number"!=typeof e&&!e.some((e=>e<0))}function dM(e,t,n){let r=hM(e,n);const a=!cM(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=hM(e.shape,r)})),!cM(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function hM(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var pM=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);lM(t,e.shape,"TensorList shape mismatch: "),Qg(e)})),this.idTensor=Ix(0),this.maxNumElements=r,Qg(this.idTensor)}get id(){return this.idTensor.id}copy(){return new pM([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);lM(e,this.elementShape,"TensorList shape mismatch: ");const r=dM(this.elementShape,this.tensors,e);return Zg((()=>{const e=this.tensors.map((e=>Vy(e,r)));return Vx(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=dM(this.elementShape,this.tensors,e),r=this.tensors.pop();return lM(r.shape,e,"TensorList shape mismatch: "),Vy(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(lM(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Qg(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);lM(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=dM(this.elementShape,this.tensors,t);return Vy(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);lM(this.elementShape,t.shape,"TensorList shape mismatch: "),Qg(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);lM(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=dM(this.elementShape,this.tensors,n);return 0===e.length?_f([],[0].concat(r)):Zg((()=>{const t=e.map((e=>Vy(this.tensors[e],r)));return Vx(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);lM(this.elementShape,t,"TensorList shape mismatch: ");const n=dM(this.elementShape,this.tensors,t);return 0===this.size()?_f([],[0].concat(n)):Zg((()=>{const e=this.tensors.map((e=>Vy(e,n)));return jy(e,0)}))}},fM=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=rR("thenBranch",e,t,n),a=rR("elseBranch",e,t,n),s=rR("cond",e,t,n),i=rR("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=rR("body",e,t,n),a=rR("cond",e,t,n),s=rR("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[lR(rR("pred",e,t,n))];case"Switch":{const r=rR("pred",e,t,n);let a=rR("data",e,t,n);return a.kept||(a=lR(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==aR(e,t,n)));return r?[lR(aR(r,t,n))]:void 0}case"Enter":{const r=rR("frameName",e,t,n),a=rR("tensor",e,t,n);return n.enterFrame(r),[lR(a)]}case"Exit":{const r=rR("tensor",e,t,n);return n.exitFrame(),[lR(r)]}case"NextIteration":{const r=rR("tensor",e,t,n);return n.nextIteration(),[lR(r)]}case"TensorArrayV3":{const r=rR("size",e,t,n),a=rR("dtype",e,t,n),s=rR("elementShape",e,t,n),i=rR("dynamicSize",e,t,n),o=rR("clearAfterRead",e,t,n),u=rR("identicalElementShapes",e,t,n),l=rR("name",e,t,n),c=new class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Ix(0),Qg(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),lM(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Qg(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return _f([],[0].concat(this.elementShape));const n=this.readMany(e);return lM(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Vx(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return _f([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return lM(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),jy(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,nv(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];Zg((()=>{t=Vy(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Vy(Ky(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,Ix(1)]}case"TensorArrayWriteV3":{const r=rR("tensorArrayId",e,t,n),a=rR("index",e,t,n),s=rR("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=rR("tensorArrayId",e,t,n),a=rR("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=rR("tensorArrayId",e,t,n),a=rR("indices",e,t,n),s=rR("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=rR("tensorArrayId",e,t,n),a=rR("indices",e,t,n),s=rR("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=rR("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=rR("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=rR("tensorArrayId",e,t,n),a=rR("tensor",e,t,n),s=rR("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=rR("tensorArrayId",e,t,n);return[Ix(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=rR("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=rR("tensorListId",e,t,n),a=rR("index",e,t,n),s=rR("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=rR("tensorListId",e,t,n),a=rR("index",e,t,n),s=rR("elementShape",e,t,n),i=rR("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=rR("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new pM([],n,e.dtype,r),i=nv(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(rR("tensor",e,t,n),r,rR("elementShape",e,t,n),rR("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=rR("elementShape",e,t,n),a=rR("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new pM([],e,t,n)}(r,a,rR(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=rR("tensorListId",e,t,n),a=rR("indices",e,t,n),s=rR("elementShape",e,t,n),i=rR("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=rR("tensorListId",e,t,n),a=rR("elementShape",e,t,n),s=rR("elementDType",e,t,n),i=rR("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);lM(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=nv(e);return new pM(a,t,r)}(rR("tensor",e,t,n),rR("elementShape",e,t,n),rR("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=rR("tensorListId",e,t,n),a=n.getTensorList(r.id),s=rR("dtype",e,t,n),i=rR("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=rR("tensorListId",e,t,n),a=rR("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=rR("tensorListId",e,t,n),a=rR("elementShape",e,t,n),s=rR("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=rR("tensor",e,t,n),a=rR("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=hM(e.shape.slice(1),n),i=0===r?0:e.size/r,o=Zg((()=>{const n=[];e=Vy(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],i];n[r]=Vy(Ky(e,o,u),s)}return e.dispose(),n})),u=new pM([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,rR("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function mM(e,t,n){const[r,a]=rR("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,l=rR("numArgs",e,t,n);if(s){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=rR("strides",e,t,n),d=uR(e,t,n),h=rR("dataFormat",e,t,n).toUpperCase(),p=rR("dilations",e,t,n);let[f,m]=rR("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:rR("leakyreluAlpha",e,t,n)}}function gM(e,t,n){return{boxes:rR("boxes",e,t,n),scores:rR("scores",e,t,n),maxOutputSize:rR("maxOutputSize",e,t,n),iouThreshold:rR("iouThreshold",e,t,n),scoreThreshold:rR("scoreThreshold",e,t,n),softNmsSigma:rR("softNmsSigma",e,t,n)}}var yM=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=rR("keyDType",e,t,n),s=rR("valueDType",e,t,n),i=new class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ix(0),this.tensorMap=new Map,Qg(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ix(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Zg((()=>{const e=nv(t),r=n.length,a=e.length;ap.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];Qg(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Zg((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Vx(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=rR("tableHandle",e,t,n,r),s=rR("keys",e,t,n),i=rR("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=rR("tableHandle",e,t,n,r),s=rR("keys",e,t,n),i=rR("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=rR("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function bM(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return Zg((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[cy(rR("a",e,t,n),rR("b",e,t,n))];case"AddN":return[yy(rR("tensors",e,t,n))];case"FloorMod":case"Mod":return[zw(rR("a",e,t,n),rR("b",e,t,n))];case"Mul":return[py(rR("a",e,t,n),rR("b",e,t,n))];case"RealDiv":case"Div":return[hy(rR("a",e,t,n),rR("b",e,t,n))];case"DivNoNan":return[Cb(rR("a",e,t,n),rR("b",e,t,n))];case"FloorDiv":return[dy(rR("a",e,t,n),rR("b",e,t,n))];case"Sub":return[hw(rR("a",e,t,n),rR("b",e,t,n))];case"Minimum":return[Lw(rR("a",e,t,n),rR("b",e,t,n))];case"Maximum":return[$w(rR("a",e,t,n),rR("b",e,t,n))];case"Pow":return[ex(rR("a",e,t,n),rR("b",e,t,n))];case"SquaredDifference":return[Wx(rR("a",e,t,n),rR("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return Zg((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[fy(rR("x",e,t,n))];case"Acos":return[my(rR("x",e,t,n))];case"Acosh":return[gy(rR("x",e,t,n))];case"Asin":return[ky(rR("x",e,t,n))];case"Asinh":return[Iy(rR("x",e,t,n))];case"Atan":return[Sy(rR("x",e,t,n))];case"Atan2":return[Ny(rR("x",e,t,n),rR("y",e,t,n))];case"Atanh":return[Ey(rR("x",e,t,n))];case"Ceil":return[sb(rR("x",e,t,n))];case"Complex":return[Nf(rR("real",e,t,n),rR("imag",e,t,n))];case"Cos":return[bb(rR("x",e,t,n))];case"Cosh":return[wb(rR("x",e,t,n))];case"Elu":return[Fb(rR("x",e,t,n))];case"Erf":return[Rb(rR("x",e,t,n))];case"Exp":return[Mb(rR("x",e,t,n))];case"Expm1":return[Ob(rR("x",e,t,n))];case"Floor":return[Bb(rR("x",e,t,n))];case"Log":return[Qb(rR("x",e,t,n))];case"Log1p":return[ew(rR("x",e,t,n))];case"Imag":return[Gb(rR("x",e,t,n))];case"Neg":return[uw(rR("x",e,t,n))];case"Reciprocal":return[px(rR("x",e,t,n))];case"Real":return[hx(rR("x",e,t,n))];case"Relu":return[fx(rR("x",e,t,n))];case"Round":return[vx(rR("x",e,t,n))];case"Selu":return[Sx(rR("x",e,t,n))];case"Sigmoid":return[qy(rR("x",e,t,n))];case"Sin":return[Tx(rR("x",e,t,n))];case"Sign":return[_x(rR("x",e,t,n))];case"Sinh":return[Cx(rR("x",e,t,n))];case"Softplus":return[lw(rR("x",e,t,n))];case"Sqrt":return[Bx(rR("x",e,t,n))];case"Square":return[Bw(rR("x",e,t,n))];case"Tanh":return[Xy(rR("x",e,t,n))];case"Tan":return[jx(rR("x",e,t,n))];case"ClipByValue":return[ib(rR("x",e,t,n),rR("clipValueMin",e,t,n),rR("clipValueMax",e,t,n))];case"Relu6":return[mx(rR("x",e,t,n))];case"Rsqrt":return[kx(aR(e.inputNames[0],t,n))];case"Prod":return[nx(rR("x",e,t,n),rR("axes",e,t,n))];case"LeakyRelu":return[Kb(rR("x",e,t,n),rR("alpha",e,t,n))];case"Prelu":return[tx(rR("x",e,t,n),rR("alpha",e,t,n))];case"IsNan":return[qb(aR(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return fM(e,t,n);case"convolution":return Zg((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=rR("stride",e,t,n),a=rR("pad",e,t,n),s=rR("dataFormat",e,t,n).toUpperCase(),i=rR("dilation",e,t,n);return[hb(rR("x",e,t,n),rR("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=rR("strides",e,t,n),a=uR(e,t,n),s=rR("dataFormat",e,t,n).toUpperCase(),i=rR("dilations",e,t,n);return[db(rR("x",e,t,n),rR("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=mM(e,t,n);return[bv.conv2d({x:rR("x",e,t,n),filter:rR("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=mM(e,t,n);return[bv.depthwiseConv2d({x:rR("x",e,t,n),filter:rR("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=rR("outputShape",e,t,n),a=rR("strides",e,t,n),s=uR(e,t,n);return[fb(rR("x",e,t,n),rR("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=rR("strides",e,t,n),a=uR(e,t,n),s=rR("dilations",e,t,n),i=rR("dataFormat",e,t,n).toUpperCase();return[Ib(rR("input",e,t,n),rR("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=rR("strides",e,t,n),a=rR("pad",e,t,n),s=rR("dataFormat",e,t,n).toUpperCase(),i=rR("dilations",e,t,n);return[mb(rR("x",e,t,n),rR("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=rR("strides",e,t,n),a=rR("pad",e,t,n),s=rR("kernelSize",e,t,n);return[Gy(rR("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=rR("strides",e,t,n),a=rR("pad",e,t,n),s=rR("kernelSize",e,t,n);return[Tw(rR("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=rR("strides",e,t,n),a=rR("pad",e,t,n),s=rR("kernelSize",e,t,n),i=rR("includeBatchInIndex",e,t,n),{result:o,indexes:u}=Aw(rR("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=rR("strides",e,t,n),a=rR("pad",e,t,n),s=rR("kernelSize",e,t,n);return[Hy(rR("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=rR("strides",e,t,n),a=rR("pad",e,t,n),s=rR("kernelSize",e,t,n);return[Cw(rR("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=rR("strides",e,t,n),a=rR("pad",e,t,n),s=rR("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[Nb(rR("x",e,t,n),rR("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return Zg((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=rR("shape",e,t,n),a=rR("dtype",e,t,n);return[zb(r,rR("value",e,t,n),a)]}case"LinSpace":return[Zb(rR("start",e,t,n),rR("stop",e,t,n),rR("num",e,t,n))];case"Multinomial":{const r=rR("logits",e,t,n),a=rR("numSamples",e,t,n),s=rR("seed",e,t,n);return[Vw(r,a,s)]}case"OneHot":{const r=rR("indices",e,t,n),a=rR("depth",e,t,n),s=rR("onValue",e,t,n),i=rR("offValue",e,t,n);return[Wm(r,a,s,i)]}case"Ones":return[Mw(rR("shape",e,t,n),rR("dtype",e,t,n))];case"OnesLike":return[Hw(rR("x",e,t,n))];case"RandomUniform":return[cx(rR("shape",e,t,n),rR("minval",e,t,n),rR("maxval",e,t,n),rR("dtype",e,t,n))];case"Range":return[dx(rR("start",e,t,n),rR("stop",e,t,n),rR("step",e,t,n),rR("dtype",e,t,n))];case"TruncatedNormal":{const r=rR("shape",e,t,n),a=rR("mean",e,t,n),s=rR("stdDev",e,t,n),i=rR("seed",e,t,n);return[Qx(r,a,s,rR("dtype",e,t,n),i)]}case"Zeros":return[Rw(rR("shape",e,t,n),rR("dtype",e,t,n))];case"ZerosLike":return[Tb(rR("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=gM(e,t,n),l=await _k.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=gM(e,t,n),u=rR("padToMaxOutputSize",e,t,n),l=await _k.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=gM(e,t,n);return[await _k.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=xm(rR("condition",e,t,n),"bool"),a=[await sv(r)];return r.dispose(),a}case"ListDiff":return Ex(rR("x",e,t,n),rR("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Zg((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=rR("x",e,t,n),a=rR("k",e,t,n),s=rR("sorted",e,t,n),i=Jx(r,a,s);return[i.values,i.indices]}case"Unique":{const r=rR("x",e,t,n),a=ev(r);return[a.values,a.indices]}case"UniqueV2":{const r=rR("x",e,t,n),a=rR("axis",e,t,n),s=ev(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return Zg((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=rR("images",e,t,n),a=rR("size",e,t,n),s=rR("alignCorners",e,t,n),i=rR("halfPixelCenters",e,t,n);return[_k.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=rR("images",e,t,n),a=rR("size",e,t,n),s=rR("alignCorners",e,t,n),i=rR("halfPixelCenters",e,t,n);return[_k.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=rR("image",e,t,n),a=rR("boxes",e,t,n),s=rR("boxInd",e,t,n),i=rR("cropSize",e,t,n),o=rR("method",e,t,n),u=rR("extrapolationValue",e,t,n);return[_k.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return Zg((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=rR("default",e,t,n);return[aR(e.name,t,n)||r];case"Placeholder":return[aR(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[lR(rR("x",e,t,n))];case"IdentityN":return rR("x",e,t,n).map((e=>lR(e)));case"Shape":return[qx(rR("x",e,t,n).shape,"int32")];case"ShapeN":return rR("x",e,t,n).map((e=>qx(e.shape)));case"Size":return[Ix(rR("x",e,t,n).size,"int32")];case"Rank":return[Ix(rR("x",e,t,n).rank,"int32")];case"NoOp":return[Ix(1)];case"Print":const a=rR("x",e,t,n),s=rR("data",e,t,n),i=rR("message",e,t,n),o=rR("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return Zg((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Eb(rR("a",e,t,n),rR("b",e,t,n))];case"NotEqual":return[Gw(rR("a",e,t,n),rR("b",e,t,n))];case"Greater":return[Ub(rR("a",e,t,n),rR("b",e,t,n))];case"GreaterEqual":return[Vb(rR("a",e,t,n),rR("b",e,t,n))];case"Less":return[Xb(rR("a",e,t,n),rR("b",e,t,n))];case"LessEqual":return[Yb(rR("a",e,t,n),rR("b",e,t,n))];case"LogicalAnd":return[Sw(rR("a",e,t,n),rR("b",e,t,n))];case"LogicalNot":return[Nw(rR("a",e,t,n))];case"LogicalOr":return[Ew(rR("a",e,t,n),rR("b",e,t,n))];case"Select":case"SelectV2":return[_b(rR("condition",e,t,n),rR("a",e,t,n),rR("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return Zg((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Bm(rR("a",e,t,n),rR("b",e,t,n),rR("transposeA",e,t,n),rR("transposeB",e,t,n))];case"Einsum":return[$b(rR("equation",e,t,n),...rR("tensors",e,t,n))];case"Transpose":return[Um(rR("x",e,t,n),rR("perm",e,t,n))];case"_FusedMatMul":const[r,a]=rR("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=rR("numArgs",e,t,n),u=rR("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=rR("args",e,t,n);return[bv.matMul({a:rR("a",e,t,n),b:rR("b",e,t,n),transposeA:rR("transposeA",e,t,n),transposeB:rR("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return Zg((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Jy(rR("x",e,t,n),rR("mean",e,t,n),rR("variance",e,t,n),rR("offset",e,t,n),rR("scale",e,t,n),rR("epsilon",e,t,n))];case"LRN":return[Jb(rR("x",e,t,n),rR("radius",e,t,n),rR("bias",e,t,n),rR("alpha",e,t,n),rR("beta",e,t,n))];case"Softmax":return[Mx(rR("x",e,t,n))];case"LogSoftmax":return[fw(rR("x",e,t,n))];case"SparseToDense":return[hv(rR("sparseIndices",e,t,n),rR("outputShape",e,t,n),rR("sparseValues",e,t,n),rR("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return Zg((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=rR("axis",e,t,n),a=rR("keepDims",e,t,n);return[dw(rR("x",e,t,n),r,a)]}case"Mean":{const r=rR("axis",e,t,n),a=rR("keepDims",e,t,n);return[Fw(rR("x",e,t,n),r,a)]}case"Min":{const r=rR("axis",e,t,n),a=rR("keepDims",e,t,n);return[Ow(rR("x",e,t,n),r,a)]}case"Sum":{const r=rR("axis",e,t,n),a=rR("keepDims",e,t,n);return[pw(rR("x",e,t,n),r,a)]}case"All":{const r=rR("axis",e,t,n),a=rR("keepDims",e,t,n);return[by(rR("x",e,t,n),r,a)]}case"Any":{const r=rR("axis",e,t,n),a=rR("keepDims",e,t,n);return[wy(rR("x",e,t,n),r,a)]}case"ArgMax":{const r=rR("axis",e,t,n);return[xy(rR("x",e,t,n),r)]}case"ArgMin":{const r=rR("axis",e,t,n);return[vy(rR("x",e,t,n),r)]}case"Prod":{const r=rR("axis",e,t,n),a=rR("keepDims",e,t,n);return[nx(rR("x",e,t,n),r,a)]}case"Cumsum":{const r=rR("axis",e,t,n),a=rR("exclusive",e,t,n),s=rR("reverse",e,t,n);return[xb(rR("x",e,t,n),r,a,s)]}case"Bincount":const r=rR("x",e,t,n),a=rR("weights",e,t,n),s=rR("size",e,t,n);return[nb(r,a,s)];case"DenseBincount":{const r=rR("x",e,t,n),a=rR("weights",e,t,n),s=rR("size",e,t,n),i=rR("binaryOutput",e,t,n);return[vb(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return Zg((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=rR("n",e,t,n),a=rR("axis",e,t,n);let s=rR("tensors",e,t,n);return s=s.slice(0,r),[jy(s,a)]}case"Gather":{const r=rR("x",e,t,n),a=rR("indices",e,t,n);return[Wb(r,xm(a,"int32"),0)]}case"GatherV2":{const r=rR("axis",e,t,n),a=rR("batchDims",e,t,n),s=rR("x",e,t,n),i=rR("indices",e,t,n);return[Wb(s,xm(i,"int32"),r,a)]}case"Reverse":{const r=rR("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=rR("x",e,t,n);return[gx(s,a)]}case"ReverseV2":{const r=rR("axis",e,t,n),a=rR("x",e,t,n);return[gx(a,r)]}case"Slice":{const r=rR("begin",e,t,n),a=rR("size",e,t,n);return[Ky(rR("x",e,t,n),r,a)]}case"StridedSlice":{const r=rR("begin",e,t,n),a=rR("end",e,t,n),s=rR("strides",e,t,n),i=rR("beginMask",e,t,n),o=rR("endMask",e,t,n),u=rR("ellipsisMask",e,t,n),l=rR("newAxisMask",e,t,n),c=rR("shrinkAxisMask",e,t,n),d=rR("x",e,t,n);return[Hx(d,r,a,s,i,o,u,l,c)]}case"Pack":return Zg((()=>{const r=rR("axis",e,t,n),a=rR("tensors",e,t,n),s=a[0].shape,i=Ux(a[0]).shape,o=a.map((e=>{const t=ap.arraysEqual(e.shape,s);if(!t&&!ap.arraysEqual(Ux(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Vy(e,s)}));return[Vx(o,r)]}));case"Unpack":{const r=rR("axis",e,t,n),a=rR("tensor",e,t,n);return nv(a,r)}case"Tile":{const r=rR("reps",e,t,n);return[Lb(rR("x",e,t,n),r)]}case"Split":case"SplitV":{const r=rR("axis",e,t,n),a=rR("numOrSizeSplits",e,t,n),s=rR("x",e,t,n);return Px(s,a,r)}case"ScatterNd":{const r=rR("indices",e,t,n),a=rR("values",e,t,n),s=rR("shape",e,t,n);return[cv(r,a,s)]}case"GatherNd":{const r=rR("x",e,t,n),a=rR("indices",e,t,n);return[pv(r,a)]}case"SparseToDense":{const r=rR("sparseIndices",e,t,n),a=rR("outputShape",e,t,n),s=rR("sparseValues",e,t,n),i=rR("defaultValue",e,t,n);return[hv(r,s,a,s.dtype===i.dtype?i:xm(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return Zg((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=Ak.sparseFillEmptyRows(rR("indices",e,t,n),rR("values",e,t,n),rR("denseShape",e,t,n),rR("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=Ak.sparseReshape(rR("inputIndices",e,t,n),rR("inputShape",e,t,n),rR("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[Ak.sparseSegmentMean(rR("data",e,t,n),rR("indices",e,t,n),rR("segmentIds",e,t,n))];case"SparseSegmentSum":return[Ak.sparseSegmentSum(rR("data",e,t,n),rR("indices",e,t,n),rR("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return Zg((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Dx(rR("x",e,t,n))];case"IFFT":return[Ox(rR("x",e,t,n))];case"RFFT":return[zx(rR("x",e,t,n))];case"IRFFT":return[Lx(rR("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return Zg((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=$k.stringNGrams(rR("data",e,t,n),rR("dataSplits",e,t,n),rR("separator",e,t,n),rR("nGramWidths",e,t,n),rR("leftPad",e,t,n),rR("rightPad",e,t,n),rR("padWidth",e,t,n),rR("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=$k.stringSplit(rR("input",e,t,n),rR("delimiter",e,t,n),rR("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[$k.stringToHashBucketFast(rR("input",e,t,n),rR("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return Zg((()=>((e,t,n)=>{switch(e.op){case"Cast":return[xm(rR("x",e,t,n),rR("dtype",e,t,n))];case"ExpandDims":{const r=rR("axis",e,t,n);return[Db(rR("x",e,t,n),r)]}case"Squeeze":{const r=rR("axis",e,t,n);return[Ux(rR("x",e,t,n),r)]}case"Reshape":return[Vy(rR("x",e,t,n),rR("shape",e,t,n))];case"MirrorPad":return[Pw(rR("x",e,t,n),rR("padding",e,t,n),rR("mode",e,t,n))];case"PadV2":case"Pad":return[qw(rR("x",e,t,n),rR("padding",e,t,n),rR("constantValue",e,t,n))];case"SpaceToBatchND":{const r=rR("blockShape",e,t,n),a=rR("paddings",e,t,n);return[Jw(rR("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=rR("blockShape",e,t,n),a=rR("crops",e,t,n);return[Zy(rR("x",e,t,n),r,a)]}case"DepthToSpace":{const r=rR("blockSize",e,t,n),a=rR("dataFormat",e,t,n).toUpperCase();return[kb(rR("x",e,t,n),r,a)]}case"BroadcastTo":return[ab(rR("x",e,t,n),rR("shape",e,t,n))];case"BroadcastArgs":return[rb(rR("s0",e,t,n),rR("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return yM(e,t,n,r);case"custom":const a=tR(e.op);if(a&&a.customExecutor)return a.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return aR(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return aR(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return JR(this.node.rawAttrs,e,t);if(null!=n.s)return YR(this.node.rawAttrs,e,t);if(null!=n.b)return ZR(this.node.rawAttrs,e,t);if(null!=n.shape)return aM(this.node.rawAttrs,e,t);if(null!=n.type)return tM(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return sM(this.node.rawAttrs,e,t);if(null!=n.list.s)return iM(this.node.rawAttrs,e,t);if(null!=n.list.shape)return oM(this.node.rawAttrs,e,t);if(null!=n.list.b)return uM(this.node.rawAttrs,e,t);if(null!=n.list.type)return nM(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return ap.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}var wM=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function xM(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>oR(e)[0]));let c=[];null!=r&&(c=r.map((e=>oR(e.name)[0])));const d=[...t];for(;d.length>0;){const e=d.pop();(SM(e)||NM(e)||EM(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),d.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var vM=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],kM=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],IM=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function SM(e){return vM.indexOf(e.op)>=0}function NM(e){return kM.indexOf(e.op)>=0}function EM(e){return IM.indexOf(e.op)>=0}var _M=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new _M(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=xM(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>oR(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[oR(e)[0]])),a=t.map((e=>oR(e)[0]));let s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return Zg((()=>{const n=new wM(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=oR(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=bM(t,r,n,this._resourceManager);if(ap.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>aR(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const s=function(e,t,n){return t[iR(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const n=i[e.id];if(1===n){if(this.keepTensorForDebug){const[n,a]=sR(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Dl().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const s=new wM(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);const i=t.map((e=>aR(e,this.tensorsMap,s))),o=i.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[oR(e)[0]])),i=n.map((e=>oR(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:d}=xM(e,o,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),p=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=oR(t),a=[];a[r]=e[t],p[n]=a}));const f={},m=this.getFrozenTensorIds(p),g={};for(;h.length>0;){const e=this.processStack(s,h,t,p,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!SM(e)&&!aR(e.name,p,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return p}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&rR("isConstant",e.node,r,n)&&([c]=sR(e.node.name,n)),null==r[e.node.name]){const d=bM(e.node,r,n,this._resourceManager);c||([c]=sR(e.node.name,n));const h=n.currentContext;ap.isPromise(d)?l.push(d.then((l=>(r[c]=l,n.currentContext=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=d,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=sR(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!aR(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!aR(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=oR(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));ap.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&ap.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=oR(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=oR(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},TM=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Im.browserHTTPRequest(e,this.loadOptions);else{const t=Im.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(Im.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=Im.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new _M(KR.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=KR.Instance.transformGraph(e.modelInitializer);this.initializer=new _M(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=Im.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Lp||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function CM(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new TM(e,t);return await n.load(),n}var AM="3.13.0",$M={};su($M,{CSVDataset:()=>vD,Dataset:()=>lD,FileDataSource:()=>MD,TextLineDataset:()=>fD,URLDataSource:()=>DD,array:()=>dD,csv:()=>OD,func:()=>LD,generator:()=>PD,microphone:()=>BD,version_data:()=>WD,webcam:()=>zD,zip:()=>hD});var FM=iu(Eu()),RM=iu(Eu());function MM(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(PM(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=MM(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function DM(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(PM(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=DM(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function OM(e){return null===e?null:PM(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function LM(e,t){const n=new Map;MM(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(ap.isPromise(t)){const r=await t;n.set(e,r)}}return MM(e,t,n)}function PM(e){let t=!1;if(Dl().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:n}=_u();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Lp)&&!(e instanceof Promise)&&!t)}function zM(e){return e instanceof Lp?{value:e.clone(),recurse:!1}:PM(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var BM=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},WM=class extends BM{constructor(){super(WM.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function UM(e){return new qM(e)}function VM(e){return new KM(e)}WM.INITIAL_CAPACITY=32;var GM,HM,jM=class{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new tD(this,e)}filter(e){return new QM(this,e)}map(e){return new eD(this,e)}mapAsync(e){return new nD(this,e)}serialMapAsync(e){return new nD(this,e).serial()}flatmap(e){return new aD(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new JM(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:OM;return this.rowMajorBatch(e,t).map((e=>function(e){return DM(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:OM)}(e,n)))}concatenate(e,t){return new sD(UM([this,e]),t)}take(e){return e<0||null==e?this:new ZM(this,e)}skip(e){return e<0||null==e?this:new YM(this,e)}prefetch(e){return new oD(this,e)}shuffle(e,t){return new uD(this,e,t)}serial(){return new XM(this)}},qM=class extends jM{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,MM(t,zM)),done:!1};var t}},KM=class extends jM{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},XM=class extends jM{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},YM=class extends jM{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Jg(e.value)}return this.upstream.next()}},ZM=class extends jM{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},JM=class extends jM{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},QM=class extends jM{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Jg(e.value)}}},eD=class extends jM{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Yp.getTensorsInContainer(e.value),n=this.transform(e.value),r=Yp.getTensorsInContainer(n);for(const e of t)Yp.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},tD=class extends jM{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},nD=class extends jM{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Yp.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Yp.getTensorsInContainer(n);for(const e of t)Yp.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},rD=class extends jM{constructor(){super(),this.outputQueue=new WM,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},aD=class extends rD{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Yp.getTensorsInContainer(e.value),n=this.transform(e.value),r=Yp.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)Yp.isTensorInList(e,r)||e.dispose();return!0}},sD=class extends jM{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};(HM=GM||(GM={}))[HM.FAIL=0]="FAIL",HM[HM.SHORTEST=1]="SHORTEST",HM[HM.LONGEST=2]="LONGEST";var iD=class extends jM{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:GM.FAIL;super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await LM(this.iterators,(function(e){return e instanceof jM?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case GM.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case GM.SHORTEST:return{value:null,done:!0};case GM.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},oD=class extends jM{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new BM(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},uD=class extends oD{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=RM.alea(n||ap.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},lD=class{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let r;return ap.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),cD((async()=>(await n.iterator()).columnMajorBatch(e,t,pD)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,cD((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,cD((async()=>(await t.iterator()).filter((t=>Zg((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return cD((async()=>(await t.iterator()).map((t=>Zg((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return cD((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return cD((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,cD((async()=>{return n=VM((async()=>({value:await t.iterator(),done:!1}))).take(e),new sD(n,undefined);var n}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,cD((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=FM.alea(t||ap.now().toString());return cD((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,cD((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function cD(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends lD{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function dD(e){return cD((async()=>UM(e)),e.length)}function hD(e){if(!PM(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return cD((async()=>function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:GM.FAIL;return new iD(e,t)}(await LM(e,(e=>{if(e instanceof lD)return{value:e.iterator(),recurse:!1};if(PM(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),GM.SHORTEST)),t)}function pD(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Lp||ap.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Lp?Vx(e):_f(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}lD.MAX_BUFFER_SIZE=1e4;var fD=class extends lD{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},mD='"',gD=Symbol("out"),yD=Symbol("field"),bD=Symbol("quote"),wD=Symbol("quoteafterquote"),xD=Symbol("quoteinquote"),vD=class extends lD{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new fD(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(ap.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&ap.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(ap.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o)}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=[];let r=0;const a=e.length;let s=gD;for(let t=0;t<a;t++)switch(s){case gD:switch(e.charAt(t)){case mD:r=t+1,s=bD;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=gD;break;default:s=yD,r=t}break;case yD:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),s=gD,r=t+1);break;case bD:e.charAt(t)===mD&&(s=wD);break;case wD:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=gD,r=t+1;break;case mD:s=bD;break;default:s=xD}break;case xD:e.charAt(t)===mD&&(s=bD)}if(s===wD?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},kD=class extends jM{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(Dl().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new kD(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(ap.sizeFromShape(t));return n.set(e,n.length-e.length),_f(n,t)}},ID=class extends jM{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=qx([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=Kx([r,n,s,a],[1,4])}else this.cropBox=Kx([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(Dl().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new ID(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&ap.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Xm.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Zg((()=>{const t=Db(xm(e,"float32"),0);let n;n=_k.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return Vy(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},SD=class{},ND=class extends jM{split(e){return new ED(this,e)}},ED=class extends ND{constructor(e,t){super(),this.upstream=e,this.impl=new _D(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},_D=class extends rD{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},TD=class extends jM{decodeUTF8(){return new CD(this)}},CD=class extends ND{constructor(e){super(),this.upstream=e,this.impl=new AD(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},AD=class extends rD{constructor(e){if(super(),this.upstream=e,Dl().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=_u();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Dl().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}},$D=class extends TD{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.file=e,this.options=t,ap.assert(e instanceof Uint8Array||!!Dl().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}));return{value:await e,done:!1}}},FD=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function RD(e){return"string"==typeof e&&"file://"===e.substr(0,7)}var MD=class extends SD{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.input=e,this.options=t}async iterator(){if(RD(this.input)&&Dl().get("IS_NODE")){const e=Tu();this.input=e.readFileSync(this.input.substr(7))}return new $D(this.input,this.options)}},DD=class extends SD{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.url=e,this.fileOptions=t}async iterator(){return RD(this.url)?new MD(this.url,this.fileOptions).iterator():async function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2?arguments[2]:void 0;"string"==typeof e?t=e:(t=e.url,n=FD(e));const s=await(a||ap.fetch)(t,n);if(s.ok){const e=new Uint8Array(await s.arrayBuffer());return new $D(e,r)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function OD(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new vD(new DD(e),t)}function LD(e){const t=VM(e);return cD((async()=>t))}function PD(e){return cD((async()=>{const t=await e();return VM((()=>t.next()))}))}async function zD(e,t){return ID.create(e,t)}async function BD(e){return kD.create(e)}var WD="3.13.0";function UD(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ap.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var VD=VI.whereImpl,GD=class extends Ou{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Du(this,Kg())}nextDataId(){return GD.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Dl().get("IS_NODE")&&Gk.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ap.isString(n[0])){const a=n.map((e=>ap.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return Gk.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ap.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return wm(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Kg().makeTensorFromDataId(r,t,n,this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ap.now();return e(),{kernelMs:ap.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){UD([e],"where");const t=this.readSync(e.dataId);return VD(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};GD.nextDataId=0;var HD={};function jD(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}su(HD,{addImpl:()=>iO,bincountImpl:()=>cO,bincountReduceImpl:()=>dO,ceilImpl:()=>mO,concatImpl:()=>bO,equalImpl:()=>wO,expImpl:()=>kO,expm1Impl:()=>NO,floorImpl:()=>TO,gatherNdImpl:()=>$O,gatherV2Impl:()=>FO,greaterEqualImpl:()=>OO,greaterImpl:()=>RO,lessEqualImpl:()=>UO,lessImpl:()=>zO,linSpaceImpl:()=>HO,logImpl:()=>jO,maxImpl:()=>XO,maximumImpl:()=>YO,minimumImpl:()=>QO,multiplyImpl:()=>nL,negImpl:()=>iL,notEqualImpl:()=>uL,prodImpl:()=>fL,rangeImpl:()=>gL,rsqrtImpl:()=>yL,sigmoidImpl:()=>xL,simpleAbsImpl:()=>jD,sliceImpl:()=>IL,sparseFillEmptyRowsImpl:()=>EL,sparseReshapeImpl:()=>_L,sparseSegmentReductionImpl:()=>TL,sqrtImpl:()=>CL,squaredDifferenceImpl:()=>FL,stridedSliceImpl:()=>DL,stringNGramsImpl:()=>OL,stringSplitImpl:()=>PL,stringToHashBucketFastImpl:()=>zL,subImpl:()=>BL,tileImpl:()=>GL,topKImpl:()=>qL,transposeImpl:()=>dL,uniqueImpl:()=>KL});var qD={kernelName:Bl,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;UD(t,"abs");let r=new Float32Array(ap.sizeFromShape(t.shape));return r=jD(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function KD(e){return(t,n,r,a,s)=>{const i=Gk.assertAndGetBroadcastShape(t,n),o=i.length,u=ap.computeStrides(i),l=ap.sizeFromShape(i),c=ap.getTypedArrayFromDType(s,l),d=t.length,h=n.length,p=ap.computeStrides(t),f=ap.computeStrides(n),m=Gk.getBroadcastDims(t,i),g=Gk.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<c.length;++t)c[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<c.length;++t){const n=ap.indexToLoc(t,o,u),s=n.slice(-d);m.forEach((e=>s[e]=0));const i=ap.locToIndex(s,d,p),l=n.slice(-h);g.forEach((e=>l[e]=0));const y=ap.locToIndex(l,h,f);c[t]=e(r[i],a[y])}return[c,i]}}function XD(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var YD={kernelName:hc,backendName:"cpu",kernelFunc:XD};function ZD(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n)return XD({inputs:{real:ZD(e,t,"float32"),imag:ZD(e,t,"float32")},backend:e});const r=ap.makeZerosTypedArray(ap.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function JD(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var QD={kernelName:Qc,backendName:"cpu",kernelFunc:JD};function eO(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var tO={kernelName:Hd,backendName:"cpu",kernelFunc:eO};function nO(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return JD({inputs:{x:a},backend:n});const e=ZD(n,a.shape,a.dtype),t=nO({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=XD({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=eO({inputs:{input:a},backend:n}),t=nO({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!ap.hasEncodingLoss(a.dtype,s)){const e=JD({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=ap.toTypedArray([0],a.dtype),[r,s]=KD(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var rO={kernelName:lc,backendName:"cpu",kernelFunc:nO};function aO(e,t,n,r){return null==n?n=>{let{inputs:a,backend:s}=n;const{a:i,b:o}=a,u=s;UD([i,o],e);const l=u.data.get(i.dataId).values,c=u.data.get(o.dataId).values,d="string"===i.dtype?Gk.fromUint8ToStringArray(l):l,h="string"===i.dtype?Gk.fromUint8ToStringArray(c):c,p=r||i.dtype,[f,m]=t(i.shape,o.shape,d,h,p);return u.makeTensorInfo(m,p,f)}:e=>{let{inputs:a,backend:s}=e;const{a:i,b:o}=a,u=s;if("complex64"===i.dtype||"complex64"===o.dtype){const e=nO({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),t=u.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,s=u.data.get(r.dataId).values,l=u.data.get(a.dataId).values,c=nO({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),d=u.data.get(c.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=u.data.get(h.dataId).values,m=u.data.get(p.dataId).values,[g,y,b]=n(i.shape,o.shape,s,l,f,m),w=u.makeTensorInfo(b,"float32",g),x=u.makeTensorInfo(b,"float32",y),v=XD({inputs:{real:w,imag:x},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(c),u.disposeIntermediateTensorInfo(w),u.disposeIntermediateTensorInfo(x),v}{const e=u.data.get(i.dataId).values,n=u.data.get(o.dataId).values,a=r||i.dtype,[s,l]=t(i.shape,o.shape,e,n,a);return u.makeTensorInfo(l,a,s)}}}function sO(e){return(t,n,r,a,s,i)=>{const o=Gk.assertAndGetBroadcastShape(t,n),u=ap.sizeFromShape(o),l=o.length,c=ap.computeStrides(o),d=ap.getTypedArrayFromDType("float32",u),h=ap.getTypedArrayFromDType("float32",u),p=Gk.getBroadcastDims(t,o),f=Gk.getBroadcastDims(n,o),m=Gk.mergeRealAndImagArrays(r,a),g=Gk.mergeRealAndImagArrays(s,i),y=t.length,b=ap.computeStrides(t),w=n.length,x=ap.computeStrides(n);if(p.length+f.length===0)for(let t=0;t<d.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);d[t]=a.real,h[t]=a.imag}else for(let t=0;t<d.length;t++){const n=ap.indexToLoc(t,l,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const a=ap.locToIndex(r,y,b),s=n.slice(-w);f.forEach((e=>s[e]=0));const i=ap.locToIndex(s,w,x),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);d[t]=o.real,h[t]=o.imag}return[d,h,o]}}var iO=KD(((e,t)=>e+t)),oO=sO(((e,t,n,r)=>({real:e+n,imag:t+r}))),uO=aO(Vl,iO,oO),lO={kernelName:Vl,backendName:"cpu",kernelFunc:uO};function cO(e,t,n,r,a){const s=ap.sizeFromShape(r),i=ap.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function dO(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e.shape[0],s=e.shape[1],i=wm([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function hO(e){return(t,n,r)=>{const a=ap.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function pO(e,t,n){return r=>{let{inputs:a,attrs:s,backend:i}=r;const{x:o}=a;if(UD(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,l=u.data.get(o.dataId).values,c=ap.sizeFromShape(o.shape),d=n||o.dtype,h=ap.getArrayFromDType(d,c);for(let e=0;e<c;++e)h[e]=t(l[e],s);return u.makeTensorInfo(o.shape,d,h)}}function fO(e,t,n){return r=>{let{inputs:a,attrs:s,backend:i}=r;const{x:o}=a;if(UD(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,l=u.data.get(o.dataId).values,c=n||o.dtype,d=t(l,c,s);return u.makeTensorInfo(o.shape,c,d)}}var mO=hO((e=>Math.ceil(e))),gO=fO(cc,mO),yO={kernelName:cc,backendName:"cpu",kernelFunc:gO};function bO(e,t,n,r){const a=ap.getArrayFromDType(n,ap.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=ap.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?Gk.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var wO=KD(((e,t)=>e===t?1:0)),xO=aO(zc,wO,null,"bool"),vO={kernelName:zc,backendName:"cpu",kernelFunc:xO},kO=hO((e=>Math.exp(e))),IO=fO(Bc,kO,"float32"),SO={kernelName:Bc,backendName:"cpu",kernelFunc:IO},NO=hO((e=>Math.expm1(e))),EO=fO(Uc,NO),_O={kernelName:Uc,backendName:"cpu",kernelFunc:EO},TO=hO((e=>Math.floor(e))),CO=fO(jc,TO),AO={kernelName:jc,backendName:"cpu",kernelFunc:CO};function $O(e,t,n,r,a,s,i,o,u){const l=wm([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const s=e[n*a+t];c+=s*i[t],r.push(s)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)l.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return l}function FO(e,t,n){const r=wm(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const u=e.locToIndex(a);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}var RO=KD(((e,t)=>e>t?1:0)),MO=aO(Zc,RO,null,"bool"),DO={kernelName:Zc,backendName:"cpu",kernelFunc:MO},OO=KD(((e,t)=>e>=t?1:0)),LO=aO(Jc,OO,null,"bool"),PO={kernelName:Jc,backendName:"cpu",kernelFunc:LO},zO=KD(((e,t)=>e<t?1:0)),BO=aO(id,zO,null,"bool"),WO={kernelName:id,backendName:"cpu",kernelFunc:BO},UO=KD(((e,t)=>e<=t?1:0)),VO=aO(od,UO,null,"bool"),GO={kernelName:od,backendName:"cpu",kernelFunc:VO};function HO(e,t,n){const r=(t-e)/(n-1),a=ap.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var jO=hO((e=>Math.log(e))),qO=fO(ld,jO),KO={kernelName:ld,backendName:"cpu",kernelFunc:qO};function XO(e,t,n,r){const a=ap.getTypedArrayFromDType(r,ap.sizeFromShape(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}var YO=KD(((e,t)=>Math.max(e,t))),ZO=aO(bd,YO),JO={kernelName:bd,backendName:"cpu",kernelFunc:ZO},QO=KD(((e,t)=>Math.min(e,t))),eL=aO(Ed,QO),tL={kernelName:Ed,backendName:"cpu",kernelFunc:eL},nL=KD(((e,t)=>e*t)),rL=sO(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),aL=aO(Ad,nL,rL),sL={kernelName:Ad,backendName:"cpu",kernelFunc:aL};function iL(e,t,n){const r=ap.createScalarValue(-1,n);return nL([],t,r,e,n)}var oL={kernelName:$d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;UD(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=iL(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},uL=KD(((e,t)=>e!==t?1:0)),lL=aO(Fd,uL,null,"bool"),cL={kernelName:Fd,backendName:"cpu",kernelFunc:lL};function dL(e,t,n,r,a){const s=t.length,i=ap.sizeFromShape(t),o=ap.computeStrides(t),u=ap.computeStrides(a),l=ap.getTypedArrayFromDType(n,ap.sizeFromShape(a));for(let t=0;t<i;++t){const n=ap.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[ap.locToIndex(a,s,u)]=e[t]}return l}function hL(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;UD(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const u=dL(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}var pL={kernelName:Mh,backendName:"cpu",kernelFunc:hL};function fL(e,t,n,r){const[a,s]=Gk.computeOutAndReduceShapes(e,r),i=Jp(t,"int32"),o=ap.makeZerosTypedArray(ap.sizeFromShape(a),i),u=ap.sizeFromShape(s);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var mL={kernelName:Vd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;UD(a,"prod");const o=a.shape.length,u=ap.parseAxisParam(s,a.shape),l=Gk.getAxesPermutation(u,o);let c=u,d=a;const h=[];null!=l&&(d=hL({inputs:{x:a},backend:n,attrs:{perm:l}}),h.push(d),c=Gk.getInnerMostAxes(c.length,o));const p=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=fL(d.shape,d.dtype,p,c);let y=m;return i&&(y=Gk.expandShapeToKeepDim(m,u)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function gL(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return ap.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),s=ap.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var yL=hO((e=>1/Math.sqrt(e))),bL=fO(nh,yL),wL={kernelName:nh,backendName:"cpu",kernelFunc:bL},xL=hO((e=>1/(1+Math.exp(-e)))),vL=pO(ch,(e=>1/(1+Math.exp(-e)))),kL={kernelName:ch,backendName:"cpu",kernelFunc:vL};function IL(e,t,n,r,a){const s=ug.isSliceContinous(r,t,n),i=ap.sizeFromShape(n),o=ap.computeStrides(r);if(s){const n=ug.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=wm(r,a,"string"===a?Gk.fromUint8ToStringArray(e):e),l=wm(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?Gk.fromStringArrayToUint8(l.values):l.values}function SL(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;UD(a,"slice");const[o,u]=ug.parseSliceParams(a,s,i);ug.assertParamsValid(a,o,u);const l=IL(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}var NL={kernelName:ih,backendName:"cpu",kernelFunc:SL};function EL(e,t,n,r,a,s,i){const o=t[0],u=s[0],l=new Array(u),c=new Array(o),d=t[1];if(0===u){if(0!==o)throw new Error(Gk.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[ap.getArrayFromDType(n,0),[0,d],ap.getArrayFromDType(a,0),l,c]}let h=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*d];if(n<0)throw new Error(Gk.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=u)throw new Error(Gk.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,u));++f[n],h=h&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&h){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,d],n,l,c]}{const t=f[u-1],s=ap.getArrayFromDType(n,t*d),h=ap.getArrayFromDType(a,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*d],a=p[n],i=(0===n?0:f[n-1])+a;p[n]++;for(let n=0;n<d;++n)s[i*d+n]=e[t*d+n];h[i]=r[t],c[t]=i}for(let e=0;e<u;++e)if(0===p[e]){const t=0===e?0:f[e-1];s[t*d+0]=e;for(let e=1;e<d;++e)s[t*d+e]=0;h[t]=i}return[s,[t,d],h,l,c]}}function _L(e,t,n,r,a){const s=ap.sizeFromShape(r),i=t[0],o=a.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(Gk.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(Gk.getSparseReshapeNegativeOutputDimErrorMessage(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error(Gk.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(s/l);if(l*e!==s)throw new Error(Gk.getSparseReshapeInputOutputMultipleErrorMessage(r,u));u[c]=e}if(ap.sizeFromShape(u)!==s)throw new Error(Gk.getSparseReshapeInputOutputMismatchErrorMessage(r,u));const d=r.length,h=[];if(d>0){h[d-1]=1;for(let e=d-2;e>=0;--e)h[e]=h[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=ap.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*h[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],u]}function TL(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?a[o-1]+1:0,d=c;if(d<0)throw new Error(Gk.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=d;const p=h.reduce(((e,t)=>e*t),1),f=ap.getArrayFromDType(n,p);if(0===o)return d>0&&f.fill(i),[f,h];if(d<=0)throw new Error(Gk.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=a[m];for(;;){let t=0;if(g<o){if(t=a[g],b===t){++g;continue}if(b>=t)throw new Error(Gk.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=d)throw new Error(Gk.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,d));b>y&&f.fill(i,y*l,b*l);for(let t=m;t<g;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(Gk.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],u[0]));for(let t=0;t<l;t++)f[b*l+t]+=e[n*l+t]}if(s)for(let e=0;e<l;e++)f[b*l+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>o)break}return y<d&&f.fill(i,y*l,d*l),[f,h]}var CL=hO((e=>Math.sqrt(e))),AL=pO(hh,(e=>Math.sqrt(e))),$L={kernelName:hh,backendName:"cpu",kernelFunc:AL},FL=KD(((e,t)=>{const n=e-t;return n*n})),RL=aO(kh,FL),ML={kernelName:kh,backendName:"cpu",kernelFunc:RL};function DL(e,t,n,r){const a=wm(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}function OL(e,t,n,r,a,s,i,o){return new class{constructor(e,t,n,r,a,s){this.separator=ap.encodeString(e),this.nGramWidths=t,this.leftPad=ap.encodeString(n),this.rightPad=ap.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),d=t+(u>0?0:i-o);let h=0;h+=u*this.leftPad.length;for(let t=0;t<c;++t)h+=e[d+t].length;h+=l*this.rightPad.length,h+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(h);const p=n[r+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[d+t]),m(this.separator);if(c>0){m(e[d+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=ap.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const i=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,u,s),a+=u})),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,r,i,a,u,o)}}return[i,s]}}(n,r,a,s,i,o).compute(e,t)}function LL(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function PL(e,t,n){const r=e.length,a=[];let s=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=a.length;LL(e[u],t,n,a);const l=a.length-r;o[u]=l,s+=l,i=Math.max(i,l)}const u=ap.getArrayFromDType("int32",2*s),l=new Array(s),c=[r,i];let d=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*d]=e,u[2*d+1]=t,l[d]=a[d],++d;return[u,l,c]}function zL(e,t){const n=ap.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=ap.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var BL=KD(((e,t)=>e-t)),WL=sO(((e,t,n,r)=>({real:e-n,imag:t-r}))),UL=aO(Th,BL,WL),VL={kernelName:Th,backendName:"cpu",kernelFunc:UL};function GL(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=wm(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}var HL=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function jL(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);jL(e,t,Math.max(n,Math.floor(t-s*o/a+u)),Math.min(r,Math.floor(t+(a-s)*o/a+u)))}const a=e[t];let s=n,i=r;for(ap.swap(e,n,t),HL(e[r],a)>0&&ap.swap(e,n,r);s<i;){for(ap.swap(e,s,i),s++,i--;HL(e[s],a)<0;)s+=1;for(;HL(e[i],a)>0;)i-=1}0===HL(e[n],a)?ap.swap(e,n,i):(i+=1,ap.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function qL(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=ap.getTypedArrayFromDType(n,i*r),l=ap.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o);let i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(jL(i,r),i=i.slice(0,r)),a&&i.sort(HL);const c=t*r,d=u.subarray(c,c+r),h=l.subarray(c,c+r);for(let e=0;e<r;e++)d[e]=i[e].value,h[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[wm(c,n,u),wm(c,"int32",l)]}function KL(e,t,n,r){const a=ap.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),u=new Mp(s,r,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const d=s.slice();d[1]=Object.keys(i).length;const h=new Mp(d,r);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)h.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[a]=d[1],{outputValues:h.values,outputShape:p,indices:o}}oy("cpu",(()=>new GD),1);var XL=pO(Oc,(e=>e>=0?e:Math.exp(e)-1)),YL={kernelName:Oc,backendName:"cpu",kernelFunc:XL};function ZL(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;UD([a],"leakyRelu");const i=ap.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=ap.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}var JL={kernelName:sd,backendName:"cpu",kernelFunc:ZL},QL=KD(((e,t)=>e<0?t*e:e));function eP(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;UD([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=QL(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(u,"float32",o)}var tP={kernelName:Ud,backendName:"cpu",kernelFunc:eP},nP=pO(qd,(e=>Math.max(0,e))),rP={kernelName:qd,backendName:"cpu",kernelFunc:nP},aP=pO(Qd,(e=>Math.min(Math.max(0,e),6))),sP={kernelName:Qd,backendName:"cpu",kernelFunc:aP};function iP(e,t,n,r,a){if("linear"===n)return JD({inputs:{x:t},backend:e});if("relu"===n)return nP({inputs:{x:t},backend:e});if("elu"===n)return XL({inputs:{x:t},backend:e});if("relu6"===n)return aP({inputs:{x:t},backend:e});if("prelu"===n)return eP({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return ZL({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return vL({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function oP(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=ap.sizeFromShape(a.shape),o=ap.inferFromImplicitShape(s,i),u=ap.sizeFromShape(o);ap.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var uP={kernelName:Kd,backendName:"cpu",kernelFunc:oP};function lP(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;UD([a,s],"matMul");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[l-1]:s.shape[l-2],h=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ap.sizeFromShape(f),y=ap.sizeFromShape(m),b=Gm.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,p]);ap.assert(c===d,(()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[y,p,d]:[y,d,p],x=oP({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,h]:[g,h,c]}}),v=oP({inputs:{x:s},backend:n,attrs:{shape:w}}),k=i?x.shape[1]:x.shape[2],I=i?x.shape[2]:x.shape[1],S=o?v.shape[1]:v.shape[2],N=Math.max(g,y),E=n.data.get(x.dataId).values,_=n.data.get(v.dataId).values,T=ap.computeStrides(x.shape),C=ap.computeStrides(v.shape),[A,$,F]=i?[T[0],1,T[1]]:[T[0],T[1],1],[R,M,D]=o?[1,C[1],C[0]]:[C[1],1,C[0]],O=I*S,L=wm([N,I,S],x.dtype),P=L.values,z=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=z)for(let n=0;n<S;n+=z)for(let r=0;r<k;r+=z){const a=Math.min(t+z,I),s=Math.min(n+z,S),i=Math.min(r+z,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,g-1)*A,s=Math.min(e,y-1)*D;n+=E[r+o*$+a*F]*_[a*R+t*M+s]}P[e*O+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}var cP={kernelName:ac,backendName:"cpu",kernelFunc:lP},dP={kernelName:Uh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=lP({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=uO({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),c&&(f=iP(n,h,c,o,d),m.push(h),h=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return h}},hP=pO(Wl,(e=>Math.acos(e))),pP={kernelName:Wl,backendName:"cpu",kernelFunc:hP},fP=pO(Ul,(e=>Math.acosh(e))),mP={kernelName:Ul,backendName:"cpu",kernelFunc:fP},gP={kernelName:Gl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;UD(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=wm(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}},yP={kernelName:Hl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;UD(a,"all");const o=ap.parseAxisParam(s,a.shape);let u=o;const l=Gk.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=hL({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Gk.getInnerMostAxes(u.length,a.shape.length)),Gk.assertAxesAreInnerMostDims("all",u,c.shape.length);const[d,h]=Gk.computeOutAndReduceShapes(c.shape,u),p=ap.sizeFromShape(h),f=ap.makeZerosTypedArray(ap.sizeFromShape(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=oP({inputs:{x:g},backend:n,attrs:{shape:Gk.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},bP={kernelName:jl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;UD(a,"any");const o=ap.parseAxisParam(s,a.shape);let u=o;const l=Gk.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=hL({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Gk.getInnerMostAxes(u.length,a.shape.length)),Gk.assertAxesAreInnerMostDims("any",u,c.shape.length);const[d,h]=Gk.computeOutAndReduceShapes(c.shape,u),p=ap.sizeFromShape(h),f=ap.makeZerosTypedArray(ap.sizeFromShape(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=oP({inputs:{x:g},backend:n,attrs:{shape:Gk.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},wP={kernelName:ql,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;UD(a,"argMax");let i=ap.parseAxisParam(s,a.shape);const o=Gk.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=hL({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Gk.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],Gk.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[c,d]=Gk.computeOutAndReduceShapes(u.shape,i),h=ap.sizeFromShape(c),p=ap.makeZerosTypedArray(h,"int32"),f=ap.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a>n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},xP={kernelName:Kl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;UD(a,"argMin");let i=ap.parseAxisParam(s,a.shape);const o=Gk.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=hL({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Gk.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],Gk.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[c,d]=Gk.computeOutAndReduceShapes(u.shape,i),h=ap.sizeFromShape(c),p=ap.makeZerosTypedArray(h,"int32"),f=ap.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a<n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},vP=pO(Xl,(e=>Math.asin(e))),kP={kernelName:Xl,backendName:"cpu",kernelFunc:vP},IP=pO(Yl,(e=>Math.asinh(e))),SP={kernelName:Yl,backendName:"cpu",kernelFunc:IP},NP=pO(Zl,(e=>Math.atan(e))),EP={kernelName:Zl,backendName:"cpu",kernelFunc:NP},_P=KD(((e,t)=>Math.atan2(e,t))),TP=aO(Ql,_P),CP={kernelName:Ql,backendName:"cpu",kernelFunc:TP},AP=pO(Jl,(e=>Math.atanh(e))),$P={kernelName:Jl,backendName:"cpu",kernelFunc:AP};function FP(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,p=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=wm(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],w=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){const x=y*i-h,v=Math.max(0,x),k=Math.min(a.inHeight,c+x),I=n+y*b;for(let n=0;n<a.outWidth;++n){const i=n*o-p,c=Math.max(0,i),h=Math.min(a.inWidth,d+i);let y=f,b=0,x=0;for(let n=v;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<h;n+=l){const i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,x++)}if(isNaN(y))break}g[I+n*w+t]="avg"===s?b/x:y}}}return m}function RP(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=wm(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=wm(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,d+g);for(let o=0;o<r.outWidth;++o){const d=o*u-f;let p=d;for(;p<0;)p+=c;const w=Math.min(r.inWidth,h+d);let x=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=p;o<w;o+=c){const u=o-d,l=m.get(e,n,o,t);l>x&&(x=l,v=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*h+u)}}i.set(v,e,n,o,t)}}return i}function MP(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=wm(a.outShape,n),x=w.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*v,w=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outDepth;++v){const N=v*i-m;let E=N;for(;E<0;)E+=l;const _=Math.min(a.inDepth,h+N),T=n+v*k;for(let n=0;n<a.outHeight;++n){const i=n*o-g;let h=i;for(;h<0;)h+=c;const m=Math.min(a.inHeight,p+i),v=T+n*I;for(let n=0;n<a.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=d;const p=Math.min(a.inWidth,f+i),g=v+n*S;let k=b,I=0,N=0;for(let n=E;n<_;n+=l){const a=w+n*r[1];for(let n=h;n<m;n+=c){const i=a+n*r[2];for(let n=o;n<p;n+=d){const a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}x[g+t]="avg"===s?I/N:k}}}}return w}var DP={kernelName:ec,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;UD(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;ap.assert(Gk.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Gk.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&ap.arraysEqual(l.inShape,l.outShape))c=JD({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ap.computeStrides(a.shape),r=FP(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},OP={kernelName:nc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;UD(a,"avgPool3d");const c=Gk.computePool3DInfo(a.shape,s,i,1,o,u,l),d=MP(n.data.get(a.dataId).values,a.shape,a.dtype,ap.computeStrides(a.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}},LP={kernelName:rc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;UD([a,s],"avgPool3DGrad");const c=Gk.computePool3DInfo(s.shape,i,o,1,u,l),d=c.strideDepth,h=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,w=c.dilationWidth,x=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=x-1-c.padInfo.front,S=k-1-c.padInfo.left,N=v-1-c.padInfo.top,E=wm(s.shape,"float32"),_=1/(f*m*g),T=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-I,i=r-N,o=a-S;let u=0;for(let n=0;n<x;n+=y){const r=(s+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=b){const a=(i+n)/h;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=w){const s=(o+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(u+=T.get(e,r,a,s,t))}}}E.set(u*_,e,n,r,a,t)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}},PP={kernelName:tc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;UD([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Gk.computePool2DInfo(i.shape,o,u,1,l),d=c.strideHeight,h=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=b-1-c.padInfo.left,x=y-1-c.padInfo.top,v=wm(i.shape,"float32"),k=1/(p*f),I=n.data.get(a.dataId).values,S=wm(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-x,s=r-w;let i=0;for(let n=0;n<y;n+=m){const r=(a+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const a=(s+n)/h;a<0||a>=c.outWidth||Math.floor(a)!==a||(i+=S.get(e,r,a,t))}}v.set(i*k,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},zP={kernelName:Kc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;ap.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ap.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ap.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),UD([a,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(u.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=h.length,w=d.length;let x=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[x++]+(c[e]-d[v++])*p[k++]/Math.sqrt(h[I++]+l),x>=g&&(x=0),v>=w&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}},BP={kernelName:sc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;UD([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=Gk.getReshaped(a.shape,s,o),l=Gk.getPermuted(u.length,s.length),c=Gk.getReshapedPermuted(a.shape,s,o),d=Gk.getSliceBeginCoords(i,s.length),h=Gk.getSliceSize(c,i,s.length),p=oP({inputs:{x:a},backend:n,attrs:{shape:u}}),f=hL({inputs:{x:p},backend:n,attrs:{perm:l}}),m=oP({inputs:{x:f},backend:n,attrs:{shape:c}}),g=SL({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},WP={kernelName:ic,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=cO(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},UP={kernelName:uc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=Gk.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},VP=pO(dc,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),GP={kernelName:dc,backendName:"cpu",kernelFunc:VP},HP={kernelName:pc,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(ap.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function jP(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var qP={kernelName:td,backendName:"cpu",kernelFunc:jP};function KP(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ap.parseAxisParam(a,t[0].shape)[0];let i=Gk.computeOutShape(t.map((e=>e.shape)),s);if(0===ap.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>ap.sizeFromShape(e.shape)>0));if(1===o.length)return JD({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));if(Gk.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const e=o.map((e=>eO({inputs:{input:e},backend:n}))),t=o.map((e=>jP({inputs:{input:e},backend:n}))),r=KP({inputs:e,backend:n,attrs:{axis:s}}),a=KP({inputs:t,backend:n,attrs:{axis:s}}),i=XD({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const l=o.map((e=>{const t=ap.sizeFromShape(e.shape.slice(s));return oP({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Gk.computeOutShape(l.map((e=>e.shape)),1);const d=1===l[0].shape[0],h=bO(c,i,t[0].dtype,d),p=Gk.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(p,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var XP={kernelName:fc,backendName:"cpu",kernelFunc:KP};function YP(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;UD([a,s],"conv2d");const d=Gk.convertConv2DDataFormat(u),h=Gk.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,w="channelsLast"===h.dataFormat,x=new Mp(h.outShape,a.dtype),v=ap.computeStrides(a.shape),k=ap.computeStrides(s.shape),I=v[0],S=w?v[1]:v[2],N=w?v[2]:1,E=w?1:v[1],_=x.strides[0],T=w?x.strides[1]:x.strides[2],C=w?x.strides[2]:1,A=w?1:x.strides[1],$=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=x.values;for(let e=0;e<h.batchSize;++e){const t=e*I,n=e*_;for(let e=0;e<h.outHeight;++e){const r=n+e*T,a=e*h.strideHeight-b;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=h.inHeight)continue;const s=e*k[0],i=t+n*S;for(let e=0;e<h.outWidth;++e){const t=r+e*C,n=e*h.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=h.inWidth)continue;const a=i+r*N;let o=s+e*k[1];for(let e=0;e<h.inChannels;++e){const n=$[a+e*E];for(let e=0;e<h.outChannels;++e)R[t+e*A]+=n*F[o+e];o+=h.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,R)}var ZP={kernelName:mc,backendName:"cpu",kernelFunc:YP},JP={kernelName:gc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;UD([a,s],"conv2dBackpropFilter");const d=Gk.convertConv2DDataFormat(u),h=Gk.computeConv2DInfo(a.shape,c,i,1,o,l,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y="channelsLast"===h.dataFormat,b=new Mp(h.filterShape,"float32"),w=h.padInfo.left,x=h.padInfo.top,v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new Mp(a.shape,a.dtype,v),S=new Mp(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/p)),n=Math.min(h.outHeight,(h.inHeight+x-e)/p);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((w-r)/f)),s=Math.min(h.outWidth,(h.inWidth+w-r)/f);for(let i=0;i<h.inChannels;++i)for(let o=0;o<h.outChannels;++o){let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-x;for(let e=a;e<s;++e){const n=r+e*f-w;u+=y?I.get(l,t,n,i)*S.get(l,c,e,o):I.get(l,i,t,n)*S.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},QP={kernelName:yc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;UD([a,s],"conv2dBackpropInput");const d=ap.computeStrides(s.shape),h=ap.computeStrides(a.shape);let p=Gk.convertConv2DDataFormat(l);const f=Gk.computeConv2DInfo(i,s.shape,o,1,u,c,!1,p),m=new Mp(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[w,x,v]=d,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:E,inWidth:_,outChannels:T,outHeight:C,outWidth:A,strideHeight:$,strideWidth:F}=f;p=f.dataFormat;const R=I-1-f.padInfo.top,M=S-1-f.padInfo.left,D="channelsLast"===p,O=m.strides[0],L=D?m.strides[1]:m.strides[2],P=D?m.strides[2]:1,z=D?1:m.strides[1],B=h[0],W=D?h[1]:h[2],U=D?h[2]:1,V=D?1:h[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<E;++n){const r=n-R,a=Math.max(0,Math.ceil(r/$)),s=Math.min(C,(I+r)/$);for(let i=0;i<_;++i){const o=i-M,u=Math.max(0,Math.ceil(o/F)),l=Math.min(A,(S+o)/F);let c=0;for(let n=a;n<s;++n){const a=n*$-r;for(let r=u;r<l;++r){const s=B*e+W*n+U*r,i=w*(I-1-a)+x*(S-1-(r*F-o))+v*t;for(let e=0;e<T;++e)c+=y[s+V*e]*b[i+e]}}g[O*e+L*n+P*i+z*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},ez={kernelName:bc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;UD([a,s],"conv3d");const l=Gk.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,w=g.top,x=new Mp(l.outShape,a.dtype),v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=x.values,S=ap.computeStrides(a.shape),N=ap.computeStrides(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*S[0],n=e*x.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*x.strides[1],a=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=a+e*p;if(n<0||n>=l.inDepth)continue;const s=e*N[0],i=t+n*S[1];for(let e=0;e<l.outHeight;++e){const t=r+e*x.strides[2],n=e*l.strideHeight-w;for(let e=0;e<d;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=s+e*N[1],o=i+r*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<h;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const s=a+e*N[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=v[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},tz={kernelName:wc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;UD([a,s],"conv3dBackpropFilterV2");const l=ap.computeStrides(a.shape),c=ap.computeStrides(s.shape),d=Gk.computeConv3DInfo(a.shape,u,i,1,o),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new Mp(d.filterShape,"float32"),w=b.values,[x,v,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,E,_,T]=c,C=n.data.get(a.dataId).values,[A,$,F,R]=l,M=d.padInfo.front,D=d.padInfo.left,O=d.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((M-e)/h)),n=Math.min(d.outDepth,(d.inDepth+M-e)/h),r=e*x;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((O-a)/p)),i=Math.min(d.outHeight,(d.inHeight+O-a)/p),o=a*v+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((D-r)/f)),l=Math.min(d.outWidth,(d.inWidth+D-r)/f),c=r*k+o;for(let o=0;o<d.inChannels;++o){const m=o*I+c;for(let c=0;c<d.outChannels;++c){let g=0;for(let m=0;m<d.batchSize;++m){const d=m*A,y=m*N;for(let m=t;m<n;++m){const t=(e+m*h-M)*$+d,n=m*E+y;for(let e=s;e<i;++e){const s=(a+e*p-O)*F+t,i=e*_+n;for(let e=u;e<l;++e){const t=e*T+i;g+=C[(r+e*f-D)*R+s+o]*S[t+c]}}}}w[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},nz={kernelName:xc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;UD([a],"conv3dBackpropInputV2");const l=ap.computeStrides(a.shape),c=ap.computeStrides(s.shape),d=Gk.computeConv3DInfo(u,s.shape,o,1,i),h=new Mp(d.inShape,"float32"),p=h.values,[f,m,g,y]=h.strides,b=n.data.get(a.dataId).values,[w,x,v,k]=l,I=n.data.get(s.dataId).values,[S,N,E,_]=c,{batchSize:T,filterDepth:C,filterHeight:A,filterWidth:$,inChannels:F,inDepth:R,inHeight:M,inWidth:D,outChannels:O,outDepth:L,outHeight:P,outWidth:z,strideDepth:B,strideHeight:W,strideWidth:U}=d,V=C-1-d.padInfo.front,G=A-1-d.padInfo.top,H=$-1-d.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){const r=n-V,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(C+r)/B);for(let i=0;i<M;++i){const o=i-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(P,(A+o)/W);for(let c=0;c<D;++c){const d=c-H,h=Math.max(0,Math.ceil(d/U)),T=Math.min(z,($+d)/U);let F=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=u;r<l;++r){const s=r*W-o;for(let i=h;i<T;++i){const o=w*e+x*n+v*r+k*i,u=S*(C-1-a)+N*(A-1-s)+E*($-1-(i*U-d))+_*t;for(let e=0;e<O;++e)F+=b[o+e]*I[u+e]}}}p[f*e+m*n+g*i+y*c+t]=F}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},rz=pO(vc,(e=>Math.cos(e))),az={kernelName:vc,backendName:"cpu",kernelFunc:rz},sz=pO(kc,(e=>Math.cosh(e))),iz={kernelName:kc,backendName:"cpu",kernelFunc:sz},oz={kernelName:Sc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,d,h,p]=a.shape,f=s.shape[0],[m,g]=o,y=wm([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,w=n.data.get(i.dataId).values,x=n.data.get(a.dataId).values,v=ap.computeStrides(a.shape),k=ap.computeStrides(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=w[e];if(i>=c)continue;const o=m>1?(a-n)*(d-1)/(m-1):0,f=g>1?(s-r)*(h-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(d-1)+t*o:.5*(n+a)*(d-1);if(c<0||c>d-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}else if("bilinear"===u){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(h-1)+u*f:.5*(r+s)*(h-1);if(c<0||c>h-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const d=Math.floor(c),m=Math.ceil(c),b=c-d;for(let r=0;r<p;r++){let s=r+d*v[2]+n*v[1]+i*v[0];const l=x[s];s=r+m*v[2]+n*v[1]+i*v[0];const c=x[s];s=r+d*v[2]+a*v[1]+i*v[0];const h=x[s];s=r+m*v[2]+a*v[1]+i*v[0];const p=l+(c-l)*b,f=h+(x[s]-h)*b;s=r+u*k[2]+t*k[1]+e*k[0],y.values[s]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(h-1)+n*f:.5*(r+s)*(h-1);if(a<0||a>h-1){for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}continue}const o=Math.round(a),u=Math.round(c);for(let r=0;r<p;r++){const a=r+o*v[2]+u*v[1]+i*v[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=x[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},uz={kernelName:Ic,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;UD(a,"cumsum");const u=Gk.getAxesPermutation([s],a.shape.length);let l=a;null!=u&&(l=hL({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=Gk.getInnerMostAxes(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const d=Jp(l.dtype,"int32"),h=ap.makeZerosTypedArray(ap.sizeFromShape(l.shape),d),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)h[n]=i?0:p[n];else{const r=m(e,t-1);h[n]=i?p[r]+h[r]:p[n]+h[r]}}const g=n.makeTensorInfo(l.shape,d,h);if(null!=u){const e=hL({inputs:{x:g},backend:n,attrs:{perm:Gk.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},lz={kernelName:Nc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=cO(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=dO(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},cz={kernelName:Ec,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;ap.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],d=u*s,h=l*s,p=c/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*d*h*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<d;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<h;++t){const a=Math.floor(t/s),i=(r*s+t%s)*p;for(let t=0;t<p;++t){const r=t+i+c*(a+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,d,h,p],a.dtype,m)}};function dz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;UD([a,s],"depthwiseConv2DNative");const c=ap.computeStrides(a.shape),d=ap.computeStrides(s.shape);let h=u;null==h&&(h=[1,1]),ap.assert(Gk.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));const p=Gk.computeConv2DInfo(a.shape,s.shape,i,h,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,w=b.left,x=b.top,v=p.outChannels/p.inChannels,k=new Mp(p.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],a=e*p.strideHeight-x;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=p.inHeight)continue;const s=e*d[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-w;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const a=s+e*d[1],o=i+r*p.inChannels;let u=t,l=a;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)N[u+e]+=t*S[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var hz={kernelName:_c,backendName:"cpu",kernelFunc:dz},pz={kernelName:Tc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;UD([a,s],"depthwiseConv2dNativeBackpropFilter");const d=Gk.computeConv2DInfo(a.shape,c,i,o,u,l,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new Mp(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,w=d.outChannels/d.inChannels,x=n.data.get(a.dataId).values,v=new Mp(a.shape,a.dtype,x),k=n.data.get(s.dataId).values,I=new Mp(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/h)),n=Math.min(d.outHeight,(d.inHeight+b-e)/h);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/p)),s=Math.min(d.outWidth,(d.inWidth+y-r)/p);for(let i=0;i<d.outChannels;++i){const o=Math.trunc(i/w),u=i%w;let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*h-b;for(let e=a;e<s;++e){const n=r+e*p-y;l+=v.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},fz={kernelName:Cc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;UD([a,s],"depthwiseConv2DNativeBackpropInput");const d=ap.computeStrides(a.shape),h=ap.computeStrides(s.shape),p=Gk.computeConv2DInfo(c,s.shape,i,o,u,l,!0),f=new Mp(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,w=n.data.get(a.dataId).values,[x,v,k]=d,I=n.data.get(s.dataId).values,[S,N,E]=h,{batchSize:_,filterHeight:T,filterWidth:C,inChannels:A,inHeight:$,inWidth:F,outChannels:R,outHeight:M,outWidth:D,strideHeight:O,strideWidth:L}=p,P=T-1-p.padInfo.top,z=C-1-p.padInfo.left,B=R/A;for(let e=0;e<_;++e)for(let t=0;t<A;++t)for(let n=0;n<$;++n){const r=n-P,a=Math.max(0,Math.ceil(r/O)),s=Math.min(M,(T+r)/O);for(let i=0;i<F;++i){const o=i-z,u=Math.max(0,Math.ceil(o/L)),l=Math.min(D,(C+o)/L);let c=0;for(let n=a;n<s;++n){const a=n*O-r;for(let r=u;r<l;++r){const s=x*e+v*n+k*r,i=S*(T-1-a)+N*(C-1-(r*L-o))+E*t;for(let e=0;e<B;++e)c+=w[s+(t*B+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},mz={kernelName:Ac,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=ap.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=wm([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},gz={kernelName:$c,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=n,c=l.data.get(a.dataId).values,d=a.shape.length,h=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:w,padInfo:x,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:E,outShape:_}=Gk.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u),T=ap.sizeFromShape(_),C=_.length,A=ap.getArrayFromDType(a.dtype,T);for(let e=0;e<f;++e)for(let t=0;t<b;++t){const n=t*v-x.top;for(let r=0;r<w;++r){const i=r*k-x.left;for(let o=0;o<y;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const r=n+t*N;if(r>=0&&r<m)for(let n=0;n<S;++n){const l=i+n*E;if(l>=0&&l<g){const i=ap.locToIndex([e,r,l,o],d,ap.computeStrides(a.shape)),f=ap.locToIndex([t,n,o],p,ap.computeStrides(s.shape)),m=c[i]+h[f];m>u&&(u=m)}}}A[ap.locToIndex([e,t,r,o],C,ap.computeStrides(_))]=u}}}return{dataId:l.write(ap.toTypedArray(A,a.dtype),_,a.dtype),shape:_,dtype:a.dtype}}},yz={kernelName:Rc,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a,filter:s,dy:i}=t,{strides:o,pad:u,dilations:l}=r,c=n,d=ap.toNestedArray(a.shape,c.data.get(a.dataId).values),h=ap.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:w,strideHeight:x,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:E}=Gk.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",l);ap.assert(i.rank===E.length,(()=>`Error in ${Rc}, dy must have the same rank as output ${E.length}, but got ${i.rank}`));const _=ap.toNestedArray(E,c.data.get(i.dataId).values),T=ap.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*x-w.top;for(let r=0;r<b;++r){const a=r*v-w.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<k;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const l=a+n*N;if(l>=0&&l<m){const a=d[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=t,u=n)}}}T[o][u][s]+=_[e][t][r][s]}}}return{dataId:c.write(ap.toTypedArray(T,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},bz={kernelName:Fc,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a,filter:s,dy:i}=t,{strides:o,pad:u,dilations:l}=r,c=n,d=ap.toNestedArray(a.shape,c.data.get(a.dataId).values),h=ap.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:w,strideHeight:x,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:E}=Gk.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",l);ap.assert(i.rank===E.length,(()=>`Error in ${Fc}, dy must have the same rank as output ${E.length}, but got ${i.rank}`));const _=ap.toNestedArray(E,c.data.get(i.dataId).values),T=ap.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*x-w.top;for(let r=0;r<b;++r){const a=r*v-w.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<k;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const l=a+n*N;if(l>=0&&l<m){const a=d[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=r,u=l)}}}T[e][o][u][s]+=_[e][t][r][s]}}}return{dataId:c.write(ap.toTypedArray(T,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};function wz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;UD(a,"sum"),o="bool"===a.dtype?nO({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):JD({inputs:{x:a},backend:n});const u=o.shape.length,l=ap.parseAxisParam(s,o.shape),c=Gk.getAxesPermutation(l,u);let d=l,h=o;null!=c&&(h=hL({inputs:{x:o},backend:n,attrs:{perm:c}}),d=Gk.getInnerMostAxes(d.length,u)),Gk.assertAxesAreInnerMostDims("sum",d,h.shape.length);const[p,f]=Gk.computeOutAndReduceShapes(h.shape,d);let m=ZD(n,p,Gk.upcastType(h.dtype,"int32"));const g=ap.sizeFromShape(f),y=n.data.get(m.dataId).values,b=n.data.get(h.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=oP({inputs:{x:m},backend:n,attrs:{shape:Gk.expandShapeToKeepDim(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(h),m}var xz={kernelName:ph,backendName:"cpu",kernelFunc:wz},vz={kernelName:Dc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=Gk.decodeEinsumEquation(a,s.length);Gk.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:c}=Gk.getEinsumComputePath(o,u),d=c.length;let h=null,p=i.length;const f=[];for(let e=0;e<d;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Gk.getEinsumPermutation(p,u[t]);let a;Gk.isIdentityPermutation(e)?a=s[t]:(a=hL({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);ap.arraysEqual(a.shape,i)||(a=oP({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===h?h=a:(h=aL({inputs:{a,b:h},backend:n}),f.push(h))}e<d-1&&(l[e]>=0&&(h=wz({inputs:{x:h},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},kz={kernelName:Lc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;UD([r,a],"eluGrad");const s=new Float32Array(ap.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},Iz=Gk.ERF_P,Sz=Gk.ERF_A1,Nz=Gk.ERF_A2,Ez=Gk.ERF_A3,_z=Gk.ERF_A4,Tz=Gk.ERF_A5,Cz=pO(Pc,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Iz*n);return t*(1-((((Tz*r+_z)*r+Ez)*r+Nz)*r+Sz)*r*Math.exp(-n*n))})),Az={kernelName:Pc,backendName:"cpu",kernelFunc:Cz};function $z(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(ap.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),oP({inputs:{x:a},backend:n,attrs:{shape:o}})}var Fz={kernelName:Wc,backendName:"cpu",kernelFunc:$z},Rz=KD(((e,t)=>e/t)),Mz=aO(Mc,Rz),Dz={kernelName:Mc,backendName:"cpu",kernelFunc:Mz};function Oz(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[a,s],c=ap.sizeFromShape(l),d=ap.getTypedArrayFromDType("float32",c),h=ap.getTypedArrayFromDType("float32",c);for(let e=0;e<a;e++){const r=SL({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=SL({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=XD({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=Lz(i,t,n),p=Gk.mergeRealAndImagArrays(l,c);for(let t=0;t<s;t++){const n=Gk.getComplexWithIndex(p,t);d[e*s+t]=n.real,h[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(l,"float32",d),f=n.makeTensorInfo(l,"float32",h),m=XD({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function Lz(e,t,n){const r=ap.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=Pz(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",ap.createScalarValue(r,"float32")),i=JD({inputs:{x:s},backend:n}),u=Dz.kernelFunc({inputs:{a:e,b:s},backend:n}),l=Dz.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,d=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:d}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=Gk.exponent(a*r,t,n),u=Gk.getComplexWithIndex(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),Gk.assignToTypedArray(r,s,i,a)}return r}(Gk.mergeRealAndImagArrays(s,i),r,t);return Gk.splitRealAndImagArrays(e)}var o}function Pz(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=Gk.mergeRealAndImagArrays(e,t),i=n/2,o=Gk.complexWithEvenIndex(s),u=o.real,l=o.imag,c=[u.length],d=a.makeTensorInfo(c,"float32",u),h=a.makeTensorInfo(c,"float32",l),p=XD({inputs:{real:d,imag:h},backend:a}),f=Gk.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),w=a.makeTensorInfo(y,"float32",g),x=XD({inputs:{real:b,imag:w},backend:a}),v=Pz(u,l,i,r,a),k=v.real,I=v.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),E=a.makeTensorInfo(S,"float32",I),_=XD({inputs:{real:N,imag:E},backend:a}),T=Pz(m,g,i,r,a),C=T.real,A=T.imag,$=[C.length],F=a.makeTensorInfo($,"float32",C),R=a.makeTensorInfo($,"float32",A),M=XD({inputs:{real:F,imag:R},backend:a}),D=Gk.exponents(n,r),O=[D.real.length],L=a.makeTensorInfo(O,"float32",D.real),P=a.makeTensorInfo(O,"float32",D.imag),z=XD({inputs:{real:L,imag:P},backend:a}),B=aL({inputs:{a:z,b:M},backend:a}),W=uO({inputs:{a:_,b:B},backend:a}),U=UL({inputs:{a:_,b:B},backend:a}),V=eO({inputs:{input:W},backend:a}),G=eO({inputs:{input:U},backend:a}),H=jP({inputs:{input:W},backend:a}),j=jP({inputs:{input:U},backend:a}),q=KP({inputs:[V,G],backend:a,attrs:{axis:0}}),K=KP({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(M),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var zz={kernelName:Vc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=ap.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=oP({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Oz(i,!1,n),u=oP({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function Bz(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||ap.inferDtype(a),o=ap.getArrayFromDType(i,ap.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var Wz={kernelName:Gc,backendName:"cpu",kernelFunc:Bz},Uz={kernelName:Hc,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:a}=t,s=r,i=ap.getTypedArrayFromDType(a.dtype,ap.sizeFromShape(a.shape)),[o,u,l,c]=a.shape,d=s.data.get(a.dataId).values;for(let e=0;e<o;e++){const t=e*l*u*c;for(let e=0;e<u;e++){const n=e*(l*c);for(let e=0;e<l;e++){const r=e*c;for(let a=0;a<c;a++){const s=Math.round(l-e-1),o=t+n+r+a;let u=d[o];s>=0&&s<l&&(u=d[t+n+s*c+a]),i[o]=u}}}}return{dataId:s.write(i,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Vz=KD(((e,t)=>Math.floor(e/t))),Gz=aO(qc,Vz,null,"int32"),Hz={kernelName:qc,backendName:"cpu",kernelFunc:Gz},jz={kernelName:Vh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=YP({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=uO({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=iP(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},qz={kernelName:Gh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=dz({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=uO({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=iP(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},Kz={kernelName:Yc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=ap.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,l,c,d]=Gk.prepareAndValidate(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const h=$O(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,l,o,c,d,r.shape,s);return n.makeTensorInfo(u,r.dtype,h.values)}},Xz={kernelName:Xc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;UD([a,s],"gatherV2");const u=ap.parseAxisParam(i,a.shape)[0],l=n.data.get(s.dataId).values,c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];ap.assert(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let d=o;null==o&&(d=0);const h=ap.sizeFromShape(s.shape),p=Gk.segment_util.collectGatherOpShapeInfo(a,s,u,d),f=oP({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=oP({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=FO(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},Yz={kernelName:ed,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=ap.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=oP({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Oz(i,!0,n),u=oP({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Zz=pO(nd,(e=>Number.isFinite(e)?1:0),"bool"),Jz={kernelName:nd,backendName:"cpu",kernelFunc:Zz},Qz=pO(rd,(e=>Math.abs(e)===1/0?1:0),"bool"),eB={kernelName:rd,backendName:"cpu",kernelFunc:Qz},tB=pO(ad,(e=>Number.isNaN(e)?1:0),"bool"),nB={kernelName:ad,backendName:"cpu",kernelFunc:tB},rB={kernelName:ud,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=HO(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},aB=pO(cd,(e=>Math.log1p(e))),sB={kernelName:cd,backendName:"cpu",kernelFunc:aB},iB=KD(((e,t)=>e&&t)),oB=aO(dd,iB,null,"bool"),uB={kernelName:dd,backendName:"cpu",kernelFunc:oB},lB=pO(hd,(e=>e?0:1),"bool"),cB={kernelName:hd,backendName:"cpu",kernelFunc:lB},dB=KD(((e,t)=>e||t)),hB=aO(pd,dB,null,"bool"),pB={kernelName:pd,backendName:"cpu",kernelFunc:hB},fB={kernelName:md,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;UD(a,"LRN");const l=a.shape[3],c=l-1,d=n.data.get(a.dataId).values,h=ap.sizeFromShape(a.shape),p=new Float32Array(h);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let a=0;for(;n<=r;n++){const e=d[n];a+=e*e}return a}for(let e=0;e<h;e++){const t=f(e),n=d[e]*Math.pow(i+o*t,-u);p[e]=n}return n.makeTensorInfo(a.shape,a.dtype,p)}},mB={kernelName:gd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;UD(i,"LRNGrad");const d=ap.sizeFromShape(i.shape),h=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(d),y=d;for(let e=0;e<y;e++){const t=e%h,n=e-t+Math.max(0,t-o),r=e-t+Math.min(h,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function gB(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const l=u.length,c=ap.parseAxisParam(s,u);let d=c;const h=Gk.getAxesPermutation(d,l);let p=o.data.get(a.dataId).values;if(null!=h){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[h[t]];p=dL(p,u,a.dtype,h,e),d=Gk.getInnerMostAxes(d.length,l),u=e}UD(a,"max"),Gk.assertAxesAreInnerMostDims("max",d,l);const[f,m]=Gk.computeOutAndReduceShapes(u,d),g=XO(p,ap.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype);let b=f;return i&&(b=Gk.expandShapeToKeepDim(f,c)),{dataId:y,shape:b,dtype:a.dtype}}var yB={kernelName:yd,backendName:"cpu",kernelFunc:gB},bB={kernelName:wd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;UD(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;ap.assert(Gk.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Gk.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&ap.arraysEqual(l.inShape,l.outShape))c=JD({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ap.computeStrides(a.shape),r=FP(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},wB={kernelName:vd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;UD(a,"maxPool3d");const c=Gk.computePool3DInfo(a.shape,s,i,1,o,u,l),d=MP(n.data.get(a.dataId).values,a.shape,a.dtype,ap.computeStrides(a.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}},xB={kernelName:kd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;UD([a,s],"maxPool3DGrad");const c=Gk.computePool3DInfo(s.shape,i,o,1,u,l),d=function(e,t){const n=wm(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-h;let w=b;for(;w<0;)w+=i;const x=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*a-p;let h=l;for(;h<0;)h+=o;const v=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const p=a*s-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,d+p);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=w;t<x;t+=i){const n=t-b;for(let r=h;r<v;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-p,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*c*d+a*c+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),c),h=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,w=c.effectiveFilterHeight,x=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=x-1-c.padInfo.left,I=w-1-c.padInfo.top,S=wm(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-v,i=r-I,o=a-k;let u=0;for(let n=0;n<b;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<w;a+=g){const s=(i+a)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<x;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const h=b*w*x-1-d.get(e,r,s,l,t)===n*w*x+a*x+i?1:0;0!==h&&(u+=N.get(e,r,s,l,t)*h)}}}S.set(u,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},vB={kernelName:xd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;UD([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=Gk.computePool2DInfo(o.shape,u,l,1,c,d),p=n.data.get(o.dataId).values,f=wm(h.outShape,o.dtype,RP(p,o.shape,o.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,w=h.effectiveFilterHeight,x=h.effectiveFilterWidth,v=x-1-h.padInfo.left,k=w-1-h.padInfo.top,I=wm(o.shape,"float32"),S=n.data.get(a.dataId).values,N=wm(a.shape,"float32",S);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const a=n-k,s=r-v;let i=0;for(let n=0;n<w;n+=y){const r=(a+n)/m;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let a=0;a<x;a+=b){const o=(s+a)/g;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;const u=w*x-1-f.get(e,r,o,t)===n*x+a?1:0;0!==u&&(i+=N.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},kB={kernelName:Id,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=n,l=r;UD(a,"MaxPoolWithArgmax");const c=l.data.get(a.dataId).values,d=Gk.computePool2DInfo(a.shape,s,i,[1,1],o),[h,p]=function(e,t,n,r,a){const s=FP(e,0,n,ap.computeStrides(t),a,"max"),i=RP(e,t,n,a,!0,r);return[s.values,i.values]}(c,a.shape,a.dtype,u,d),f=l.write(h,d.outShape,a.dtype),m=l.write(p,d.outShape,a.dtype);return[{dataId:f,shape:d.outShape,dtype:a.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}},IB={kernelName:Sd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=ap.parseAxisParam(s,a.shape),u=Gk.computeOutAndReduceShapes(a.shape,o)[1],l=ap.sizeFromShape(u),c=[],d=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(d);const h=nO({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});c.push(h);const p=Mz({inputs:{a:h,b:d},backend:n});c.push(p);const f=wz({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},SB={kernelName:Nd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;UD(a,"min");const o=ap.parseAxisParam(s,a.shape);let u=o;const l=Gk.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=hL({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Gk.getInnerMostAxes(u.length,a.shape.length)),Gk.assertAxesAreInnerMostDims("min",u,c.shape.length);const[d,h]=Gk.computeOutAndReduceShapes(c.shape,u),p=ap.sizeFromShape(h),f=ap.makeZerosTypedArray(ap.sizeFromShape(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=oP({inputs:{x:g},backend:n,attrs:{shape:Gk.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},NB={kernelName:_d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;UD(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===i?0:1,d=n.data.get(a.dataId).values,h=a.shape.length,p=ap.computeStrides(a.shape),f=ap.sizeFromShape(o),m=o.length,g=ap.computeStrides(o),y=ap.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=ap.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=ap.locToIndex(t,h,p);y[e]=d[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},EB=KD(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),_B=aO(Td,EB),TB={kernelName:Td,backendName:"cpu",kernelFunc:_B},CB=iu(bu());function AB(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=ap.parseAxisParam([o],a.shape),l=gB({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Gk.expandShapeToKeepDim(l.shape,u),d=oP({inputs:{x:l},backend:n,attrs:{shape:c}}),h=UL({inputs:{a,b:d},backend:n}),p=IO({inputs:{x:h},backend:n}),f=wz({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=oP({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Mz({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var $B={kernelName:gh,backendName:"cpu",kernelFunc:AB},FB={kernelName:Cd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;UD(a,"multinomial");const u=o?a:AB({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],d=n.data.get(u.dataId).values,h=[l,s],p=ap.makeZerosTypedArray(ap.sizeFromShape(h),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=d[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+d[t+e];const r=CB.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();p[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",p)}},RB=VI.nonMaxSuppressionV3Impl,MB={kernelName:Rd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;UD(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:d}=RB(l,c,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},DB=VI.nonMaxSuppressionV4Impl,OB={kernelName:Md,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;UD(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=DB(c,d,i,o,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},LB=VI.nonMaxSuppressionV5Impl,PB={kernelName:Dd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;UD(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=LB(c,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},zB={kernelName:Ld,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;UD(a,"oneHot");const u=ap.sizeFromShape(a.shape),l=new Float32Array(u*s);l.fill(o);const c=n.data.get(a.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<s&&(l[e*s+c[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",l)}};function BB(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=eO({inputs:{input:r},backend:n}),t=BB({inputs:{x:e},backend:n}),a=jP({inputs:{input:r},backend:n}),s=BB({inputs:{x:a},backend:n}),i=XD({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Bz({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var WB={kernelName:Ph,backendName:"cpu",kernelFunc:BB},UB={kernelName:Od,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=eO({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=jP({inputs:{input:a},backend:r}),i=BB({inputs:{x:s},backend:r}),o=XD({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return Bz({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function VB(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return $z({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ap.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ap.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=KP({inputs:t.map((e=>{const t=$z({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}var GB={kernelName:Pd,backendName:"cpu",kernelFunc:VB},HB={kernelName:zd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;UD(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=n.data.get(a.dataId).values,c=ap.sizeFromShape(a.shape),d=a.shape.length,h=ap.computeStrides(a.shape),p=ap.sizeFromShape(o),f=o.length,m=ap.computeStrides(o),g=ap.getTypedArrayFromDType(a.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++){const t=ap.indexToLoc(e,d,h).map(((e,t)=>e+u[t]));g[ap.locToIndex(t,f,m)]=l[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},jB=KD(((e,t)=>Math.pow(e,t))),qB=aO(Wd,jB),KB={kernelName:Wd,backendName:"cpu",kernelFunc:qB},XB={kernelName:Gd,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=gL(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},YB=pO(jd,(e=>1/e)),ZB={kernelName:jd,backendName:"cpu",kernelFunc:YB},JB={kernelName:Zd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;UD(a,"resizeBilinear");const u=ap.computeStrides(a.shape),[l,c]=o,[d,h,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(ap.sizeFromShape([d,l,c,f])),y=[s&&l>1?h-1:h,s&&c>1?p-1:p],b=[s&&l>1?l-1:l,s&&c>1?c-1:c];let w=0;const x=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<d;e++)for(let t=0;t<l;t++){let n;n=i?x*(t+.5)-.5:x*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(h-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],d=l+n*u[2],h=o+s*u[2],y=l+s*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[d+e],s=t+(m[h+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[w++]=i}}}return n.makeTensorInfo([d,l,c,f],"float32",g)}},QB={kernelName:Jd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;UD([s,a],"resizeBilinearGrad");const o=ap.computeStrides(a.shape),[u,l,c,d]=a.shape,[,h,p]=s.shape,f=new Float32Array(u*l*c*d),m=[i&&h>1?l-1:l,i&&p>1?c-1:c],g=[i&&h>1?h-1:h,i&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],w=n.data.get(s.dataId).values;let x=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<h;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=t+r*o[1],i=t+a*o[1],u=n-r,h=1-u;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,p=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],v=h*l,k=h*a,I=u*l,S=u*a;for(let e=0;e<d;e++){const t=w[x++];f[p+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,d],"float32",f)}},eW={kernelName:Xd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;UD(a,"resizeNearestNeighbor");const u=ap.computeStrides(a.shape),[l,c]=o,[d,h,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(d*l*c*f),y=[s&&l>1?h-1:h,s&&c>1?p-1:p],b=[s&&l>1?l-1:l,s&&c>1?c-1:c],w=y[0]/b[0],x=y[1]/b[1];let v=0;for(let e=0;e<d;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?w*(e+.5):w*e;let r=Math.min(h-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<c;e++){const t=i?x*(e+.5):x*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([d,l,c,f],a.dtype,g)}},tW={kernelName:Yd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;UD([s,a],"resizeNearestNeighborGrad");const o=ap.computeStrides(a.shape),u=ap.computeStrides(s.shape),[l,c,d,h]=a.shape,[,p,f]=s.shape,m=new Float32Array(l*c*d*h),g=n.data.get(s.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?d-1:d],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],w=y[0]/b[0],x=y[1]/b[1],v=1/w,k=1/x,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*v),a=Math.floor(r-I/2);for(let r=0;r<d;r++){const s=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-S/2);for(let n=0;n<h;n++){let o=0;for(let s=0;s<I;s++){const l=s+a;if(l<0||l>=p)continue;const h=t+l*u[1],m=l*w;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const a=h+t*u[2],s=t*x;r===Math.min(d-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},nW={kernelName:eh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;UD(a,"reverse");const i=a.shape.length,o=ap.parseAxisParam(s,a.shape);if(0===i)return JD({inputs:{x:a},backend:n});const u=new Mp(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},rW={kernelName:Wh,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:a}=t,{radians:s,fillValue:i,center:o}=n,u=r,l=ap.getTypedArrayFromDType(a.dtype,ap.sizeFromShape(a.shape)),[c,d,h,p]=a.shape,[f,m]=Gk.getImageCenter(o,d,h),g=Math.sin(s),y=Math.cos(s),b=u.data.get(a.dataId).values;for(let e=0;e<c;e++){const t=e*h*d*p;for(let e=0;e<d;e++){const n=e*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let s=0;s<p;s++){const o=[c,e,r,s],u=o[2],w=o[1];let x=(u-f)*y-(w-m)*g,v=(u-f)*g+(w-m)*y;x=Math.round(x+f),v=Math.round(v+m);let k=i;"number"!=typeof i&&(k=3===s?255:i[s]),x>=0&&x<h&&v>=0&&v<d&&(k=b[t+v*(h*p)+x*p+s]),l[t+n+a+s]=k}}}}return{dataId:u.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},aW=pO(th,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),sW={kernelName:th,backendName:"cpu",kernelFunc:aW};function iW(e,t,n,r,a,s,i,o,u,l){const c=[r/a,a],d=e.values,h=t.values;if(0===r)return wm(n,t.dtype);const p=wm(c,t.dtype);p.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=d[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)l?p.values[u*a+n]+=h[e*a+n]:p.values[u*a+n]=0===t.rank?h[0]:h[e*a+n]}return p}var oW={kernelName:rh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=Gk.calculateShapes(s,a,i),h=iW(n.bufferSync(a),n.bufferSync(s),i,d,l,u,o,c,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}},uW={kernelName:ah,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;UD([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=Jp(a.dtype,s.dtype),d=ap.makeZerosTypedArray(ap.sizeFromShape(a.shape),c);let h=0;const p=0===i||i>1||1===a.shape.length?1:ap.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?d[h++]=u[e]:d[h++]=l[e];return n.makeTensorInfo(a.shape,c,d)}},lW=Gk.SELU_SCALEALPHA,cW=Gk.SELU_SCALE,dW=pO(sh,(e=>e>=0?cW*e:lW*(Math.exp(e)-1))),hW={kernelName:sh,backendName:"cpu",kernelFunc:dW},pW=pO(lh,(e=>e<0?-1:e>0?1:0)),fW={kernelName:lh,backendName:"cpu",kernelFunc:pW},mW=pO(oh,(e=>Math.sin(e))),gW={kernelName:oh,backendName:"cpu",kernelFunc:mW},yW=pO(uh,(e=>Math.sinh(e))),bW={kernelName:uh,backendName:"cpu",kernelFunc:yW},wW=Math.log(1.1920928955078125e-7)+2,xW=pO(dh,(e=>{const t=e>-wW,n=e<wW,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),vW={kernelName:dh,backendName:"cpu",kernelFunc:xW},kW={kernelName:fh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;UD([a],"spaceToBatchND");const o=ap.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=HB.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=Gk.getReshaped(l.shape,s,o,!1),d=Gk.getPermuted(c.length,s.length,!1),h=Gk.getReshapedPermuted(l.shape,s,o,!1),p=oP({inputs:{x:l},backend:n,attrs:{shape:c}}),f=hL({inputs:{x:p},backend:n,attrs:{perm:d}}),m=oP({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}},IW={kernelName:yh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[d,h,p,f,m]=EL(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},SW={kernelName:bh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,d]=_L(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},NW={kernelName:wh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=TL(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},EW={kernelName:xh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=TL(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},_W={kernelName:vh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:h}=Gk.calculateShapes(s,a,o),p=iW(n.bufferSync(a),n.bufferSync(s),o,h,c,l,u,d,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},TW={kernelName:mh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ap.parseAxisParam(i,a.shape)[0],u=Gk.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=SL({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},CW={kernelName:Ih,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:r}=t,a=n;UD(r,"square");const s=a.data.get(r.dataId).values,i=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];i[e]=t*t}return{dataId:a.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},AW=pO(zh,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),$W={kernelName:zh,backendName:"cpu",kernelFunc:AW},FW={kernelName:Sh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r;UD(a,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:w,strides:x}=ug.sliceInfo(a.shape,s,i,o,u,l,c,d,h);let v;if(m)v=oP({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){ap.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=ug.computeOutShape(b,w,x),t=SL({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});v=oP({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=DL(p,n.bufferSync(a),x,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}},RW={kernelName:Nh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,h=n.data.get(c.dataId).values,p=n.data.get(d.dataId).values,[f,m]=OL(h,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},MW={kernelName:Eh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,d]=PL(o,u,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}},DW={kernelName:_h,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=zL(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},OW=pO(Ch,(e=>Math.tan(e))),LW={kernelName:Ch,backendName:"cpu",kernelFunc:OW},PW=pO(Ah,(e=>Math.tanh(e)));function zW(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ap.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return ap.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ap.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function BW(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function WW(e,t,n,r,a,s,i,o,u,l,c){return BW(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function UW(e,t,n,r,a,s,i,o,u,l,c){const d=Math.floor(o),h=Math.floor(u),p=d+1,f=h+1;return(p-o)*((f-u)*BW(e,t,n,r,a,s,i,d,h,l,c)+(u-h)*BW(e,t,n,r,a,s,i,d,f,l,c))+(o-d)*((f-u)*BW(e,t,n,r,a,s,i,p,h,l,c)+(u-h)*BW(e,t,n,r,a,s,i,p,f,l,c))}var VW=[dP,qD,pP,mP,lO,gP,yP,bP,wP,xP,kP,SP,EP,CP,$P,DP,OP,LP,PP,cP,zP,BP,WP,UP,rO,yO,GP,YD,HP,XP,ZP,JP,QP,ez,tz,nz,az,iz,oz,uz,lz,cz,hz,pz,fz,mz,gz,yz,bz,vz,YL,kz,vO,Az,SO,Fz,_O,zz,Wz,Uz,AO,Hz,jz,qz,Kz,Xz,DO,PO,QD,Yz,qP,Jz,eB,nB,JL,WO,GO,rB,KO,sB,uB,cB,pB,fB,mB,yB,JO,bB,wB,xB,vB,kB,IB,SB,tL,NB,TB,FB,sL,oL,MB,OB,PB,cL,zB,UB,GB,HB,KB,tP,mL,XB,tO,Dz,ZB,rP,sP,uP,JB,QB,eW,tW,nW,rW,sW,wL,oW,uW,hW,kL,fW,gW,bW,NL,$B,vW,kW,IW,SW,NW,EW,_W,TW,$L,CW,ML,$W,FW,RW,MW,DW,VL,xz,LW,{kernelName:Ah,backendName:"cpu",kernelFunc:PW},{kernelName:$h,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;UD(a,"tile");const i=GL(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Fh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;UD(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=qL(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},{kernelName:Rh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,d,h,p]=a.shape,[f,m]=null!=l?l:[d,h],g=[c,f,m,p],y=ap.computeStrides(a.shape),b=y[0],w=y[1],x=y[2],v=ap.getTypedArrayFromDType(a.dtype,ap.sizeFromShape(g));v.fill(u);const k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<p;++a){let s;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,p=(t[3]*r+t[4]*n+t[5])/l,f=zW(c,h,o),m=zW(p,d,o);switch(i){case"nearest":s=WW(k,d,h,b,w,x,e,m,f,a,u);break;case"bilinear":s=UW(k,d,h,b,w,x,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}v[e*b+n*w+r*x+a]=s}return r.makeTensorInfo(g,a.dtype,v)}return{dataId:r.write(v,g,a.dtype),shape:a.shape,dtype:a.dtype}}},pL,{kernelName:Dh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;UD(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=KL(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:Oh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const h=new Array(o);for(let e=0;e<h.length;e++){c[s]=e;const t=SL({inputs:{x:a},backend:n,attrs:{begin:c,size:d}});h[e]=oP({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return h}},{kernelName:Lh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;UD(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-s.shape.length;let c=s;for(let e=0;e<l;++e){const t=$z({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=ap.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=xO({inputs:{a:r,b:c},backend:n}),i=nO({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=aL({inputs:{a:i,b:a},backend:n}),d=wz({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(d),u.push(r),u.push(s),u.push(i),u.push(l),u.push(d)}const d=VB({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},WB];for(const e of VW)Jh(e);var GW={};su(GW,{assertNotComplex:()=>QU,bindCanvasToFramebuffer:()=>CU,bindColorTextureToFramebuffer:()=>AU,bindTextureToProgramUniformSampler:()=>TU,bindTextureUnit:()=>SU,bindVertexBufferToProgramAttribute:()=>IU,callAndCheck:()=>sU,canBeRepresented:()=>iU,createFragmentShader:()=>cU,createFramebuffer:()=>kU,createProgram:()=>fU,createStaticIndexBuffer:()=>bU,createStaticVertexBuffer:()=>yU,createTexture:()=>xU,createVertexShader:()=>lU,getBatchDim:()=>OU,getExtensionOrThrow:()=>uU,getFramebufferErrorMessage:()=>RU,getMaxTexturesInShader:()=>HU,getNumChannels:()=>wU,getProgramUniformLocation:()=>_U,getProgramUniformLocationOrThrow:()=>EU,getRowsCols:()=>LU,getShapeAs3D:()=>PU,getTextureShapeFromLogicalShape:()=>zU,getWebGLDisjointQueryTimerVersion:()=>jU,getWebGLErrorMessage:()=>oU,getWebGLMaxTextureSize:()=>UU,hasExtension:()=>qU,isCapableOfRenderingToFloatTexture:()=>XU,isDownloadFloatTextureEnabled:()=>YU,isReshapeFree:()=>WU,isWebGLFenceEnabled:()=>JU,isWebGLVersionEnabled:()=>KU,linkProgram:()=>mU,resetMaxTextureSize:()=>VU,resetMaxTexturesInShader:()=>GU,unbindColorTextureFromFramebuffer:()=>$U,unbindTextureUnit:()=>NU,validateFramebuffer:()=>FU,validateProgram:()=>gU,validateTextureSize:()=>vU});var HW,jW,qW,KW,XW,YW,ZW={},JW={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function QW(e,t){ZW[e]=t}function eU(e,t){if(!(e in ZW)){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete ZW[e]}),!1),1===e?n.getContext("webgl",JW)||n.getContext("experimental-webgl",JW):n.getContext("webgl2",JW)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;ZW[e]=n}const n=ZW[e];return null==n||n.isContextLost()?(delete ZW[e],eU(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ZW[e])}function tU(e,t){return[t,e]}function nU(e){const t=ap.sizeFromShape(e),n=Math.ceil(t/4);return ap.sizeToSquarishShape(n)}function rU(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function aU(e,t){const n=e;let r,a,s,i,o,u,l,c,d,h;return 2===Dl().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,d=n.HALF_FLOAT,h=n.FLOAT,u=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:h}}function sU(e,t){const n=t();return Dl().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+oU(e,t))}(e),n}function iU(e){return!!(Dl().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function oU(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function uU(e,t){return MU(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function lU(e,t){const n=MU(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(sU(e,(()=>e.shaderSource(n,t))),sU(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function cU(e,t){const n=MU(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(sU(e,(()=>e.shaderSource(n,t))),sU(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=pU.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>ap.rightPad((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ap.rightPad(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(jW=HW||(HW={}))[jW.DENSE=0]="DENSE",jW[jW.SHARED_BATCH=1]="SHARED_BATCH",(KW=qW||(qW={}))[KW.RENDER=0]="RENDER",KW[KW.UPLOAD=1]="UPLOAD",KW[KW.PIXELS=2]="PIXELS",KW[KW.DOWNLOAD=3]="DOWNLOAD",(YW=XW||(XW={}))[YW.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",YW[YW.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",YW[YW.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",YW[YW.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",YW[YW.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";var dU,hU,pU=/ERROR: [0-9]+:([0-9]+):/g;function fU(e){return MU(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function mU(e,t){if(sU(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function gU(e,t){if(sU(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function yU(e,t){const n=MU(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return sU(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),sU(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function bU(e,t){const n=MU(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return sU(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),sU(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function wU(){return 2===Dl().getNumber("WEBGL_VERSION")?1:4}function xU(e){return MU(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function vU(e,t){const n=Dl().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function kU(e){return MU(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function IU(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(sU(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),sU(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),sU(e,(()=>e.enableVertexAttribArray(o))),!0)}function SU(e,t,n){DU(e,n),sU(e,(()=>e.activeTexture(e.TEXTURE0+n))),sU(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function NU(e,t){DU(e,t),sU(e,(()=>e.activeTexture(e.TEXTURE0+t))),sU(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function EU(e,t,n){return MU(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function _U(e,t,n){return e.getUniformLocation(t,n)}function TU(e,t,n,r){sU(e,(()=>SU(e,t,r))),sU(e,(()=>e.uniform1i(n,r)))}function CU(e){sU(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),sU(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),sU(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function AU(e,t,n){sU(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),sU(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function $U(e,t){sU(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),sU(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function FU(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+RU(e,t))}function RU(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function MU(e,t,n){const r=sU(e,(()=>t()));if(null==r)throw new Error(n);return r}function DU(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function OU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return ap.sizeFromShape(e.slice(0,e.length-t))}function LU(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function PU(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[OU(e),...LU(e)]),t}function zU(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Dl().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?ap.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=ap.squeezeShape(e);e=t.newShape}let r=ap.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=OU(e);let n=2,a=2;return e.length&&([n,a]=LU(e)),r=t*(n/2)*(a/2),ap.sizeToSquarishShape(r).map((e=>2*e))}return ap.sizeToSquarishShape(r)}function BU(e){return e%2==0}function WU(e,t){if(e=e.slice(-2),t=t.slice(-2),ap.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(BU(n)&&BU(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&BU(e[0])&&BU(t[0])}function UU(e){if(null==dU){const t=eU(e);dU=t.getParameter(t.MAX_TEXTURE_SIZE)}return dU}function VU(){dU=null}function GU(){hU=null}function HU(e){if(null==hU){const t=eU(e);hU=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,hU)}function jU(e){if(0===e)return 0;let t;const n=eU(e);return t=qU(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:qU(n,"EXT_disjoint_timer_query")?1:0,t}function qU(e,t){return null!=e.getExtension(t)}function KU(e){try{if(null!=eU(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function XU(e){if(0===e)return!1;const t=eU(e);if(1===e){if(!qU(t,"OES_texture_float"))return!1}else if(!qU(t,"EXT_color_buffer_float"))return!1;return ZU(t)}function YU(e){if(0===e)return!1;const t=eU(e);if(1!==e){if(qU(t,"EXT_color_buffer_float"))return ZU(t);const e="EXT_color_buffer_half_float";if(qU(t,e)){const n=t.getExtension(e);return function(e,t){const n=aU(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!qU(t,"OES_texture_float")&&(!!qU(t,"WEBGL_color_buffer_float")&&ZU(t))}function ZU(e){const t=aU(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function JU(e){return 2===e&&null!=eU(e).fenceSync}function QU(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ap.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var eV=Dl();function tV(){let e,t,n,r,a,s,i,o,u,l;return 2===Dl().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function nV(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=ap.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function rV(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=ap.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function aV(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}function sV(e){const t=ap.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}eV.registerFlag("HAS_WEBGL",(()=>eV.getNumber("WEBGL_VERSION")>0)),eV.registerFlag("WEBGL_VERSION",(()=>KU(2)?2:KU(1)?1:0)),eV.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),eV.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===eV.get("WEBGL_VERSION"))),eV.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),eV.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),eV.registerFlag("WEBGL_PACK",(()=>eV.getBool("HAS_WEBGL"))),eV.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>eV.getBool("WEBGL_PACK"))),eV.registerFlag("WEBGL_PACK_CLIP",(()=>eV.getBool("WEBGL_PACK"))),eV.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>eV.getBool("WEBGL_PACK"))),eV.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>eV.getBool("WEBGL_PACK"))),eV.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>eV.getBool("WEBGL_PACK"))),eV.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>eV.getBool("WEBGL_PACK"))),eV.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>eV.getBool("WEBGL_PACK"))),eV.registerFlag("WEBGL_PACK_REDUCE",(()=>eV.getBool("WEBGL_PACK"))),eV.registerFlag("WEBGL_LAZILY_UNPACK",(()=>eV.getBool("WEBGL_PACK"))),eV.registerFlag("WEBGL_CONV_IM2COL",(()=>eV.getBool("WEBGL_PACK"))),eV.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>UU(eV.getNumber("WEBGL_VERSION")))),eV.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>HU(eV.getNumber("WEBGL_VERSION")))),eV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=eV.getNumber("WEBGL_VERSION");return 0===e?0:jU(e)})),eV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>eV.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!pf.isMobile())),eV.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>XU(eV.getNumber("WEBGL_VERSION")))),eV.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!eV.getBool("WEBGL_FORCE_F16_TEXTURES")&&eV.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),eV.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>YU(eV.getNumber("WEBGL_VERSION")))),eV.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>JU(eV.getNumber("WEBGL_VERSION")))),eV.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>eV.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),eV.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),eV.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>pf.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),eV.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),eV.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),eV.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),eV.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));var iV="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:oV}=Gk;function uV(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return mV(e,t);case 1:return gV(e,t);case 2:return yV(e,t);case 3:return bV(e,t);case 4:return wV(e,t);case 5:return xV(e);case 6:return vV(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function lV(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${tV().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=tV();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=tV();if(null!=s&&ap.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${lV(_V(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${TV(s,r)});\n        }\n      `}const o=tV();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=tV();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],d=Math.ceil(s[i-1]/2);let h=d*Math.ceil(s[i-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,h*=s[i-e-1],f=`b${e} * ${h} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var cV="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",dV="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",hV="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",pV="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function fV(e){return`offset${e}`}function mV(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=fV(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}function gV(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${kV(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=fV(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function yV(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&ap.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=ap.squeezeShape(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${uV(_V(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${TV(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${kV(e)}\n      }\n    `;const l=s[0],c=s[1],d=fV(r);return 1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${d};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}function bV(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=ap.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${uV(_V(e,l),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${TV(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${kV(e)}\n      }\n    `;const c=e.shapeInfo.texShape,d=c[0],h=c[1],p=e.shapeInfo.flatOffset;if(h===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${d}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(h===i&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=fV(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${h}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}function wV(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:u,keptDims:l}=ap.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${uV(_V(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${TV(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${kV(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=fV(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}function xV(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=ap.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${uV(_V(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${TV(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${kV(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];return p===o&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:p===a&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${fV(n)};\n      vec2 uv = uvFromFlat(${h}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function vV(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=ap.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${uV(_V(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${TV(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${kV(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];return f===c&&null==d?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===i&&null==d?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${fV(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function kV(e){const t=e.name,n=ap.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function IV(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=oV(e.shapeInfo.logicalShape,t.logicalShape),u=NV(i),l=i-s;let c;const d=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${d[e+l]} = 0;`)).join("\n");let h="";h=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+l]}`)).join(", ");let p="return outputValue;";const f=1===ap.sizeFromShape(e.shapeInfo.logicalShape),m=1===ap.sizeFromShape(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${h});\n      ${p}\n    }\n  `}function SV(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&ap.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=NV(u),c=oV(e.shapeInfo.logicalShape,t.logicalShape),d=u-o;let h;const p=["x","y","z","w","u","v"];h=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+d]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+d]}`)).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      return get${r}(${f});\n    }\n  `}function NV(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function EV(e,t,n){const{newShape:r,keptDims:a}=ap.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,u=!e&&s>1&&!ap.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function _V(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function TV(e,t){return t.map((t=>e[t])).join(", ")}function CV(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!ap.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!ap.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function AV(e){return Dl().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var $V={};function FV(e){const t=tV();return lU(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function RV(e){return yU(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function MV(e){return bU(e,new Uint16Array([0,1,2,2,1,3]))}function DV(e,t,n,r,a,s){vU(t,n);const i=xU(e),o=e.TEXTURE_2D;return sU(e,(()=>e.bindTexture(o,i))),sU(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),sU(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),sU(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),sU(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Dl().getNumber("WEBGL_VERSION")?sU(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):sU(e,(()=>e.texStorage2D(o,1,r,t,n))),sU(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function OV(e){return e.internalFormatFloat}function LV(e,t,n,r){const[a,s]=tU(t,n);return DV(e,a,s,OV(r),r.textureFormatFloat,e.FLOAT)}function PV(e){return e.internalFormatHalfFloat}function zV(e,t,n,r){const[a,s]=tU(t,n);return DV(e,a,s,PV(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function BV(e){return e.downloadTextureFormat}function WV(e,t,n,r){const[a,s]=tU(t,n);return DV(e,a,s,BV(r),e.RGBA,e.UNSIGNED_BYTE)}function UV(e){return e.internalFormatPackedFloat}function VV(e,t,n,r){const[a,s]=rU(t,n);return DV(e,a,s,UV(r),e.RGBA,e.FLOAT)}function GV(e){return e.internalFormatPackedHalfFloat}function HV(e,t,n,r){const[a,s]=rU(t,n);return DV(e,a,s,GV(r),e.RGBA,r.textureTypeHalfFloat)}function jV(e,t,n){return sU(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),IU(e,t,"clipSpacePos",n,3,20,0)&&IU(e,t,"uv",n,2,20,12)}function qV(e,t,n,r,a,s){let i,o,u;sU(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),2===Dl().getNumber("WEBGL_VERSION")?sU(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):sU(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),sU(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function KV(e,t,n){sU(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Dl().getNumber("WEBGL_VERSION")?sU(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):sU(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Dl().getNumber("WEBGL_VERSION")?sU(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):sU(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),sU(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function XV(e,t,n,r){const a=e.createBuffer();sU(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return sU(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),sU(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),sU(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function YV(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function ZV(e,t,n,r){const[a,s]=tU(t,n),i=new Uint8Array(t*n*4);return sU(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function JV(e,t,n,r,a,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=rU(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function QV(e,t,n){const r=new Float32Array(t*n*4);return sU(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}su($V,{bindVertexProgramAttributeStreams:()=>jV,createBufferFromOutputTexture:()=>XV,createFloat16MatrixTexture:()=>zV,createFloat16PackedMatrixTexture:()=>HV,createFloat32MatrixTexture:()=>LV,createIndexBuffer:()=>MV,createPackedMatrixTexture:()=>VV,createUnsignedBytesMatrixTexture:()=>WV,createVertexBuffer:()=>RV,createVertexShader:()=>FV,downloadByteEncodedFloatMatrixFromOutputTexture:()=>ZV,downloadFloat32MatrixFromBuffer:()=>YV,downloadMatrixFromPackedOutputTexture:()=>QV,downloadPackedMatrixFromBuffer:()=>JV,getInternalFormatForFloat16MatrixTexture:()=>PV,getInternalFormatForFloat16PackedMatrixTexture:()=>GV,getInternalFormatForFloat32MatrixTexture:()=>OV,getInternalFormatForPackedMatrixTexture:()=>UV,getInternalFormatForUnsignedBytesMatrixTexture:()=>BV,uploadDenseMatrixToTexture:()=>qV,uploadPixelDataToTexture:()=>KV});var eG=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Dl().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,QW(t,e)):this.gl=eU(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Dl().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=uU(this.gl,e),qU(this.gl,t))this.textureHalfFloatExtension=uU(this.gl,t);else if(Dl().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),qU(this.gl,r))this.colorBufferHalfFloatExtension=uU(this.gl,r);else if(Dl().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",qU(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!qU(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=RV(this.gl),this.indexBuffer=MV(this.gl),this.framebuffer=kU(this.gl),this.textureConfig=aU(this.gl,this.textureHalfFloatExtension)}get debug(){return Dl().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;sU(e,(()=>e.finish())),sU(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),sU(e,(()=>e.deleteFramebuffer(this.framebuffer))),sU(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),sU(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),sU(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),LV(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),zV(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),WV(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),KV(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),qV(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),HV(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),VV(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&($U(this.gl,this.framebuffer),this.outputTexture=null),sU(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>ZV(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return JV(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return YV(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=XV(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Dl().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Dl().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Dl().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>QV(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=FV(t));const n=fU(t);return sU(t,(()=>t.attachShader(n,this.vertexShader))),sU(t,(()=>t.attachShader(n,e))),mU(t,n),this.debug&&gU(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=jV(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&sU(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&gU(this.gl,this.program),sU(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?EU(this.gl,e,t):_U(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),sU(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),TU(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=rU(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&gU(this.gl,this.program),FU(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),sU(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),sU(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=uU(this.gl,2===Dl().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Dl().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Dl().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ap.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Dl().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Dl().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||ap.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),AU(this.gl,e,this.framebuffer),this.debug&&FU(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(AU(this.gl,this.outputTexture,this.framebuffer),this.debug&&FU(this.gl)):$U(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;AU(r,e,this.framebuffer),this.debug&&FU(r),this.outputTexture=e,sU(r,(()=>r.viewport(0,0,t,n))),sU(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),sU(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}},{addImpl:tG,bincountImpl:nG,bincountReduceImpl:rG,ceilImpl:aG,concatImpl:sG,equalImpl:iG,expImpl:oG,expm1Impl:uG,floorImpl:lG,gatherNdImpl:cG,gatherV2Impl:dG,greaterImpl:hG,greaterEqualImpl:pG,lessImpl:fG,lessEqualImpl:mG,linSpaceImpl:gG,logImpl:yG,maxImpl:bG,maximumImpl:wG,minimumImpl:xG,multiplyImpl:vG,negImpl:kG,notEqualImpl:IG,prodImpl:SG,rangeImpl:NG,rsqrtImpl:EG,sigmoidImpl:_G,simpleAbsImpl:TG,sliceImpl:CG,sparseFillEmptyRowsImpl:AG,sparseReshapeImpl:$G,sparseSegmentReductionImpl:FG,sqrtImpl:RG,stridedSliceImpl:MG,stringNGramsImpl:DG,stringSplitImpl:OG,stringToHashBucketFastImpl:LG,subImpl:PG,tileImpl:zG,topKImpl:BG,transposeImpl:WG,uniqueImpl:UG}=HD;function VG(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function GG(e,t){return 1===t?[e]:VG(e,t)}var HG=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=AV(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=aV(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):nV(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":sV(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function jG(e,t,n,r,a){const s=function(e,t){switch(e){case XW.PACKED_2X2_FLOAT32:return UV(t);case XW.PACKED_2X2_FLOAT16:return GV(t);case XW.UNPACKED_FLOAT32:return OV(t);case XW.UNPACKED_FLOAT16:return PV(t);case XW.PACKED_4X1_UNSIGNED_BYTE:return BV(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=rU(e[0],e[1]);i=t*n}else{const[t,n]=tU(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function qG(e,t){if(e===qW.UPLOAD)return XW.PACKED_2X2_FLOAT32;if(e===qW.RENDER||null==e)return function(e){return Dl().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?XW.PACKED_2X2_FLOAT32:XW.UNPACKED_FLOAT32:e?XW.PACKED_2X2_FLOAT16:XW.UNPACKED_FLOAT16}(t);if(e===qW.DOWNLOAD||e===qW.PIXELS)return XW.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function KG(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var XG=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=AV(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},YG="if (isnan(x)) return x;",ZG="return x;",JG="return abs(x);",QG="return (x >= 0.0) ? x : (exp(x) - 1.0);",eH=YG+"\n  return (x < 0.0) ? 0.0 : x;\n",tH=YG+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",nH="return x;",rH="return 1.0 / (1.0 + exp(-1.0 * x));",aH="return x;",sH="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",iH="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",oH="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",uH="return 1.0 / (1.0 + exp(-1.0 * x));",lH=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=AV(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},cH=VI.whereImpl,dH={},hH=Dl().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),pH=class extends Ou{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Dl().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof eG)t=e;else{const n=eU(Dl().getNumber("WEBGL_VERSION"),e);t=new eG(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=eU(Dl().getNumber("WEBGL_VERSION"));t=new eG(e),this.binaryCache=((n=Dl().getNumber("WEBGL_VERSION"))in dH||(dH[n]={}),dH[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=qG(t,n),a=KG(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=jG(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===XW.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===XW.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===XW.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===XW.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===XW.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=qG(n,r),s=KG(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=jG(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Dl().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==Dl().global.screen?1024:Dl().global.screen.height*Dl().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Du(this,Kg())}nextDataId(){return pH.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Dl().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Dl().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:qW.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(Dl().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:qW.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new lH(i,nH):new XG(i,nH);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=ap.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);c=Gk.mergeRealAndImagArrays(e,t)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=ap.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new lH(r,nH):new XG(r,nH);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Dl().getBool("DEBUG")&&!Dl().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Dl().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&Dl().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...nU(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=Gk.mergeRealAndImagArrays(t,n)}else if(null==c)l=this.getValuesFromTexture(e);else{const e=ap.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;sU(e,(()=>e.deleteBuffer(c)))}const d=this.convertAndCacheOnCPU(e,l),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Kg().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new lH(a,nH):new XG(a,nH);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=Kg().makeTensorFromDataId(l.dataId,l.shape,l.dtype),d=this.texData.get(l.dataId);return Object.assign({tensorRef:c},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ap.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return wm(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!iU(n)){if(Dl().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=ap.sizeFromShape(t);if(Dl().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...nU(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Dl().getBool("WEBGL_PACK")&&!0===r,i=s?PU(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=qW.DOWNLOAD;const t=tV();this.outputShape=e,this.userCode=`\n      ${iV}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=qW.DOWNLOAD;const t=tV();this.outputShape=e,this.userCode=`\n      ${iV}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return Dl().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=ap.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=ap.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Dl().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=ap.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Dl().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ap.now(),endMs:null}}endTimer(e){return Dl().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ap.now(),e)}async getQueryTime(e){if(Dl().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:hH;return Dl().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&ap.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Gk.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return cH(e.shape,t)}packedUnaryOp(e,t,n){const r=new lH(e.shape,t),a=this.compileAndRun(r,[e],n);return Kg().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=TG(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Dl().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,JG,e.dtype);const t=new XG(e.shape,JG),n=this.compileAndRun(t,[e]);return Kg().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ap.isString(n[0])){const a=n.map((e=>ap.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Kg().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=AV(this.outputShape.length);const t=e.length,n=GG("rc",t),r=NV(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=AV(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=GG("rc",this.rank),t=NV(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[OU(e.shape),...LU(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[OU(t),...LU(t)],s=new HG(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){const e=ap.sizeFromShape(a),n=t[0]*t[1]*4;ap.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=PU(a);let o;o=r?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=HW.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=tV();this.outputShape=e,this.enableShapeUniforms=AV(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?rV(["r","c","d"],e):nV(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=HW.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=tV();this.outputShape=e,this.enableShapeUniforms=AV(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?rV(["r","c","d"],e):nV(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}(i);const u=[null!=t?t:nU(i)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,u,!0,t).dataId}}runWebGLProgram(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===HW.DENSE){const t=null!=s?s:nU(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===ap.sizeFromShape(i.shape))return o.values=ap.getTypedArrayFromDType(i.dtype,0),i;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ap.sizeFromShape(t.shape)<=Dl().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!WU(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=EV(e.packedInputs,t.shape,s);let l="",c="",d="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=ap.computeStrides(o);d=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const h=t.shape.length,p=2===o.length&&ap.arraysEqual(t.shape,s),f=1===ap.sizeFromShape(t.shape),m=Gk.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&ap.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${h}_${g}_${i?u:""}_${o.length}_${f}_${m}_${p}_${l}_${c}_${d}_${y}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${Dl().getNumber("WEBGL_VERSION")}`,s}(e,l,c),h=this.getAndSaveBinary(d,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=function(e,t,n){const r=[];if(e.forEach((e=>{const t=ap.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=EV(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0,a="";a+=n?lV(e,r):uV(e,r);const s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?IV(e,t):SV(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=tV(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${cV}\n    ${dV}\n    ${hV}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ap.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return ap.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${rV(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=nV(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${rV(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=nV(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=nV(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=nV(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(d+=pV),[d,u,c,a,l,s,n.userCode].join("\n")}(a,i,t),u=cU(e.gl,o),l=e.createProgram(u);let c=null;const d=e.getUniformLocation(l,"NAN",!1);1===Dl().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const h=!1,p={},f={},m={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];p[r]=e.getUniformLocation(l,r,h),p[`offset${r}`]=e.getUniformLocation(l,`offset${r}`,h),t.enableShapeUniforms&&(f[`${r}Shape`]=e.getUniformLocation(l,`${r}Shape`,h),m[`${r}TexShape`]=e.getUniformLocation(l,`${r}TexShape`,h))}let g,y,b;t.enableShapeUniforms&&(g=e.getUniformLocation(l,"outShape",h),b=e.getUniformLocation(l,"outShapeStrides",h),y=e.getUniformLocation(l,"outTexShape",h));const w=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{w[n]=e.getUniformLocation(l,t.name,h)})),{program:t,fragmentShader:u,source:o,webGLProgram:l,uniformLocations:p,customUniformLocations:w,inShapeInfos:s,outShapeInfo:i,infLoc:c,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}(this.gpgpu,e,l,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(CV(t.inShapeInfos,n),CV([t.outShapeInfo],[r]));const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===Dl().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],u=t.inTexShapesLocations[`${a}TexShape`];if(o){const{uniformShape:r}=EV(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(ap.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=ap.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,h,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Dl().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=ap.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Dl().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Dl().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Zg((()=>{if(!Dl().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Dl().getBool("DEBUG");Dl().set("DEBUG",!1);const t=this.abs(Ix(1e-8)).dataSync()[0];if(Dl().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=ap.now());let c=t.texShape;if(null==c&&(c=zU(n,o),t.texShape=c),null!=a){const e=PU(n);let s,i=c[1],d=c[0];const h=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!o&&h||([i,d]=rU(c[0],c[1])),s=o?new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=tV();this.outputShape=e,this.enableShapeUniforms=AV(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":sV(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}(e,h):new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=tV();this.outputShape=e,this.enableShapeUniforms=AV(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":sV(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}(e,h);const p=h?[d,i]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=h?qW.PIXELS:qW.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,d,a);const g=[[d,i]],y=!0,b=this.runWebGLProgram(s,[f],r,g,y),w=this.texData.get(b.dataId);t.texture=w.texture,t.texShape=w.texShape,t.isPacked=w.isPacked,t.usage=w.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),t.values=null,u&&(this.uploadWaitMs+=ap.now()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*ap.bytesPerElement(t)}};pH.nextDataId=0;var fH="3.13.0";function mH(){Dl().set("WEBGL_FORCE_F16_TEXTURES",!0)}pf.isBrowser()&&oy("webgl",(()=>new pH),2);var gH={forceHalfFloat:mH},yH=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Gk.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=AV(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},bH=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Gk.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=AV(a);let s="";if(r)if(0===a||1===ap.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${NV(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=GG("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function wH(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var xH={kernelName:Qc,backendName:"webgl",kernelFunc:wH};function vH(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=wH({inputs:{x:r},backend:n}),u=wH({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}var kH={kernelName:hc,backendName:"webgl",kernelFunc:vH},IH="return (a < 0.) ? b * a : a;",SH="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",NH={kernelName:sd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",ap.createScalarValue(s,"float32")),o=Dl().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bH(SH,a.shape,i.shape):new yH(IH,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},EH="return (a < 0.) ? b * a : a;",_H="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",TH={kernelName:Ud,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Dl().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bH(_H,r.shape,a.shape):new yH(EH,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}};function CH(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:r,dtype:a}=e;return e=>{let{inputs:s,backend:i}=e;const{x:o}=s,u=i,l=a||o.dtype;if(u.shouldExecuteOnCPU([o])&&null!=r){const e=u.texData.get(o.dataId),t=r(e.values,l);return u.makeTensorInfo(o.shape,l,t)}let c;return c=Dl().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new lH(o.shape,n):new XG(o.shape,t),u.runWebGLProgram(c,[o],l)}}function AH(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:a=!1,cpuKernelImpl:s,dtype:i}=e;return e=>{let{inputs:o,backend:u}=e;const{a:l,b:c}=o,d=u;if(a&&"complex64"===l.dtype){const e=d.texData.get(l.dataId),n=d.texData.get(c.dataId),[r,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new yH(t,l.shape,c.shape);return d.runWebGLProgram(i,[a,s],Jp(n.dtype,r.dtype))})),s=vH({inputs:{real:r,imag:a},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(a),s}const h=i||Jp(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||d.shouldExecuteOnCPU([l,c]))&&null!=s){const e=d.texData.get(l.dataId).values,t=d.texData.get(c.dataId).values,n="string"===l.dtype?Gk.fromUint8ToStringArray(e):e,r="string"===l.dtype?Gk.fromUint8ToStringArray(t):t,[a,i]=s(l.shape,c.shape,n,r,h),o=d.makeTensorInfo(i,h);return d.texData.get(o.dataId).values=a,o}let p;return p=Dl().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new bH(n,l.shape,c.shape,r):new yH(t,l.shape,c.shape),d.runWebGLProgram(p,[l,c],h)}}function $H(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?aH:ZG;if("relu"===e)return t?iH:eH;if("elu"===e)return t?sH:QG;if("relu6"===e)return t?oH:tH;if("prelu"===e)return t?_H:EH;if("leakyrelu"===e)return t?SH:IH;if("sigmoid"===e)return t?uH:rH;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var FH=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],u=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=AV(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",w="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(w=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${w};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},RH=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Gk.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},MH="return a * b;";function DH(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=Gk.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new RH("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new RH("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=vH({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=vG(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=Dl().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bH(MH,r.shape,a.shape):new yH(MH,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}var OH={kernelName:Ad,backendName:"webgl",kernelFunc:DH};function LH(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=ap.sizeFromShape(a.shape),u=ap.inferFromImplicitShape(s,o),l=ap.sizeFromShape(u);ap.assert(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(a.dataId);return!c.isPacked||WU(a.shape,u)||null!==c.texture&&WU(c.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[OU(e.shape),...LU(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[OU(t),...LU(t)],i=new HG(s,r),o=[r],u=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,u,i)}var PH={kernelName:Kd,backendName:"webgl",kernelFunc:LH},zH=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${ap.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}},BH=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}};function WH(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Gk.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,d;c="mean"===n?0===i?new zH({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new zH({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new BH({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),d=s,s=r.runWebGLProgram(c,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}function UH(e,t,n){const r=Dl().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=NV(this.rank),a=VG("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}(e.shape,t):new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=NV(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function VH(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=t,s=e.shape.length,i=ap.parseAxisParam(a,e.shape);let o=i;const u=Gk.getAxesPermutation(o,s),l=null!=u;let c=e;l&&(c=UH(e,u,r),o=Gk.getInnerMostAxes(o.length,s)),Gk.assertAxesAreInnerMostDims("sum",o,s);const[d,h]=Gk.computeOutAndReduceShapes(c.shape,o);let p=d;n&&(p=Gk.expandShapeToKeepDim(d,i));const f=ap.sizeFromShape(h),m=LH({inputs:{x:c},attrs:{shape:[ap.sizeFromShape(e.shape)/f,f]},backend:r}),g=WH(m,Qp(e.dtype),"sum",r),y=LH({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(a,s,i,n)}var GH={kernelName:ph,backendName:"webgl",kernelFunc:VH};function HH(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=WG(e,a.shape,a.dtype,s,u);l=i.makeTensorInfo(u,a.dtype),i.texData.get(l.dataId).values=t}else l=UH(a,s,i);return l}var jH={kernelName:Mh,backendName:"webgl",kernelFunc:HH};function qH(e){let{a:t,b:n,transposeA:r,transposeB:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:l=null}=e;const c=t.shape.length,d=n.shape.length,h=r?t.shape[c-2]:t.shape[c-1],p=a?n.shape[d-1]:n.shape[d-2],f=r?t.shape[c-1]:t.shape[c-2],m=a?n.shape[d-2]:n.shape[d-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=ap.sizeFromShape(g),w=ap.sizeFromShape(y),x=Gm.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);ap.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${a} must match.`));const v=r?[b,h,f]:[b,f,h],k=a?[w,m,p]:[w,p,m],I=LH({inputs:{x:t},backend:s,attrs:{shape:v}}),S=LH({inputs:{x:n},backend:s,attrs:{shape:k}}),N=[I,S],E=Math.max(b,w),_=r?I.shape[1]:I.shape[2],T=null!=i,C=null!=o,A="leakyrelu"===l,$=null!=l?$H(l,!0):null;let F;if((1===f||1===m)&&_>1e3&&!1===(T||C||A||null!=$)){let e=I,t=S;r&&(e=HH({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),a&&(t=HH({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));const n=1===m;let i=e;1!==m&&(i=LH({inputs:{x:e},backend:s,attrs:{shape:[E,_,1]}}),N.push(i));const o=1===m?2:1;let u=t;n&&(u=LH({inputs:{x:t},backend:s,attrs:{shape:[E,1,_]}}),N.push(u));const l=DH({inputs:{a:i,b:u},backend:s});F=VH({inputs:{x:l},backend:s,attrs:{axis:o,keepDims:!0}}),N.push(l)}else{const e=Jp(t.dtype,n.dtype),l=new FH(v,k,[E,f,m],r,a,T,$,C,A),c=[I,S];if(null!=i&&c.push(i),C&&c.push(o),A){const e=s.makeTensorInfo([],"float32",ap.createScalarValue(u,"float32"));c.push(e),N.push(e)}F=s.runWebGLProgram(l,c,e)}const R=LH({inputs:{x:F},backend:s,attrs:{shape:x}});N.push(F);for(const e of N)s.disposeIntermediateTensorInfo(e);return R}var KH={kernelName:Uh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return qH({a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}},XH="return abs(x);",YH={kernelName:Bl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=TG(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Dl().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new lH(r.shape,XH):new XG(r.shape,XH),n.runWebGLProgram(a,[r],r.dtype)}},ZH=CH({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),JH={kernelName:Wl,backendName:"webgl",kernelFunc:ZH},QH=CH({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),ej={kernelName:Ul,backendName:"webgl",kernelFunc:QH},tj="return a + b;",nj=AH({opSnippet:tj,packedOpSnippet:tj,supportsComplex:!0,cpuKernelImpl:tG}),rj={kernelName:Vl,backendName:"webgl",kernelFunc:nj},aj={kernelName:Gl,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return wH({inputs:{x:a[0]},backend:r});if(a.length>Dl().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>Jp(e,t))),i=a.map((e=>e.shape)),o=Dl().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},sj={kernelName:Hl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ap.parseAxisParam(s,a.shape);let l=u;const c=Gk.getAxesPermutation(l,o);let d=a;null!=c&&(d=HH({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Gk.getInnerMostAxes(l.length,o)),Gk.assertAxesAreInnerMostDims("all",l,o);const[h,p]=Gk.computeOutAndReduceShapes(d.shape,l),f=LH({inputs:{x:d},backend:n,attrs:{shape:[-1,ap.sizeFromShape(p)]}}),m=WH(f,f.dtype,"all",n);let g;return g=LH(i?{inputs:{x:m},backend:n,attrs:{shape:Gk.expandShapeToKeepDim(h,u)}}:{inputs:{x:m},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}},ij={kernelName:jl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ap.parseAxisParam(s,a.shape);let l=u;const c=Gk.getAxesPermutation(l,o);let d=a;null!=c&&(d=HH({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Gk.getInnerMostAxes(l.length,o)),Gk.assertAxesAreInnerMostDims("any",l,o);const[h,p]=Gk.computeOutAndReduceShapes(d.shape,l),f=LH({inputs:{x:d},backend:n,attrs:{shape:[-1,ap.sizeFromShape(p)]}}),m=WH(f,f.dtype,"any",n);let g;return g=LH(i?{inputs:{x:m},backend:n,attrs:{shape:Gk.expandShapeToKeepDim(h,u)}}:{inputs:{x:m},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}},oj=class{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},uj=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ap.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=NV(o),l=GG("coords",o);let c,d;if(1===s){d=o+1;const e=NV(d);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else d=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],f=h.map((e=>"int "+e)),m=GG("sourceLocR",d-1).concat("inIdx.r"),g=GG("sourceLocG",d-1).concat("inIdx.g"),y=GG("sourceLocB",d-1).concat("inIdx.b"),b=GG("sourceLocA",d-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function lj(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=Gk.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new oj(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const d=lj(e,t,n,c);return e.disposeIntermediateTensorInfo(c),d}function cj(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const a=null!=r?r.shape:t.shape,s=a[a.length-1],i=Gk.computeOptimalWindowSize(s),o=new uj(a,i,n,null==r),u=null==r?[t]:[t,r],l=e.runWebGLProgram(o,u,"int32");if(l.shape.length===t.shape.length){const r=cj(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function dj(e,t,n,r){const a=[n];if(Gk.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Dl().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=Gk.computeOutAndReduceShapes(i.shape,a),l=ap.sizeFromShape(u),c=LH({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const d=lj(e,c,r);n.push(d);const h=LH({inputs:{x:d},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return cj(e,t,r)}var hj={kernelName:ql,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=ap.parseAxisParam(s,a.shape);const o=Gk.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=HH({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Gk.getInnerMostAxes(i.length,u.shape.length)),Gk.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const c=dj(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},pj={kernelName:Kl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=ap.parseAxisParam(s,a.shape);const o=Gk.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=HH({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Gk.getInnerMostAxes(i.length,u.shape.length)),Gk.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const c=dj(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},fj=CH({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),mj={kernelName:Xl,backendName:"webgl",kernelFunc:fj},gj=CH({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),yj={kernelName:Yl,backendName:"webgl",kernelFunc:gj},bj=CH({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),wj={kernelName:Zl,backendName:"webgl",kernelFunc:bj},xj=AH({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),vj={kernelName:Ql,backendName:"webgl",kernelFunc:xj},kj=CH({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Ij={kernelName:Jl,backendName:"webgl",kernelFunc:kj},Sj=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const w=4*Math.floor(s/4),x=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${w}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${w};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},Nj=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let w="0.0";if(b||(w="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const v=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${w};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${w});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${x});\n        }\n      }\n    `}},Ej={kernelName:ec,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;QU(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;ap.assert(Gk.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Gk.computePool2DInfo(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&ap.arraysEqual(l.inShape,l.outShape))return wH({inputs:{x:a},backend:n});const c=new Sj(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}},_j={kernelName:nc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=Gk.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),d=new Nj(c,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}},Tj={kernelName:rc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,d=Gk.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),h=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(h,[a],i.dtype)}},Cj={kernelName:tc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;QU([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Gk.computePool2DInfo(i.shape,o,u,1,l),d=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(c);return n.runWebGLProgram(d,[a],i.dtype)}},Aj={kernelName:ac,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return qH({a,b:s,transposeA:i,transposeB:o,backend:n})}},$j={kernelName:Kc,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a,mean:s,variance:i,offset:o,scale:u}=t;ap.assert(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ap.assert(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ap.assert(null==u||s.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=[a,s,i];let d=null;null!=o&&(d=o.shape,c.push(o));let h=null;null!=u&&(h=u.shape,c.push(u));const p=Dl().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Gk.assertAndGetBroadcastShape(e,t),Gk.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(Gk.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Gk.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(a.shape,s.shape,i.shape,d,h,l):new class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Gk.assertAndGetBroadcastShape(e,t),Gk.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(Gk.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Gk.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(a.shape,s.shape,i.shape,d,h,l);return n.runWebGLProgram(p,c,c[0].dtype)}},Fj=["x","y","z","w","u","v"];function Rj(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=ug.parseSliceParams(a,s,i);if(ug.assertParamsValid(a,o,u),0===ap.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=CG(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=ug.isSliceContinous(a.shape,o,u);if(l||!c){const e=Dl().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=NV(this.rank),n=GG("coords",this.rank),r=GG("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}(u):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=NV(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Fj.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Fj[t]} = start[${t}] + coords.${Fj[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}(u),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=ug.computeFlatOffset(t,ap.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}var Mj={kernelName:ih,backendName:"webgl",kernelFunc:Rj},Dj={kernelName:sc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ap.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=Gk.getReshaped(a.shape,s,o),l=Gk.getPermuted(u.length,s.length),c=Gk.getReshapedPermuted(a.shape,s,o),d=Gk.getSliceBeginCoords(i,s.length),h=Gk.getSliceSize(c,i,s.length),p=[],f=LH({inputs:{x:a},backend:n,attrs:{shape:u}}),m=HH({inputs:{x:f},backend:n,attrs:{perm:l}}),g=LH({inputs:{x:m},backend:n,attrs:{shape:c}}),y=Rj({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Oj={kernelName:ic,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=nG(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},Lj={kernelName:uc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=Gk.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Pj=AH({opSnippet:"return float(a != b);",cpuKernelImpl:IG,dtype:"bool"}),zj={kernelName:Fd,backendName:"webgl",kernelFunc:Pj};function Bj(e){const{inputs:t,backend:n}=e,{input:r}=t;return wH({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var Wj={kernelName:Hd,backendName:"webgl",kernelFunc:Bj},Uj={kernelName:lc,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return wH({inputs:{x:s},backend:r});const t=Rw(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=vH({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=Bj({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!ap.hasEncodingLoss(s.dtype,i)){const e=wH({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new XG(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",ap.getTypedArrayFromDType("bool",1)),t=Pj({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},Vj="return ceil(x);",Gj=CH({opSnippet:Vj,packedOpSnippet:Vj,cpuKernelImpl:aG}),Hj={kernelName:cc,backendName:"webgl",kernelFunc:Gj},jj={kernelName:dc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=Dl().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}(a.shape):new class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}(a.shape);const u=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,u)}};function qj(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var Kj={kernelName:pc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(r.shape),i=[qj(r,a.complexTensorInfos.real),qj(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};function Xj(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Yj(e){const{inputs:t,backend:n}=e,{input:r}=t;return wH({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var Zj={kernelName:td,backendName:"webgl",kernelFunc:Yj};function Jj(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Bj({inputs:{input:e},backend:n}))),a=e.map((e=>Yj({inputs:{input:e},backend:n}))),s=Jj(r,t,n),i=Jj(a,t,n),o=vH({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=ap.sizeFromShape(e.shape.slice(t));return LH({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Gk.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],u=sG(s,i,r,o),l=Gk.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Dl().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=Jj(e.slice(0,r),t,n),s=Jj(e.slice(r),t,n),i=Jj([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Dl().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Gk.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=NV(r),s=GG("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let d=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];d+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${Xj(i,u,t)}),\n            vec2(${Xj(l,u,t)}));\n        }`}const h=o.length,p=o[o.length-1];d+=`\n        return getChannel(\n          getT${h}(${Xj(i,u,p)}),\n          vec2(${Xj(l,u,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=Gk.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>LH({inputs:{x:e},attrs:{shape:[-1,ap.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new class{constructor(e){this.outputShape=[],this.outputShape=Gk.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}(s.map((e=>e.shape))),u=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=LH({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function Qj(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ap.parseAxisParam(a,t[0].shape)[0],i=Gk.computeOutShape(t.map((e=>e.shape)),s);if(0===ap.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>ap.sizeFromShape(e.shape)>0));if(1===o.length)return wH({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));return Gk.assertParamsConsistent(u,s),Jj(o,s,n)}var eq={kernelName:fc,backendName:"webgl",kernelFunc:Qj},tq=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let w="",x="";n&&(w=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${w}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}};function nq(e){let{x:t,filter:n,convInfo:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}=e;const l=t.shape,c=a.texData.get(t.dataId),d=r.inChannels,h=l[0]*l[1]*l[2],p=r.outChannels,f="channelsLast"===r.dataFormat;let m;const g=[];if((1!==h&&1!==p||!(d>1e3))&&c.isPacked&&f&&null!=c.texture&&l[2]%2!=0&&ap.arraysEqual(c.shape.slice(-3),l.slice(-3))){const e=l[0]*l[1]*(l[2]+1),d={dataId:t.dataId,shape:[1,e,r.inChannels],dtype:t.dtype},h=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,ap.assert(WU(c.shape,d.shape),(()=>`packed reshape ${c.shape} to ${d.shape} isn't free`));const p=LH({inputs:{x:n},backend:a,attrs:{shape:[1,r.inChannels,r.outChannels]}});g.push(p);const f=qH({a:d,b:p,backend:a,transposeA:!1,transposeB:!1,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o}),y=a.texData.get(f.dataId);ap.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=h,y.shape=r.outShape,m=wH({inputs:{x:f},backend:a}),m.shape=r.outShape,g.push(f)}else{const e=LH({inputs:{x:t},backend:a,attrs:{shape:[1,f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],r.inChannels]}}),c=LH({inputs:{x:n},backend:a,attrs:{shape:[1,r.inChannels,r.outChannels]}}),d=qH({a:e,b:c,transposeA:!1,transposeB:!1,backend:a,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o});m=LH({inputs:{x:d},backend:a,attrs:{shape:r.outShape}}),g.push(e),g.push(c),g.push(d)}for(const e of g)a.disposeIntermediateTensorInfo(e);return m}function rq(e){let{x:t,filter:n,convInfo:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}=e;const{filterWidth:l,filterHeight:c,inChannels:d,outWidth:h,outHeight:p,dataFormat:f}=r,m="channelsLast"===f,g=l*c*d,y=p*h,b=[g,y],w=[],x=LH({inputs:{x:t},backend:a,attrs:{shape:t.shape.slice(1)}}),v=LH({inputs:{x:n},backend:a,attrs:{shape:[1,g,ap.sizeFromShape(n.shape)/g]}});w.push(x),w.push(v);const k=new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=AV(this.outputShape.length);const{dataFormat:n}=t,r=tV(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}(b,r),I=[x.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],S=a.runWebGLProgram(k,[x],"float32",I),N=LH({inputs:{x:S},backend:a,attrs:{shape:[1,b[0],b[1]]}});w.push(S),w.push(N);const E=null!=s,_=null!=i,T="leakyrelu"===u,C=u?$H(u,!0):null,A=new FH(N.shape,v.shape,[1,y,r.outChannels],!0,!1,E,C,_,T),$=[N,v];if(s&&$.push(s),_&&$.push(i),T){const e=a.makeTensorInfo([],"float32",ap.createScalarValue(o,"float32"));$.push(e),w.push(e)}const F=a.runWebGLProgram(A,$,"float32"),R=LH({inputs:{x:F},backend:a,attrs:{shape:m?[1,p,h,r.outChannels]:[1,r.outChannels,p,h]}});w.push(F);for(const e of w)a.disposeIntermediateTensorInfo(e);return R}var aq={kernelName:mc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,d=Gk.convertConv2DDataFormat(u),h=Gk.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,d);let p;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(Dl().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])p=rq({x:a,filter:s,convInfo:h,backend:n});else{const e=new tq(h);p=n.runWebGLProgram(e,[a,s],"float32")}else p=nq({x:a,filter:s,convInfo:h,backend:n});const f=LH({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),f}},sq={kernelName:gc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,d=Gk.convertConv2DDataFormat(u),h=Gk.computeConv2DInfo(a.shape,c,i,1,o,l,!1,d),p=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a,s],"float32")}},iq={kernelName:yc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=Gk.convertConv2DDataFormat(l),h=Gk.computeConv2DInfo(i,s.shape,o,1,u,c,!1,d),p=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a,s],"float32")}},oq={kernelName:bc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=Gk.computeConv3DInfo(a.shape,s.shape,i,u,o),c=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},uq={kernelName:wc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,l=Gk.computeConv3DInfo(a.shape,u,i,1,o),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},lq={kernelName:xc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,l=Gk.computeConv3DInfo(u,s.shape,o,1,i),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},cq=CH({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),dq={kernelName:vc,backendName:"webgl",kernelFunc:cq},hq=CH({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),pq={kernelName:kc,backendName:"webgl",kernelFunc:hq},fq={kernelName:Sc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,d]=n;this.outputShape=[l,c,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,w,x]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${w};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}},mq=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${gq(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${NV(r)} coords = getOutputCoords();\n        int end = ${yq(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${yq(r,"coords")} = idx;\n          val += getX(${gq(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}};function gq(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function yq(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}var bq={kernelName:Ic,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,l=Gk.getAxesPermutation([s],u);let c=a;null!=l&&(c=HH({inputs:{x:a},backend:n,attrs:{perm:l}}));const d=Gk.getInnerMostAxes(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const h=c.shape[d];let p=wH({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(h))-1;e++){const t=new mq(c.shape,!1,o),r=[[e]],a=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new mq(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=HH({inputs:{x:p},backend:n,attrs:{perm:Gk.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},wq={kernelName:Nc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=nG(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=rG(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},xq={kernelName:Ec,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d="NHWC"===i?[o,u,l,c]:[o,c,u,l],h=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(d,s,i);return n.runWebGLProgram(h,[a],a.dtype)}},vq=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=AV(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}},kq=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=AV(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,d=c;let h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)h+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;h+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)h+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(d+1)/2;e++){const t=2*e;if(h+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,h+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?ap.nearestLargerEven(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,u>1&&(h+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),h+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):h+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(h+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(h+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(h+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}},Iq={kernelName:_c,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),ap.assert(Gk.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const d=Gk.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!0);let h;h=Dl().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new kq(d):new vq(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[a,s],"float32",p)}},Sq={kernelName:Tc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,d=Gk.computeConv2DInfo(a.shape,c,i,o,u,l,!0),h=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(h,[a,s],"float32")}},Nq={kernelName:Cc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,d=Gk.computeConv2DInfo(c,s.shape,i,o,u,l,!0),h=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(h,[a,s],"float32")}},Eq={kernelName:Ac,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=ap.sizeFromShape(r.shape),i=LH({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),u=n.runWebGLProgram(o,[i],i.dtype),l=LH({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}},_q={kernelName:$c,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=Gk.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u);let c;const d=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(l);c=n.runWebGLProgram(d,[a,s],"float32");const h=LH({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),h}},Tq={kernelName:Dc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=Gk.decodeEinsumEquation(a,s.length);Gk.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:c}=Gk.getEinsumComputePath(o,u),d=c.length;let h=null,p=i.length;const f=[];for(let e=0;e<d;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Gk.getEinsumPermutation(p,u[t]);let a;Gk.isIdentityPermutation(e)?a=s[t]:(a=HH({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);ap.arraysEqual(a.shape,i)||(a=LH({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===h?h=a:(h=DH({inputs:{a,b:h},backend:n}),f.push(h))}e<d-1&&(l[e]>=0&&(h=VH({inputs:{x:h},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},Cq=CH({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Aq={kernelName:Oc,backendName:"webgl",kernelFunc:Cq},$q={kernelName:Lc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Dl().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bH("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new yH("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},Fq=AH({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:iG}),Rq={kernelName:zc,backendName:"webgl",kernelFunc:Fq},Mq=CH({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Gk.ERF_P};\n  float a1 = ${Gk.ERF_A1};\n  float a2 = ${Gk.ERF_A2};\n  float a3 = ${Gk.ERF_A3};\n  float a4 = ${Gk.ERF_A4};\n  float a5 = ${Gk.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Dq={kernelName:Pc,backendName:"webgl",kernelFunc:Mq},Oq=CH({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:oG,dtype:"float32"}),Lq={kernelName:Bc,backendName:"webgl",kernelFunc:Oq};function Pq(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(ap.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),LH({inputs:{x:s},backend:r,attrs:{shape:o}})}var zq={kernelName:Wc,backendName:"webgl",kernelFunc:Pq},Bq="return exp(x) - 1.0;",Wq=CH({opSnippet:Bq,packedOpSnippet:Bq,cpuKernelImpl:uG}),Uq={kernelName:Uc,backendName:"webgl",kernelFunc:Wq},Vq=class{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function Gq(e,t,n){const r=n.texData.get(e.dataId),a=ap.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=LH({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new Vq("real",o,t),l=new Vq("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],d=n.runWebGLProgram(u,c,"float32"),h=n.runWebGLProgram(l,c,"float32"),p=vH({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);const f=LH({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}var Hq={kernelName:Vc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Gq(r,!1,n)}};function jq(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||ap.inferDtype(a),"string"===s){const e=ap.getArrayFromDType(s,ap.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var qq,Kq={kernelName:Gc,backendName:"webgl",kernelFunc:jq},Xq={kernelName:Hc,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:r}=t,a=n,s=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(r.shape);return a.runWebGLProgram(s,[r],r.dtype)}},Yq="return floor(x);",Zq=CH({opSnippet:Yq,packedOpSnippet:Yq,cpuKernelImpl:lG}),Jq={kernelName:jc,backendName:"webgl",kernelFunc:Zq},Qq=AH({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),eK={kernelName:qc,backendName:"webgl",kernelFunc:Qq},tK={kernelName:Bh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],d=[l,u,s];(o||i)&&(null==qq&&(qq=document.createElement("canvas").getContext("2d")),qq.canvas.width=u,qq.canvas.height=l,qq.drawImage(a,0,0,u,l),a=qq.canvas);const h=n.makeTensorInfo(c,"int32");n.texData.get(h.dataId).usage=qW.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);const p=Dl().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=tV(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(d):new class{constructor(e){this.variableNames=["A"];const t=tV(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}},nK={kernelName:Vh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=Gk.convertConv2DDataFormat(c),g=Gk.computeConv2DInfo(a.shape,s.shape,u,d,l,h,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Dl().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=rq({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,u=p?$H(p,!1):null,l=new tq(g,e,u,t,r),c=[a,s];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",ap.createScalarValue(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=nq({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const w=LH({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}},rK={kernelName:Gh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),ap.assert(Gk.eitherStridesOrDilationsAreOne(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=Gk.computeConv2DInfo(a.shape,s.shape,u,m,l,d,!0),y=Dl().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=h?$H(h,y):null,w=[a,s],x=null!=i,v=null!=o,k="leakyrelu"===h;if(x&&w.push(i),v&&w.push(o),k){const e=n.makeTensorInfo([],"float32",ap.createScalarValue(p,"float32"));w.push(e),f.push(e)}let I;I=y?new kq(g,x,b,v,k):new vq(g,x,b,v,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,w,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}},aK={kernelName:Yc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=ap.sizeFromShape(r.shape),[u,l,c,d]=Gk.prepareAndValidate(r,a),h=LH({inputs:{x:a},backend:n,attrs:{shape:[l,i]}}),p=LH({inputs:{x:r},backend:n,attrs:{shape:[ap.sizeFromShape(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=cG(e,t,r.dtype,l,i,c,d,r.shape,o);return n.makeTensorInfo(u,r.dtype,s.values)}const f=new class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=NV(t.length),a=NV(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}(i,d,[l,c]),m=n.runWebGLProgram(f,[p,h],p.dtype),g=LH({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};function sK(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=ap.parseAxisParam(i,a.shape)[0];if(Dl().get("DEBUG")){const e=n.readSync(s.dataId),t=a.shape[u];for(let n=0;n<e.length;++n){const r=e[n];ap.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=Gk.segment_util.collectGatherOpShapeInfo(a,s,u,o),c=ap.sizeFromShape(s.shape),d=[],h=LH({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=LH({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});d.push(h),d.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(h),r=dG(t,e,f);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=NV(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}(h.shape,f),g=n.runWebGLProgram(m,[h,p],h.dtype);d.push(g);const y=LH({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var iK={kernelName:Xc,backendName:"webgl",kernelFunc:sK},oK=AH({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:hG,dtype:"bool"}),uK={kernelName:Zc,backendName:"webgl",kernelFunc:oK},lK=AH({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:pG}),cK={kernelName:Jc,backendName:"webgl",kernelFunc:lK},dK={kernelName:ed,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Gq(r,!0,n)}},hK=CH({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),pK={kernelName:nd,backendName:"webgl",kernelFunc:hK},fK=CH({opSnippet:"return float(isinf(x));",dtype:"bool"}),mK={kernelName:rd,backendName:"webgl",kernelFunc:fK},gK=CH({opSnippet:"return float(isnan(x));",dtype:"bool"}),yK={kernelName:ad,backendName:"webgl",kernelFunc:gK},bK=AH({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:fG,dtype:"bool"}),wK={kernelName:id,backendName:"webgl",kernelFunc:bK},xK=AH({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:mG,dtype:"bool"}),vK={kernelName:od,backendName:"webgl",kernelFunc:xK},kK={kernelName:ud,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=gG(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},IK=CH({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:yG}),SK={kernelName:ld,backendName:"webgl",kernelFunc:IK},NK=CH({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),EK={kernelName:cd,backendName:"webgl",kernelFunc:NK},_K=AH({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),TK={kernelName:dd,backendName:"webgl",kernelFunc:_K},CK=CH({opSnippet:"return float(!(x >= 1.0));"}),AK={kernelName:hd,backendName:"webgl",kernelFunc:CK},$K=AH({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),FK={kernelName:pd,backendName:"webgl",kernelFunc:$K},RK={kernelName:md,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,l=Dl().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(a.shape,s,i,o,u):new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(a.shape,s,i,o,u);return n.runWebGLProgram(l,[a],a.dtype)}},MK={kernelName:gd,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,d=new class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(a.shape,o,u,l,c);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};function DK(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=ap.parseAxisParam(s,a.shape);let l=u;const c=Gk.getAxesPermutation(l,o),d=null!=c,h=n.shouldExecuteOnCPU([a]);let p=a;if(d){if(h){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=WG(e,a.shape,a.dtype,c,t);p=n.makeTensorInfo(t,a.dtype),n.texData.get(p.dataId).values=r}else p=UH(a,c,n);l=Gk.getInnerMostAxes(l.length,o)}Gk.assertAxesAreInnerMostDims("max",l,o);const[f,m]=Gk.computeOutAndReduceShapes(p.shape,l);let g,y=f;if(i&&(y=Gk.expandShapeToKeepDim(f,u)),h){const e=n.texData.get(p.dataId).values,t=bG(e,ap.sizeFromShape(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=ap.sizeFromShape(t),s=LH({inputs:{x:e},attrs:{shape:[ap.sizeFromShape(e.shape)/a,a]},backend:r}),i=WH(s,e.dtype,"max",r),o=LH({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return d&&n.disposeIntermediateTensorInfo(p),g}var OK={kernelName:yd,backendName:"webgl",kernelFunc:DK},LK=AH({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:wG}),PK={kernelName:bd,backendName:"webgl",kernelFunc:LK},zK={kernelName:wd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;QU(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;ap.assert(Gk.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Gk.computePool2DInfo(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&ap.arraysEqual(l.inShape,l.outShape))return wH({inputs:{x:a},backend:n});const c=new Sj(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}},BK={kernelName:vd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=Gk.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),d=new Nj(c,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}},WK={kernelName:kd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,d=Gk.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),h=new Nj(d,"max",!0),p=n.runWebGLProgram(h,[i],i.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,d=u-1-e.padInfo.top,h=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d),m=n.runWebGLProgram(f,[a,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},UK={kernelName:xd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;QU([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=Gk.computePool2DInfo(o.shape,u,l,1,c,d),p=new Sj(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},VK={kernelName:Id,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=n,l=r;ap.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));const c=[1,1];ap.assert(Gk.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const d=Gk.computePool2DInfo(a.shape,s,i,c,o),[h,p]=function(e,t,n,r){let a=new Sj(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new Sj(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(a,u,d,l);return[h,p]}},GK={kernelName:Sd,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,{keepDims:s,axis:i}=n,o=r,u=a.shape.length,l=ap.parseAxisParam(i,a.shape);let c=l;const d=Gk.getAxesPermutation(c,u),h=null!=d,p=o.shouldExecuteOnCPU([a]),f=[];let m=a;if(h){if(p){const e=o.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=a.shape[d[e]];const n=WG(e,a.shape,a.dtype,d,t);m=o.makeTensorInfo(t,a.dtype),o.texData.get(m.dataId).values=n}else m=UH(a,d,o);f.push(m),c=Gk.getInnerMostAxes(c.length,u)}Gk.assertAxesAreInnerMostDims("sum",c,u);const[g,y]=Gk.computeOutAndReduceShapes(m.shape,c);let b=g;s&&(b=Gk.expandShapeToKeepDim(g,l));const w=function(e,t,n,r){const a=ap.sizeFromShape(t),s=LH({inputs:{x:e},attrs:{shape:[ap.sizeFromShape(e.shape)/a,a]},backend:r}),i=WH(s,"float32","mean",r),o=LH({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(m,y,b,o);for(const e of f)o.disposeIntermediateTensorInfo(e);return w}},HK={kernelName:Nd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ap.parseAxisParam(s,a.shape);let l=u;const c=Gk.getAxesPermutation(l,o);let d=a;null!=c&&(d=HH({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Gk.getInnerMostAxes(l.length,a.shape.length)),Gk.assertAxesAreInnerMostDims("min",l,o);const[h,p]=Gk.computeOutAndReduceShapes(d.shape,l),f=LH({inputs:{x:d},backend:n,attrs:{shape:[-1,ap.sizeFromShape(p)]}}),m=WH(f,f.dtype,"min",n);let g;return g=LH(i?{inputs:{x:m},backend:n,attrs:{shape:Gk.expandShapeToKeepDim(h,u)}}:{inputs:{x:m},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}},jK=AH({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:xG}),qK={kernelName:Ed,backendName:"webgl",kernelFunc:jK},KK={kernelName:_d,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a}=t,{paddings:s,mode:i}=r,o=Dl().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=NV(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=GG("rc",r),u=GG("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=NV(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(a.shape,s,i);return n.runWebGLProgram(o,[a],a.dtype)}},XK=AH({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),YK={kernelName:Td,backendName:"webgl",kernelFunc:XK},ZK=AH({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),JK={kernelName:Mc,backendName:"webgl",kernelFunc:ZK},QK="return a - b;",eX=AH({opSnippet:QK,packedOpSnippet:QK,supportsComplex:!0,cpuKernelImpl:PG}),tX={kernelName:Th,backendName:"webgl",kernelFunc:eX};function nX(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=ap.parseAxisParam([s],a.shape),o=DK({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=Gk.expandShapeToKeepDim(o.shape,i),l=LH({inputs:{x:o},backend:n,attrs:{shape:u}}),c=eX({inputs:{a,b:l},backend:n}),d=Oq({inputs:{x:c},backend:n}),h=VH({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),p=LH({inputs:{x:h},backend:n,attrs:{shape:u}}),f=ZK({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}var rX={kernelName:gh,backendName:"webgl",kernelFunc:nX},aX={kernelName:Cd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:nX({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],d=new class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}(l,c,s),h=[[i]],p=n.runWebGLProgram(d,[u],"int32",h);return o||n.disposeIntermediateTensorInfo(u),p}},sX={kernelName:$d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=kG(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Dl().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new lH(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new XG(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(a,[r],r.dtype)}},iX=VI.nonMaxSuppressionV3Impl,oX={kernelName:Rd,backendName:"webgl",kernelFunc:function(e){Gk.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:d}=iX(l,c,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},uX=VI.nonMaxSuppressionV4Impl,lX={kernelName:Md,backendName:"webgl",kernelFunc:function(e){Gk.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h,validOutputs:p}=uX(c,d,i,o,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},cX=VI.nonMaxSuppressionV5Impl,dX={kernelName:Dd,backendName:"webgl",kernelFunc:function(e){Gk.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),d=n.readSync(s.dataId),h=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=cX(c,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},hX={kernelName:Ld,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=ap.sizeFromShape(a.shape),l=new class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(u,s,i,o),c=LH({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(l,[c],a.dtype);n.disposeIntermediateTensorInfo(c);const h=LH({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(d),h}};function pX(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Bj({inputs:{input:r},backend:n}),t=pX({inputs:{x:e},backend:n}),a=Yj({inputs:{input:r},backend:n}),s=pX({inputs:{x:a},backend:n}),i=vH({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return jq({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var fX={kernelName:Ph,backendName:"webgl",kernelFunc:pX},mX={kernelName:Od,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Bj({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Yj({inputs:{input:a},backend:r}),i=pX({inputs:{x:s},backend:r}),o=vH({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return jq({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},gX={kernelName:Pd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Pq({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ap.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ap.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=Qj({inputs:t.map((e=>{const t=Pq({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},yX=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===ap.sizeFromShape(a.shape))return jq({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}});const o=Dl().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=NV(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=GG("rc",r),u=GG("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${d[e]}\n        if (${h}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=NV(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}(a.shape,s,i),u=[[i]];return n.runWebGLProgram(o,[a],a.dtype,u)},bX={kernelName:zd,backendName:"webgl",kernelFunc:yX},wX=AH({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),xX={kernelName:Wd,backendName:"webgl",kernelFunc:wX},vX={kernelName:Vd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],l=ap.parseAxisParam(s,a.shape);let c=l;const d=Gk.getAxesPermutation(c,o);let h,p=a;if(null!=d&&(p=HH({inputs:{x:a},backend:n,attrs:{perm:d}}),c=Gk.getInnerMostAxes(c.length,o),u.push(p)),Gk.assertAxesAreInnerMostDims("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:a}=SG(p.shape,p.dtype,e,c);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=Gk.computeOutAndReduceShapes(p.shape,c),r=ap.sizeFromShape(t),s=LH({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=WH(s,Qp(a.dtype),"prod",n);h=LH({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(h);const e=Gk.expandShapeToKeepDim(h.shape,l);h=LH({inputs:{x:h},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},kX=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=NG(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},IX={kernelName:Gd,backendName:"webgl",kernelFunc:kX},SX=CH({opSnippet:"return 1.0 / x;"}),NX={kernelName:jd,backendName:"webgl",kernelFunc:SX},EX=CH({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_X={kernelName:qd,backendName:"webgl",kernelFunc:EX},TX=CH({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),CX={kernelName:Qd,backendName:"webgl",kernelFunc:TX},AX={kernelName:Zd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Dl().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],"float32")}},$X={kernelName:Jd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},FX={kernelName:Xd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Dl().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],a.dtype)}},RX={kernelName:Yd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},MX={kernelName:eh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=ap.parseAxisParam(s,a.shape);if(0===i)return wH({inputs:{x:a},backend:n});const u=Dl().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=GG("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=NV(n);var o;function u(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),u(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",u(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",u(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",u(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(a.shape,o):new class{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=NV(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}},DX={kernelName:Wh,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:a}=t,{radians:s,fillValue:i,center:o}=n,u=r,l=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(a.shape,i),[c,d]=Gk.getImageCenter(o,a.shape[1],a.shape[2]),h=[[c,d,Math.sin(s),Math.cos(s)]];return u.runWebGLProgram(l,[a],a.dtype,h)}},OX=CH({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),LX={kernelName:th,backendName:"webgl",kernelFunc:OX},PX=CH({opSnippet:"return inversesqrt(x);",cpuKernelImpl:EG}),zX={kernelName:nh,backendName:"webgl",kernelFunc:PX},BX=class{constructor(e,t,n,r,a,s){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=NV(a.length),o=NV(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const l=`getIndices(${u})`;let c="";1===r?c="i":2===r&&(c="i, coords[1]");const d=`getUpdates(${c})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${o} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}},WX={kernelName:rh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=Gk.calculateShapes(s,a,i),h=[d/l,l];if(0===d)return n.makeTensorInfo(i,a.dtype);const p=LH({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=LH({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new BX(u,o,p.shape.length,f.shape.length,c,h),y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=LH({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}},UX={kernelName:ah,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=NV(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Jp(a.dtype,s.dtype))}},VX=CH({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Gk.SELU_SCALEALPHA};\n  float scale = ${Gk.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),GX={kernelName:sh,backendName:"webgl",kernelFunc:VX},HX=CH({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:_G}),jX={kernelName:ch,backendName:"webgl",kernelFunc:HX},qX=CH({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),KX={kernelName:lh,backendName:"webgl",kernelFunc:qX},XX=CH({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),YX={kernelName:oh,backendName:"webgl",kernelFunc:XX},ZX=CH({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),JX={kernelName:uh,backendName:"webgl",kernelFunc:ZX},QX=CH({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),eY={kernelName:dh,backendName:"webgl",kernelFunc:QX},tY={kernelName:fh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ap.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=yX({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=Gk.getReshaped(c.shape,s,o,!1),h=Gk.getPermuted(d.length,s.length,!1),p=Gk.getReshapedPermuted(c.shape,s,o,!1),f=LH({inputs:{x:c},backend:n,attrs:{shape:d}}),m=HH({inputs:{x:f},backend:n,attrs:{perm:h}}),g=LH({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},nY={kernelName:yh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[d,h,p,f,m]=AG(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},rY={kernelName:bh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,d]=$G(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},aY={kernelName:wh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=FG(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},sY={kernelName:xh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=FG(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},iY={kernelName:vh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:d}=Gk.calculateShapes(s,a,o),h=new BX(l,u,a.shape.length,s.shape.length,c,[d,1],!1),p=n.runWebGLProgram(h,[s,a,i],s.dtype),f=LH({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},oY={kernelName:mh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ap.parseAxisParam(i,a.shape)[0],u=Gk.prepareSplitSize(a,s,o),l=a.shape.length,c=new Array(l).fill(0),d=a.shape.slice();return u.map((e=>{const t=[...d];t[o]=e;const r=Rj({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},uY="return sqrt(x);",lY=CH({opSnippet:uY,packedOpSnippet:uY,cpuKernelImpl:RG}),cY={kernelName:hh,backendName:"webgl",kernelFunc:lY},dY=CH({opSnippet:"return x * x;"}),hY={kernelName:Ih,backendName:"webgl",kernelFunc:dY},pY="return (a - b) * (a - b);",fY=AH({opSnippet:pY,packedOpSnippet:pY}),mY={kernelName:kh,backendName:"webgl",kernelFunc:fY},gY={kernelName:zh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,i=new XG(a.shape,s);return r.runWebGLProgram(i,[a],a.dtype)}},yY={kernelName:Sh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:w,strides:x}=ug.sliceInfo(a.shape,s,i,o,u,l,c,d,h);let v;if(m)v=LH({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){ap.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=ug.computeOutShape(b,w,x),t=Rj({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});v=LH({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=wm(a.shape,a.dtype,e),r=MG(p,t,x,b);v=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=NV(n.length),s=NV(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(b,x,p);v=n.runWebGLProgram(e,[a],a.dtype)}const k=LH({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},bY={kernelName:Nh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[f,m]=DG(h,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},wY={kernelName:Eh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,d]=OG(o,u,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}},xY={kernelName:_h,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=LG(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},vY=CH({opSnippet:"return tan(x);"}),kY={kernelName:Ch,backendName:"webgl",kernelFunc:vY},IY=CH({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),SY={kernelName:Ah,backendName:"webgl",kernelFunc:IY};function NY(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>ap.decodeString(e))):e,r=wm(a.shape,a.dtype,t),i=zG(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=NV(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var EY={kernelName:$h,backendName:"webgl",kernelFunc:NY},_Y=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function TY(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function CY(e){let t=1;for(;t<e;)t*=2;return t}var AY,$Y,FY,RY,MY,DY=[KH,YH,JH,ej,rj,aj,sj,ij,hj,pj,mj,yj,wj,vj,Ij,Ej,_j,Tj,Cj,Aj,$j,Dj,Oj,Lj,Uj,Hj,jj,kH,Kj,eq,aq,sq,iq,oq,uq,lq,dq,pq,fq,bq,wq,xq,Iq,Sq,Nq,Eq,_q,Tq,Aq,$q,Rq,Dq,Lq,zq,Uq,Hq,Kq,Xq,Jq,eK,tK,nK,rK,aK,iK,uK,cK,xH,dK,Zj,pK,mK,yK,NH,wK,vK,kK,SK,EK,TK,AK,FK,RK,MK,OK,PK,zK,BK,WK,UK,VK,GK,HK,qK,KK,YK,aX,OH,sX,oX,lX,dX,zj,hX,mX,gX,bX,xX,TH,vX,IX,Wj,JK,NX,_X,CX,PH,AX,$X,FX,RX,MX,DX,LX,zX,WX,UX,GX,jX,KX,YX,JX,Mj,rX,eY,tY,nY,rY,aY,sY,iY,oY,cY,hY,mY,gY,yY,bY,wY,xY,tX,GH,kY,SY,EY,{kernelName:Fh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Dl().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Dl().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([a])||c<o||s>u){const e=n.readSync(a.dataId),[t,r]=BG(e,l,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[a,jq({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const d=n.texData.get(a.dataId),h=null!==d&&d.isPacked,p=h?n.unpackTensor(a):a,f=ap.sizeFromShape(l)/c,m=LH({inputs:{x:p},attrs:{shape:[f,c]},backend:n});h&&TY(n,p);const g=CY(s),y=CY(c);let b=null;const w=()=>null===b?[m,m]:[m,b],x=(e,t,r)=>{const a=w(),s=new class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),TY(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)x(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=w(),r=new _Y([f,e/2]),a=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),TY(n,s);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)x(o,e,b.shape)}let v=b;b=Rj({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),TY(n,v);let k=sK({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});TY(n,m);const I=l.slice(0,-1);I.push(s),v=b,b=LH({inputs:{x:b},attrs:{shape:I},backend:n}),TY(n,v);const S=k;return k=LH({inputs:{x:k},attrs:{shape:I},backend:n}),TY(n,S),[k,b]}},{kernelName:Rh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,d,h,p]=a.shape,[f,m]=null!=l?l:[d,h],g=[c,f,m,p],y=new class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(d,h,i,o,u,g);return n.runWebGLProgram(y,[a,s],"float32")}},jH,{kernelName:Dh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;QU(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=UG(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:Oh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){h[s]=e;const t=Rj({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),r=LH({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},{kernelName:Lh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let l=0;const c=Gk.getAxesPermutation([l],o);let d=a;null!=c&&(d=HH({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(d),l=Gk.getInnerMostAxes(1,o)[0]);const h=Gk.segment_util.computeOutShape(d.shape,l,i),p=ap.sizeFromShape([d.shape[l]]),f=LH({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=Qp(a.dtype),g=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],l=Gk.segment_util.segOpComputeOptimalWindowSize(o,s),c={windowSize:l,inSize:o,batchSize:i,numSegments:s},d=new class{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}(c,t),h=n.compileAndRun(d,[e,r],a);if(u.push(h),h.shape[1]===s)return h;const p=kX({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=NY({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});return u.push(p),u.push(f),g(h,t,f,a,s)},y=LH({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:h}});let b=y;if(null!=c){u.push(y);const e=Gk.getUndoAxesPermutation(c);b=HH({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},fX];for(const e of DY)Jh(e);($Y=AY||(AY={}))[$Y.float32=0]="float32",$Y[$Y.int32=1]="int32",$Y[$Y.bool=2]="bool",$Y[$Y.string=3]="string",$Y[$Y.complex64=4]="complex64",(RY=FY||(FY={}))[RY.linear=0]="linear",RY[RY.relu=1]="relu",RY[RY.relu6=2]="relu6",RY[RY.prelu=3]="prelu",RY[RY.leakyrelu=4]="leakyrelu",RY[RY.sigmoid=5]="sigmoid",RY[RY.elu=6]="elu";var OY={kernelName:Uh,backendName:"wasm",setupFunc:function(e){MY=e.wasm.cwrap(Uh,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r,h=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=FY[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const y=u?a.shape[2]:a.shape[1],b=l?s.shape[1]:s.shape[2],w=Gm.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),x=n.makeOutput([...w,y,b],a.dtype),v=n.dataIdMap.get(x.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return MY(h,k,a.shape.length,p,I,s.shape.length,u,l,g,f,m,d||0,v),x}};function LY(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===ap.sizeFromShape(i.shape)||n(s,AY[a.dtype],o),i}}}var PY=LY(Bl);function zY(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,u=t.dataIdMap.get(i.dataId).id,l=null!=n?n:s.dtype,c=Gk.assertAndGetBroadcastShape(s.shape,i.shape),d=t.makeOutput(c,l);if(0===ap.sizeFromShape(c))return d;const h=new Uint8Array(new Int32Array(s.shape).buffer),p=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(d.dataId).id;return r(o,h,s.shape.length,u,p,i.shape.length,AY[s.dtype],f),d}}}var BY,WY=zY(Vl),UY={kernelName:Gl,backendName:"wasm",setupFunc:function(e){BY=e.wasm.cwrap(Gl,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===ap.sizeFromShape(r.shape))return r;const a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return BY(s,a.length,AY[r.dtype],i),r}};function VY(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var GY,HY={kernelName:Qc,backendName:"wasm",kernelFunc:VY};function jY(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=VY({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(l.dataId).id,h=new Uint8Array(new Int32Array(s).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return GY(c,p,u.shape.length,AY[u.dtype],d,h,s.length),l}var qY,KY={kernelName:Mh,backendName:"wasm",kernelFunc:jY,setupFunc:function(e){GY=e.wasm.cwrap(Mh,null,["number","array","number","number","number","array","number"])}};function XY(e,t,n){const r=e.shape,a=e.shape.length,s=ap.parseAxisParam(t,r);let i=s;const o=Gk.getAxesPermutation(i,a);let u=null,l=!1;if(null!=o){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=Gk.getInnerMostAxes(i.length,a),u=jY({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}var YY,ZY,JY,QY={kernelName:Hl,backendName:"wasm",setupFunc:function(e){qY=e.wasm.cwrap(Hl,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:d,inputWasTransposed:h}=XY(i,a,t);h&&(u=l,o=t.dataIdMap.get(l.dataId).id);const p=u.shape.length;Gk.assertAxesAreInnerMostDims("all",c,p);const[f,m]=Gk.computeOutAndReduceShapes(u.shape,c),g=ap.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ap.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;qY(o,g,e)}if(h&&t.disposeData(l.dataId),s){const e=Gk.expandShapeToKeepDim(y.shape,d);y.shape=e}return y}},eZ={kernelName:jl,backendName:"wasm",setupFunc:function(e){YY=e.wasm.cwrap(jl,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:d,inputWasTransposed:h}=XY(i,a,t);h&&(u=l,o=t.dataIdMap.get(l.dataId).id);const p=u.shape.length;Gk.assertAxesAreInnerMostDims("any",c,p);const[f,m]=Gk.computeOutAndReduceShapes(u.shape,c),g=ap.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ap.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;YY(o,g,e)}if(h&&t.disposeData(l.dataId),s){const e=Gk.expandShapeToKeepDim(y.shape,d);y.shape=e}return y}},tZ={kernelName:ql,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,u=s;const{transposed:l,axes:c,inputWasTransposed:d}=XY(s,a,t);if(d){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,o=e)}const h=u.shape.slice(0,-1),p=t.makeOutput(h,"int32"),f=t.dataIdMap.get(p.dataId).id,m=ap.sizeFromShape(p.shape),g=u.shape[c[0]];return ZY(o,AY[u.dtype],m,g,f),d&&t.disposeData(l.dataId),p},setupFunc:function(e){ZY=e.wasm.cwrap(ql,null,["number","number","number","number","number"])}},nZ={kernelName:ec,backendName:"wasm",setupFunc:function(e){JY=e.wasm.cwrap(ec,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Gk.computePool2DInfo(a.shape,i,o,1,u,l),d=c.filterHeight,h=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,w=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const x=r.makeOutput(c.outShape,"float32"),v=r.dataIdMap.get(x.dataId).id;return JY(s,a.shape[0],a.shape[1],a.shape[2],d,h,p,f,m,g,y,b,w,v),x}};function rZ(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=ap.sizeFromShape(r.shape),i=ap.inferFromImplicitShape(a,s);return ap.assert(s===ap.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var aZ,sZ={kernelName:Kd,backendName:"wasm",kernelFunc:rZ},iZ={kernelName:ac,backendName:"wasm",setupFunc:function(e){aZ=e.wasm.cwrap(ac,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[l-1]:s.shape[l-2],h=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ap.sizeFromShape(f),y=ap.sizeFromShape(m),b=Gm.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,p]);ap.assert(c===d,(()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[y,p,d]:[y,d,p],x=rZ({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,h]:[g,h,c]}}),v=rZ({inputs:{x:s},backend:n,attrs:{shape:w}}),k=n.dataIdMap.get(x.dataId).id,I=n.dataIdMap.get(v.dataId).id,S=i?x.shape[2]:x.shape[1],N=o?v.shape[1]:v.shape[2],E=Math.max(g,y),_=n.makeOutput([E,S,N],x.dtype),T=n.dataIdMap.get(_.dataId).id,C=new Uint8Array(new Int32Array(x.shape).buffer),A=new Uint8Array(new Int32Array(v.shape).buffer);return aZ(k,C,x.shape.length,I,A,v.shape.length,i,o,T),n.disposeData(x.dataId),n.disposeData(v.dataId),_.shape=b,_}};function oZ(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=ug.parseSliceParams(t,n,r),o=ug.isSliceContinous(t.shape,s,i),u=a.readSync(t.dataId),l=a.makeOutput(i,t.dtype),c=ap.computeStrides(t.shape),d=a.dataIdMap.get(l.dataId);if(o){const e=ug.computeFlatOffset(s,c);return"string"===t.dtype?d.stringBytes=u.slice(e,e+ap.sizeFromShape(i)):a.typedArrayFromHeap(l).set(u.subarray(e,e+ap.sizeFromShape(i))),l}if("string"===t.dtype){const e=IL(u,s,i,t.shape,t.dtype);return d.stringBytes=e,l}const h=a.typedArrayFromHeap(l),p=t.shape.length;if(2===p)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(u,c[0],h,s,i);else if(3===p)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],d=u+s[1];for(let a=o;a<c;a++)for(let o=u;o<d;o++){const u=a*t+o*n+l;r.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(u,c[0],c[1],h,s,i);else if(4===p)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],d=u+i[0],h=l+i[1],p=c+i[2],f=s[3];for(let s=u;s<d;s++)for(let u=l;u<h;u++)for(let l=c;l<p;l++){const c=s*t+u*n+l*r+f;a.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(u,c[0],c[1],c[2],h,s,i);else{const e=IL(u,s,i,t.shape,t.dtype);h.set(e)}return l}var uZ={kernelName:ih,backendName:"wasm",kernelFunc:oZ},lZ={kernelName:sc,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),u=Gk.getReshaped(a.shape,s,o),l=Gk.getPermuted(u.length,s.length),c=Gk.getReshapedPermuted(a.shape,s,o),d=Gk.getSliceBeginCoords(i,s.length),h=Gk.getSliceSize(c,i,s.length),p=rZ({inputs:{x:a},backend:n,attrs:{shape:u}}),f=jY({inputs:{x:p},backend:n,attrs:{perm:l}}),m=oZ({inputs:{x:rZ({inputs:{x:f},backend:n,attrs:{shape:c}})},backend:n,attrs:{begin:d,size:h}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(p.dataId),m}};function cZ(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var dZ,hZ={kernelName:lc,backendName:"wasm",kernelFunc:cZ},pZ=LY(cc),fZ={kernelName:dc,backendName:"wasm",setupFunc:function(e){dZ=e.wasm.cwrap(dc,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return dZ(o,s,i,l),u}};function mZ(e){const{inputs:t,backend:n}=e,r=ap.parseAxisParam(e.attrs.axis,t[0].shape)[0];let a=Gk.computeOutShape(t.map((e=>e.shape)),r);const s=t.filter((e=>ap.sizeFromShape(e.shape)>0));if(1===s.length)return VY({inputs:{x:s[0]},backend:n});const i=n.makeOutput(a,t[0].dtype);if(0===ap.sizeFromShape(a))return i;const o=s.map((e=>e.shape));if(Gk.assertParamsConsistent(o,r),"string"===s[0].dtype){const e=s.map((e=>{const t=ap.sizeFromShape(e.shape.slice(r));return rZ({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=Gk.computeOutShape(e.map((e=>e.shape)),1);const u=1===e[0].shape[0],l=bO(o,a,t[0].dtype,u),c=Gk.computeOutShape(s.map((e=>e.shape)),r);return i.shape=c,n.dataIdMap.get(i.dataId).stringBytes=Gk.fromStringArrayToUint8(l),e.forEach((e=>n.disposeData(e.dataId))),i}const u=ap.sizeFromShape(s[0].shape.slice(0,r));let l=0;const c=s.map((e=>{const t=ap.sizeFromShape(e.shape.slice(r));return l+=t,t})),d=s.map((e=>n.typedArrayFromHeap(e))),h=n.typedArrayFromHeap(i);for(let e=0;e<u;e++){let t=e*l;for(let n=0;n<d.length;n++){const r=c[n],a=e*r,s=d[n].subarray(a,a+r);h.set(s,t),t+=r}}return i}var gZ,yZ,bZ,wZ,xZ,vZ={kernelName:fc,backendName:"wasm",kernelFunc:mZ},kZ={kernelName:mc,backendName:"wasm",setupFunc:function(e){gZ=e.wasm.cwrap(mc,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:d,dataFormat:h}=n,p=Gk.convertConv2DDataFormat(h),f=Gk.computeConv2DInfo(a.shape,s.shape,u,l,c,d,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,w=f.padInfo.bottom,x=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,E=f.outChannels,_="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const T=r.makeOutput(f.outShape,"float32"),C=r.dataIdMap.get(T.dataId).id;return gZ(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,w,x,_,v,k,I,S,N,E,C),T}},IZ={kernelName:yc,backendName:"wasm",setupFunc:function(e){yZ=e.wasm.cwrap(yc,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=r,d=Gk.convertConv2DDataFormat(u),h=Gk.computeConv2DInfo(c,s.shape,i,1,o,l,!1,d),{batchSize:p,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:w,outHeight:x,outWidth:v,strideHeight:k,strideWidth:I}=h,S=f-1-h.padInfo.top,N=m-1-h.padInfo.left,E="channelsLast"===h.dataFormat,_=ap.computeStrides(h.inShape),T=ap.computeStrides(a.shape),[C,A,$]=ap.computeStrides(s.shape),F=_[0],R=E?_[1]:_[2],M=E?_[2]:1,D=E?1:_[1],O=T[0],L=E?T[1]:T[2],P=E?T[2]:1,z=E?1:T[1],B=t.makeOutput(h.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,U=t.dataIdMap.get(a.dataId).id,V=t.dataIdMap.get(s.dataId).id;return yZ(U,V,p,f,m,y,b,g,x,v,w,k,I,S,N,C,A,$,F,R,M,D,O,L,P,z,W),B}},SZ=LY(vc),NZ=LY(kc);(wZ=bZ||(bZ={}))[wZ.bilinear=0]="bilinear",wZ[wZ.nearest=1]="nearest";var EZ,_Z,TZ,CZ={kernelName:Sc,backendName:"wasm",setupFunc:function(e){xZ=e.wasm.cwrap(Sc,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[d,h]=i,p=[c,d,h,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=cZ({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,w=t.makeOutput(p,"float32"),x=t.dataIdMap.get(w.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return xZ(g,y,b,c,v,d,h,bZ[a],s,x),null!=f&&t.disposeData(f.dataId),w}},AZ={kernelName:Ic,backendName:"wasm",setupFunc:function(e){EZ=e.wasm.cwrap(Ic,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length;ap.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));const l=Gk.getAxesPermutation([s],u);let c=a;null!==l&&(c=jY({inputs:{x:a},attrs:{perm:l},backend:n}));const d=Gk.getInnerMostAxes(1,u)[0];Gk.assertAxesAreInnerMostDims("cumsum",[d],u);const h=n.makeOutput(c.shape,c.dtype),p=c.shape[d],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(h.dataId).id;EZ(f,i?1:0,o?1:0,p,m,AY[a.dtype]);let g=h;return null!==l&&(g=jY({inputs:{x:h},attrs:{perm:Gk.getUndoAxesPermutation(l)},backend:n}),n.disposeData(c.dataId),n.disposeData(h.dataId)),g}},$Z={kernelName:Ec,backendName:"wasm",setupFunc:function(e){_Z=e.wasm.cwrap(Ec,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d="NHWC"===i?[o,u,l,c]:[o,c,u,l],h=t.makeOutput(d,"float32"),p=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(ap.computeStrides(a.shape)).buffer),m=new Uint8Array(new Int32Array(d).buffer),g=new Uint8Array(new Int32Array(ap.computeStrides(d)).buffer),y=t.dataIdMap.get(h.dataId).id;return _Z(p,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,d.length,y),h}},FZ={kernelName:_c,backendName:"wasm",setupFunc:function(e){TZ=e.wasm.cwrap(_c,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:d}=n,h=null==l?[1,1]:l,p=Gk.computeConv2DInfo(a.shape,s.shape,u,h,c,d,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,y=p.padInfo.right,b=p.padInfo.bottom,w=p.padInfo.left,x=p.dilationHeight,v=p.dilationWidth,k=p.strideHeight,I=p.strideWidth,S=p.inChannels,N=p.outChannels,E="SAME"===p.padInfo.type?1:0;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const _=r.makeOutput(p.outShape,"float32"),T=r.dataIdMap.get(_.dataId).id;return TZ(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,w,E,x,v,k,I,S,N,T),_}},RZ=LY(Oc),MZ=zY(zc,0,"bool"),DZ=LY(Bc,"float32");function OZ(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(ap.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),rZ({inputs:{x:a},backend:r,attrs:{shape:o}})}var LZ={kernelName:Wc,backendName:"wasm",kernelFunc:OZ};function PZ(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var zZ,BZ,WZ,UZ,VZ,GZ,HZ,jZ,qZ,KZ,XZ,YZ,ZZ,JZ,QZ={kernelName:Gc,backendName:"wasm",kernelFunc:PZ},eJ={kernelName:Hc,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return zZ(s,o,u,l,c,i),a},setupFunc:function(e){zZ=e.wasm.cwrap(Hc,null,["number","number","number","number","number","number"])}},tJ=LY(jc),nJ=zY(qc),rJ={kernelName:Kc,backendName:"wasm",setupFunc:function(e){BZ=e.wasm.cwrap(Kc,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,p=null!=u?t.dataIdMap.get(u.dataId).id:0,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===ap.sizeFromShape(s.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return BZ(c,d,h,p,f,a,g),m}},aJ={kernelName:Vh,backendName:"wasm",setupFunc:function(e){WZ=e.wasm.cwrap(Vh,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=n,m=Gk.computeConv2DInfo(a.shape,s.shape,u,c,l,h),g=FY[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,w=m.outChannels;let x=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==w)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${w})`);x=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,E=m.padInfo.left,_=m.dilationHeight,T=m.dilationWidth,C=m.strideHeight,A=m.strideWidth,$=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,M=m.inHeight,D=m.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return WZ(y,R,M,D,b,v,k,x,I,S,N,E,F,_,T,C,A,$,w,g,P,f||0,L),O}},sJ={kernelName:Gh,backendName:"wasm",setupFunc:function(e){UZ=e.wasm.cwrap(Gh,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=n,m=Gk.computeConv2DInfo(a.shape,s.shape,u,c,l,h,!0),g=FY[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,w=m.outChannels;let x=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==w)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${w})`);x=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,E=m.padInfo.left,_=m.dilationHeight,T=m.dilationWidth,C=m.strideHeight,A=m.strideWidth,$=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,M=m.inHeight,D=m.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return UZ(y,R,M,D,b,v,k,x,I,S,N,E,F,_,T,C,A,$,w,g,P,f||0,L),O}},iJ={kernelName:Yc,backendName:"wasm",setupFunc:function(e){VZ=e.wasm.cwrap(Yc,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,u]=ng.prepareAndValidate(r,a),l=t.makeOutput(s,r.dtype);if(0===i)return l;const c=a.shape,d=c[c.length-1],h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(l.dataId).id;return VZ(h,AY[r.dtype],p,i,d,o,f,m),l}},oJ={kernelName:Xc,backendName:"wasm",setupFunc:function(e){GZ=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,u=ap.parseAxisParam(i,a.shape)[0],l=t.readSync(s.dataId),c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];ap.assert(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}const d=Gk.segment_util.collectGatherOpShapeInfo(a,s,u,o),h=rZ({inputs:{x:a},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),p=ap.sizeFromShape(s.shape),f=rZ({inputs:{x:s},attrs:{shape:[d.batchSize,p/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],g=t.makeOutput(m,a.dtype);if(0===ap.sizeFromShape(a.shape))return g;const y=h.shape.length-1,b=t.dataIdMap.get(h.dataId).id,w=t.dataIdMap.get(f.dataId).id,x=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(ap.computeStrides(h.shape)).buffer),k=new Uint8Array(new Int32Array(ap.computeStrides(m)).buffer);return GZ(b,AY[a.dtype],v,y,w,d.batchSize,k,x),t.disposeData(h.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}},uJ=zY(Zc,0,"bool"),lJ=zY(Jc,0,"bool"),cJ={kernelName:sd,backendName:"wasm",setupFunc:function(e){HZ=e.wasm.cwrap(sd,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==ap.sizeFromShape(t.shape)){const e=r.dataIdMap.get(s.dataId).id;HZ(a,AY[t.dtype],n,e)}return s}},dJ=zY(id,0,"bool"),hJ=zY(od,0,"bool"),pJ=LY(ld),fJ=zY(dd,0,"bool"),mJ={kernelName:yd,backendName:"wasm",setupFunc:function(e){jZ=e.wasm.cwrap(yd,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:d,inputWasTransposed:h}=XY(i,a,t);h&&(u=l,o=t.dataIdMap.get(l.dataId).id);const p=u.shape.length;Gk.assertAxesAreInnerMostDims("max",c,p);const[f,m]=Gk.computeOutAndReduceShapes(u.shape,c),g=ap.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ap.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;jZ(o,AY[i.dtype],g,e)}if(h&&t.disposeData(l.dataId),s){const e=Gk.expandShapeToKeepDim(y.shape,d);y.shape=e}return y}},gJ=zY(bd),yJ={kernelName:wd,backendName:"wasm",setupFunc:function(e){qZ=e.wasm.cwrap(wd,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;ap.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Gk.computePool2DInfo(a.shape,i,o,1,u,l),d=c.filterHeight,h=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,w=c.strideHeight,x=c.strideWidth,v=c.inChannels,k=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const I=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return qZ(s,a.shape[0],a.shape[1],a.shape[2],d,h,p,f,m,g,y,b,w,x,v,k,S),I}},bJ={kernelName:Sd,backendName:"wasm",setupFunc:function(e){KZ=e.wasm.cwrap(Sd,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=XY(i,a,t);let f=d;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Gk.getInnerMostAxes(f.length,l.shape.length))}Gk.assertAxesAreInnerMostDims("mean",f,l.shape.length);const[m,g]=Gk.computeOutAndReduceShapes(l.shape,f),y=ap.sizeFromShape(g);let b=l;"float32"!==l.dtype&&(b=cZ({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);const w=t.makeOutput(m,"float32");if(0!==ap.sizeFromShape(l.shape)){const e=t.dataIdMap.get(w.dataId).id;KZ(u,y,e)}if(p&&t.disposeData(c.dataId),s){const e=Gk.expandShapeToKeepDim(w.shape,h);w.shape=e}return"float32"!==l.dtype&&t.disposeData(b.dataId),w}},wJ={kernelName:Nd,backendName:"wasm",setupFunc:function(e){XZ=e.wasm.cwrap(Nd,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=XY(i,a,t);if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}const f=l.shape.length;Gk.assertAxesAreInnerMostDims("min",d,f);const[m,g]=Gk.computeOutAndReduceShapes(l.shape,d),y=ap.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==ap.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;XZ(u,AY[i.dtype],y,e)}if(p&&t.disposeData(c.dataId),s){const e=Gk.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}},xJ=zY(Ed);(ZZ=YZ||(YZ={}))[ZZ.reflect=0]="reflect",ZZ[ZZ.symmetric=1]="symmetric";var vJ,kJ={kernelName:_d,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),d=r.map((e=>e[1])),h=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(d).buffer);return JZ(i,l,t.shape.length,AY[t.dtype],h,p,YZ[a],u),o},setupFunc:function(e){JZ=e.wasm.cwrap(_d,null,["number","array","number","number","array","array","number","number"])}},IJ=zY(Ad),SJ=LY($d);function NJ(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var EJ,_J,TJ,CJ,AJ,$J,FJ,RJ,MJ,DJ,OJ,LJ,PJ,zJ,BJ,WJ,UJ={kernelName:Rd,backendName:"wasm",setupFunc:function(e){vJ=e.wasm.cwrap(Rd,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,d=vJ(l,c,s,a,i),{pSelectedIndices:h,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=NJ(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",h)}},VJ={kernelName:Md,backendName:"wasm",setupFunc:function(e){EJ=e.wasm.cwrap(Md,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=EJ(c,d,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=NJ(t,h);return t.wasm._free(m),[t.makeOutput([f],"int32",p),t.makeOutput([],"int32",g)]}},GJ={kernelName:Dd,backendName:"wasm",setupFunc:function(e){_J=e.wasm.cwrap(Dd,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=_J(c,d,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=NJ(t,h);return t.wasm._free(g),[t.makeOutput([f],"int32",p),t.makeOutput([f],"float32",m)]}},HJ=zY(Fd,0,"bool"),jJ={kernelName:Ld,backendName:"wasm",setupFunc:function(e){TJ=e.wasm.cwrap(Ld,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(a.dataId).id;return TJ(c,s,i,o,l),u}},qJ={kernelName:Od,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},KJ={kernelName:Pd,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return OZ({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ap.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ap.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=mZ({inputs:t.map((e=>{const t=OZ({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),u}},XJ={kernelName:zd,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===ap.sizeFromShape(t.shape))return PZ({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});const i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),d=r.map((e=>e[1])),h=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(d).buffer);return CJ(i,l,t.shape.length,AY[t.dtype],h,p,a,u),o},setupFunc:function(e){CJ=e.wasm.cwrap(zd,null,["number","array","number","number","array","array","number","number"])}},YJ=zY(Wd),ZJ={kernelName:Ud,backendName:"wasm",setupFunc:function(e){AJ=e.wasm.cwrap(Ud,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id;let o=s;const u=r;let l=u;"float32"!==u.dtype&&(l=cZ({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(l.dataId).id);const c=n.makeOutput(r.shape,"float32"),d=n.dataIdMap.get(c.dataId).id;return AJ(o,i,d),"float32"!==u.dtype&&n.disposeData(l.dataId),c}},JJ={kernelName:Vd,backendName:"wasm",setupFunc:function(e){$J=e.wasm.cwrap(Vd,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=XY(i,a,t);let f=d;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Gk.getInnerMostAxes(f.length,l.shape.length))}Gk.assertAxesAreInnerMostDims("prod",f,l.shape.length);const[m,g]=Gk.computeOutAndReduceShapes(l.shape,f),y=ap.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==ap.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;$J(u,y,AY[b.dtype],e)}if(p&&t.disposeData(c.dataId),s){const e=Gk.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}},QJ={kernelName:Gd,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=gL(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},eQ=zY(Mc),tQ=LY(qd),nQ=LY(Qd),rQ={kernelName:Zd,backendName:"wasm",setupFunc:function(e){FJ=e.wasm.cwrap(Zd,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,[c,d,h,p]=a.shape,f=[c,u,l,p];let m,g=t.dataIdMap.get(a.dataId);"float32"!==g.dtype&&(m=cZ({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(m.dataId));const y=g.id,b=t.makeOutput(f,"float32");if(0===ap.sizeFromShape(a.shape))return b;const w=t.dataIdMap.get(b.dataId).id;return FJ(y,c,d,h,p,u,l,s?1:0,i?1:0,w),null!=m&&t.disposeData(m.dataId),b}},aQ={kernelName:eh,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=ap.parseAxisParam(s,a.shape);if(0===a.shape.length)return VY({inputs:{x:a},backend:n});const o=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),d=new Uint8Array(new Int32Array(a.shape).buffer);RJ(u,c,i.length,d,a.shape.length,l);const h=rZ({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),h},setupFunc:function(e){RJ=e.wasm.cwrap(eh,null,["number","array","number","array","number","number"])}},sQ={kernelName:Wh,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,[d,h,p,f]=a.shape,[m,g]=Gk.getImageCenter(o,h,p),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return MJ(l,d,h,p,f,s,m,g,b,y.length,c),u},setupFunc:function(e){MJ=e.wasm.cwrap(Wh,null,["number","number","number","number","number","number","number","number","array","number","number"])}},iQ=LY(th),oQ=LY(nh),uQ={kernelName:rh,backendName:"wasm",setupFunc:function(e){DJ=e.wasm.cwrap(rh,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===ap.sizeFromShape(i))return o;const{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:h}=ag.calculateShapes(s,a,i),p=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(d).buffer),g=t.dataIdMap.get(o.dataId).id;return DJ(p,f,AY[s.dtype],u,l,c,m,h,g),o}},lQ={kernelName:ah,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(l.dataId).id,d=r.shape.length,h=a.shape.length,p=0===d||d>1||1===h?1:ap.sizeFromShape(a.shape.slice(1));return OJ(i,o,u,p,c),l},setupFunc:function(e){OJ=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},cQ={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){LJ=e.wasm.cwrap(ch,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===ap.sizeFromShape(a.shape)||LJ(r,s),a}},dQ=LY(oh),hQ={kernelName:gh,backendName:"wasm",setupFunc:function(e){PJ=e.wasm.cwrap(gh,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],u=ap.sizeFromShape(n.shape)/o;return 0===ap.sizeFromShape(s.shape)||PJ(a,i,o,u),s}},pQ={kernelName:fh,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=ap.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=XJ.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=Gk.getReshaped(l.shape,s,o,!1),d=Gk.getPermuted(c.length,s.length,!1),h=Gk.getReshapedPermuted(l.shape,s,o,!1),p=rZ({inputs:{x:l},backend:n,attrs:{shape:c}}),f=jY({inputs:{x:p},backend:n,attrs:{perm:d}}),m=rZ({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeData(l.dataId),n.disposeData(p.dataId),n.disposeData(f.dataId),m}},fQ={kernelName:yh,backendName:"wasm",setupFunc:function(e){zJ=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],u=r.shape[1],l=t.readSync(s.dataId)[0],c=[o+l,u],d=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(a.dataId).id,p=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(c,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([l],"bool"),w=t.dataIdMap.get(b.dataId).id,x=t.makeOutput([o],r.dtype),v=t.dataIdMap.get(x.dataId).id,k=t.makeOutput([4],"int32"),I=t.dataIdMap.get(k.dataId).id,S=zJ(d,h,AY[a.dtype],o,l,u,p,m,y,w,v,I),N=t.readSync(k.dataId);let E;switch(N[0]){case 1:E=Gk.getSparseFillEmptyRowsIndicesDenseShapeMismatch(N[1]);break;case 2:E=Gk.getSparseFillEmptyRowsNegativeIndexErrorMessage(N[1],N[2]);break;case 3:E=Gk.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(N[1],N[2],N[3]);break;default:E=""}if(t.disposeData(k.dataId),E)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(x.dataId),new Error(E);let _=f,T=g;return S!==c[0]&&(_=oZ({inputs:{x:f},attrs:{begin:0,size:[S,u]},backend:t}),T=oZ({inputs:{x:g},attrs:{begin:0,size:S},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[_,T,b,x]}},mQ={kernelName:bh,backendName:"wasm",setupFunc:function(e){BJ=e.wasm.cwrap(bh,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=r.shape[0],c=ap.sizeFromShape(s.shape),d=t.makeOutput([l,c],r.dtype),h=t.dataIdMap.get(d.dataId).id,p=t.makeOutput([c],s.dtype),f=t.dataIdMap.get(p.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;BJ(i,o,u,l,h,f,g);const y=t.readSync(m.dataId);let b;switch(y[0]){case 0:b=Gk.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break;case 1:b=Gk.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break;case 2:b=Gk.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{const e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(p.dataId));b=Gk.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{const e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(p.dataId));b=Gk.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:b=""}if(t.disposeData(m.dataId),b)throw t.disposeData(d.dataId),t.disposeData(p.dataId),new Error(b);return[d,p]}};function gQ(e){WJ=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function yQ(e,t){const{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],u=n.readSync(i.dataId,o-1,o)[0],l=o>0?u+1:0;if(l<0)throw new Error(Gk.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const c=a.shape.slice();c[0]=l;const d=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(s.dataId).id,p=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(c,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;WJ(d,AY[a.dtype],a.shape[0],h,p,m,y,t,0);const b=n.readSync(g.dataId);let w;switch(b[0]){case 0:w=Gk.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:w=Gk.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:w=Gk.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:w=Gk.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:w=""}if(n.disposeData(g.dataId),w)throw n.disposeData(f.dataId),new Error(w);return f}var bQ,wQ,xQ,vQ,kQ,IQ,SQ={kernelName:wh,backendName:"wasm",setupFunc:gQ,kernelFunc:function(e){return yQ(e,!0)}},NQ={kernelName:xh,backendName:"wasm",setupFunc:gQ,kernelFunc:function(e){return yQ(e,!1)}},EQ={kernelName:mh,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=ap.parseAxisParam(i,a.shape)[0],u=Gk.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const n=oZ({inputs:{x:a},attrs:{begin:l,size:t},backend:r});return l[o]+=e,n}))}},_Q=LY(hh),TQ=LY(Ih),CQ=zY(kh),AQ={kernelName:zh,backendName:"wasm",setupFunc:function(e){bQ=e.wasm.cwrap(zh,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return bQ(i,a,AY[s.dtype],u),o}},$Q={kernelName:Sh,backendName:"wasm",setupFunc:function(e){wQ=e.wasm.cwrap(Sh,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:w,strides:x}=ug.sliceInfo(a.shape,s,i,o,u,l,c,d,h);let v;if(m)v=rZ({inputs:{x:a},backend:t,attrs:{shape:f}});else if(g||y){ap.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=ug.computeOutShape(b,w,x),n=oZ({inputs:{x:a},backend:t,attrs:{begin:b,size:e}});v=rZ({inputs:{x:n},backend:t,attrs:{shape:f}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(p,"float32"),n=t.dataIdMap.get(a.dataId).id,r=new Uint8Array(new Int32Array(ap.computeStrides(a.shape)).buffer),s=new Uint8Array(new Int32Array(b).buffer),i=new Uint8Array(new Int32Array(w).buffer),o=new Uint8Array(new Int32Array(x).buffer),u=new Uint8Array(new Int32Array(p).buffer),l=new Uint8Array(new Int32Array(ap.computeStrides(p)).buffer),c=t.dataIdMap.get(e.dataId).id;wQ(n,r,a.shape.length,s,i,o,u,l,p.length,c),v=rZ({inputs:{x:e},backend:t,attrs:{shape:f}}),t.disposeData(e.dataId)}return v}},FQ=zY(Th),RQ={kernelName:ph,backendName:"wasm",setupFunc:function(e){xQ=e.wasm.cwrap(ph,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=XY(i,a,t);let f=d;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Gk.getInnerMostAxes(f.length,l.shape.length))}Gk.assertAxesAreInnerMostDims("sum",f,l.shape.length);const[m,g]=Gk.computeOutAndReduceShapes(l.shape,f),y=ap.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==ap.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;xQ(u,y,AY[b.dtype],e)}if(p&&t.disposeData(c.dataId),s){const e=Gk.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}},MQ=LY(Ch),DQ=LY(Ah),OQ=[OY,PY,WY,UY,QY,eZ,tZ,nZ,iZ,lZ,hZ,pZ,fZ,vZ,kZ,IZ,SZ,NZ,CZ,AZ,$Z,FZ,RZ,MZ,DZ,LZ,QZ,eJ,tJ,nJ,rJ,aJ,sJ,iJ,oJ,uJ,lJ,HY,cJ,dJ,hJ,pJ,fJ,mJ,gJ,yJ,bJ,wJ,xJ,kJ,IJ,SJ,UJ,VJ,GJ,HJ,jJ,qJ,KJ,XJ,YJ,ZJ,JJ,QJ,eQ,tQ,nQ,sZ,rQ,aQ,sQ,iQ,oQ,uQ,lQ,cQ,dQ,uZ,hQ,pQ,fQ,mQ,SQ,NQ,EQ,_Q,TQ,CQ,AQ,$Q,FQ,RQ,MQ,DQ,{kernelName:$h,backendName:"wasm",setupFunc:function(e){vQ=e.wasm.cwrap($h,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];const u=new Uint8Array(new Int32Array(a.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,a.dtype),d=n.dataIdMap.get(c.dataId).id;return vQ(s,u,a.shape.length,l,o.length,AY[c.dtype],d),c}},{kernelName:Fh,backendName:"wasm",setupFunc:function(e){kQ=e.wasm.cwrap(Fh,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a}=t,{k:s,sorted:i}=r,o=n.dataIdMap.get(a.dataId).id,u=new Uint8Array(new Int32Array(a.shape).buffer),l=a.shape.slice();l[l.length-1]=s;const c=n.makeOutput(l,a.dtype),d=n.dataIdMap.get(c.dataId).id,h=n.makeOutput(l,"int32"),p=n.dataIdMap.get(h.dataId).id;return kQ(o,u,a.shape.length,AY[a.dtype],s,i,d,p),[c,h]}},{kernelName:Rh,backendName:"wasm",setupFunc:function(e){IQ=e.wasm.cwrap(Rh,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,d,h,p]=a.shape,[f,m]=null!=l?l:[d,h],g=[c,f,m,p],y=new Uint8Array(new Int32Array(ap.computeStrides(a.shape)).buffer),b=t.makeOutput(g,a.dtype),w=t.dataIdMap.get(b.dataId).id,x=t.dataIdMap.get(a.dataId).id,v=t.dataIdMap.get(s.dataId).id,k="nearest"===i?1:2;let I;switch(o){case"constant":default:I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4}return IQ(x,v,s.shape[0]>1,c,f,m,p,h,d,y,a.shape.length-1,k,I,u,w),b}},KY,{kernelName:Oh,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i),d=new Array(o).fill(0),h=a.shape.slice();h[s]=1;for(let e=0;e<c.length;e++)d[s]=e,c[e]=oZ({inputs:{x:a},attrs:{begin:d,size:h},backend:n});return c.map((e=>{let{dataId:t,dtype:n}=e;return{dataId:t,dtype:n,shape:u}}))}},{kernelName:Ph,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of OQ)Jh(e);var LQ=Dl();LQ.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),LQ.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(LQ.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var PQ=iu(Ru()),zQ=iu(Mu()),BQ=class extends Ou{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(YQ),ZQ=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Du(this,Kg())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=ap.now();return e(),{kernelMs:ap.now()-t}}move(e,t,n,r,a){const s=this.dataIdNextNumber++;if("string"===r){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}const i=ap.sizeFromShape(n),o=i*ap.bytesPerElement(r),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,u),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e,t,n){const{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||ap.sizeFromShape(s);const o=ap.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=ap.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap(e){let{shape:t,dtype:n,dataId:r}=e;const a=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(r),i=ap.sizeFromShape(t);switch(n){case"float32":return new Float32Array(a,s,i);case"int32":return new Int32Array(a,s,i);case"bool":return new Uint8Array(a,s,i);default:throw new Error(`Unknown dtype ${n}`)}}};function WQ(e,t,n){if(null!=VQ)return VQ;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=HQ&&null!=HQ[r]?HQ[r]:n+r}var UQ=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],VQ=null,GQ=null,HQ={},jQ=!1,qQ=!1;function KQ(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(jg("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),jQ)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");VQ=e,qQ=t}function XQ(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(jQ)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)GQ=e;else{HQ=e;const t=UQ.filter((e=>null==HQ[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}qQ=t}var YQ=-1,ZQ=-1;function JQ(e){YQ=e}function QQ(){if(-1===ZQ)throw new Error("WASM backend not initialized.");return ZQ}var e0="3.13.0";oy("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([Dl().getAsync("WASM_HAS_SIMD_SUPPORT"),Dl().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={};var s;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?WQ(e,t,null!=GQ?GQ:r):r+n},qQ&&(a.instantiateWasm=(s=WQ(e,t,null!=GQ?GQ:""),(e,t)=>(ap.fetch(s,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,o=!1;a.onAbort=()=>{o||jQ||(jQ=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==VQ?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+PQ.default.toString()],{type:"text/javascript"}),i=(0,PQ.default)(a)):i=(0,zQ.default)(a),i.then((e=>{o=!0,jQ=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}();return new BQ(e)}),2);var t0={tfjs:"3.13.0","tfjs-core":"3.13.0","tfjs-data":"3.13.0","tfjs-layers":"3.13.0","tfjs-converter":"3.13.0","tfjs-backend-cpu":"3.13.0","tfjs-backend-webgl":"3.13.0","tfjs-backend-wasm":"3.13.0"};function n0(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(e.beginPath(),t.slice(1).forEach(((n,r)=>{let{x:a,y:s}=n;const i=t[r];e.moveTo(i.x,i.y),e.lineTo(a,s)})),n){const n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}Yo({},{AnchorPosition:()=>W0,DrawBox:()=>H0,DrawBoxOptions:()=>G0,DrawFaceLandmarks:()=>A1,DrawFaceLandmarksOptions:()=>C1,DrawTextField:()=>V0,DrawTextFieldOptions:()=>U0,drawContour:()=>n0,drawDetections:()=>j0,drawFaceExpressions:()=>_1,drawFaceLandmarks:()=>$1}),Yo({},{computeReshapedDimensions:()=>p0,getCenterPoint:()=>f0,isDimensions:()=>h0,isEven:()=>c0,isFloat:()=>l0,isTensor:()=>a0,isTensor1D:()=>s0,isTensor2D:()=>i0,isTensor3D:()=>o0,isTensor4D:()=>u0,isValidNumber:()=>g0,isValidProbablitiy:()=>y0,range:()=>m0,round:()=>d0});var r0=class{constructor(e,t){if(!g0(e)||!g0(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new r0(1/this.width,1/this.height)}};function a0(e,t){return e instanceof Lp&&e.shape.length===t}function s0(e){return a0(e,1)}function i0(e){return a0(e,2)}function o0(e){return a0(e,3)}function u0(e){return a0(e,4)}function l0(e){return e%1!=0}function c0(e){return e%2==0}function d0(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;const n=10**t;return Math.floor(e*n)/n}function h0(e){return e&&e.width&&e.height}function p0(e,t){let{width:n,height:r}=e;const a=t/Math.max(r,n);return new r0(Math.round(n*a),Math.round(r*a))}function f0(e){return e.reduce(((e,t)=>e.add(t)),new b0(0,0)).div(new b0(e.length,e.length))}function m0(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function g0(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function y0(e){return g0(e)&&e>=0&&e<=1}var b0=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new b0(this.x+e.x,this.y+e.y)}sub(e){return new b0(this.x-e.x,this.y-e.y)}mul(e){return new b0(this.x*e.x,this.y*e.y)}div(e){return new b0(this.x/e.x,this.y/e.y)}abs(){return new b0(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new b0(Math.floor(this.x),Math.floor(this.y))}},w0=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(g0)}static assertIsValidBox(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!w0.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=e||{},r=[n.left,n.top,n.right,n.bottom].every(g0),a=[n.x,n.y,n.width,n.height].every(g0);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);const[s,i,o,u]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];w0.assertIsValidBox({x:s,y:i,width:o,height:u},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new b0(this.left,this.top)}get topRight(){return new b0(this.right,this.top)}get bottomLeft(){return new b0(this.left,this.bottom)}get bottomRight(){return new b0(this.right,this.bottom)}round(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new w0({x:e,y:t,width:n,height:r})}floor(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new w0({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this;const a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new w0({x:e,y:t,width:n,height:r})}rescale(e){const t=h0(e)?e.width:e,n=h0(e)?e.height:e;return new w0({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){const[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new w0({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){const{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),u=a-i,l=s-o,c=Math.min(u,e-i),d=Math.min(l,t-o);return new w0({x:i,y:o,width:c,height:d}).floor()}shift(e,t){const{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new w0({x:a,y:s,width:n,height:r})}padAtBorders(e,t){const n=this.width+1,r=this.height+1;let a=n,s=r,i=this.left,o=this.top,u=this.right,l=this.bottom;return u>t&&(a=-u+t+n,u=t),l>e&&(s=-l+e+r,l=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:l,x:i,ex:u,w:n,h:r}}calibrate(e){return new w0({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},x0=class extends w0{constructor(e,t,n,r){super({left:e,top:t,right:n,bottom:r},arguments.length>4&&void 0!==arguments[4]&&arguments[4])}},v0=class{constructor(e,t,n,r,a){this._imageDims=new r0(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new w0(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new w0(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new v0(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},k0=class extends v0{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){const{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new k0(n,r,a)}};function I0(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),a=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=r*a;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function S0(e,t){return Zg((()=>{const[n,r,a]=t,s=zb([...e.shape.slice(0,3),1],n,"float32"),i=zb([...e.shape.slice(0,3),1],r,"float32"),o=zb([...e.shape.slice(0,3),1],a,"float32"),u=jy([s,i,o],3);return hw(e,u)}))}function N0(e){return 1/(1+Math.exp(-e))}var E0,_0=class extends w0{constructor(e,t,n,r){super({x:e,y:t,width:n,height:r},arguments.length>4&&void 0!==arguments[4]&&arguments[4])}},T0=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new b0(0,0);const{width:r,height:a}=t;this._imgDims=new r0(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new b0(r,a)).add(n)))}get shift(){return new b0(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new b0(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new b0(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(e){const n=e instanceof k0?e.box.floor():new w0(e);return this.shiftBy(n.x,n.y).align(null,t)}const{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){const e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=f0(e),u=Math.floor(Math.max(0,o.x-.5*i)),l=Math.floor(Math.max(0,o.y-.43*i));return new _0(u,l,Math.min(i,this.imageWidth+u),Math.min(i,this.imageHeight+l))}alignMinBbox(e){const t=function(e){const t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new x0(r,a,s,i)}(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},C0=class extends T0{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(f0)}};function A0(e){return e.detection instanceof k0}function $0(){const e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function F0(){return"object"==typeof n.g&&"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}function R0(e){let t="";if(!e&&F0())try{e=Xo("fs")}catch(e){t=e.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function M0(){const e=n.g.Canvas||n.g.HTMLCanvasElement,t=n.g.Image||n.g.HTMLImageElement,r=n.g.Video||n.g.HTMLVideoElement,a=n.g.fetch,s=R0();return{Canvas:e||class{},CanvasRenderingContext2D:n.g.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:n.g.ImageData||class{},Video:n.g.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(r)return new r;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:a,...s}}function D0(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function O0(e){E0=e}function L0(){return D0()?O0($0()):F0()?O0(M0()):null}var P0={getEnv:function(){if(!E0)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return E0},setEnv:O0,initialize:L0,createBrowserEnv:$0,createFileSystem:R0,createNodejsEnv:M0,monkeyPatch:function(e){if(E0||L0(),!E0)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");const{Canvas:t=E0.Canvas,Image:n=E0.Image}=e;E0.Canvas=t,E0.Image=n,E0.createCanvasElement=e.createCanvasElement||(()=>new t),E0.createImageElement=e.createImageElement||(()=>new n),E0.ImageData=e.ImageData||E0.ImageData,E0.Video=e.Video||E0.Video,E0.fetch=e.fetch||E0.fetch,E0.readFile=e.readFile||E0.readFile},isBrowser:D0,isNodejs:F0};function z0(e){return P0.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function B0(e){const{Canvas:t,CanvasRenderingContext2D:n}=P0.getEnv();if(e instanceof n)return e;const r=z0(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");const a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}L0();var W0=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(W0||{}),U0=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},V0=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.text="string"==typeof e?[e]:e instanceof V0?e.text:e,this.anchor=t,this.options=new U0(n)}measureWidth(e){const{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){const{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){const{anchorPosition:n}=this.options,r="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n,a="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,u=a?this.anchor.y-i:this.anchor.y;if(t){const{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(u,n-i),0)}}return{x:o,y:u}}draw(e){const t=z0(e),n=B0(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;const u=this.measureWidth(n),l=this.measureHeight();n.fillStyle=r;const c=this.getUpperLeft(n,t);n.fillRect(c.x,c.y,u,l),n.fillStyle=a,this.text.forEach(((e,t)=>{const r=o+c.x,a=o+c.y+(t+1)*s;n.fillText(e,r,a)}))}},G0=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;const s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new U0({...s,...a})}},H0=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.box=new w0(e),this.options=new G0(t)}draw(e){const t=B0(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);const{label:u}=this.options;u&&new V0([u],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function j0(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{const n=t instanceof k0?t.score:A0(t)?t.detection.score:void 0,r=t instanceof k0?t.box:A0(t)?t.detection.box:new w0(t),a=n?`${d0(n)}`:void 0;new H0(r,{label:a}).draw(e)}))}function q0(e){const{Image:t,Video:n}=P0.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function K0(e){const{Image:t,Video:n}=P0.getEnv();return e instanceof t?new r0(e.naturalWidth,e.naturalHeight):e instanceof n?new r0(e.videoWidth,e.videoHeight):new r0(e.width,e.height)}function X0(e){let{width:t,height:n}=e;const{createCanvasElement:r}=P0.getEnv(),a=r();return a.width=t,a.height=n,a}function Y0(e,t){const{ImageData:n}=P0.getEnv();if(!(e instanceof n||q0(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");const{width:r,height:a}=t||K0(e),s=X0({width:r,height:a});return e instanceof n?B0(s).putImageData(e,0,0):B0(s).drawImage(e,0,0,r,a),s}function Z0(e){const{Image:t,Canvas:n,Video:r}=P0.getEnv();return e instanceof t||e instanceof n||e instanceof r}var J0=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if(o0(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(u0(e)){const n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}const n=e instanceof P0.getEnv().Canvas?e:Y0(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return m0(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return p0({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return this._inputSize=e,Zg((()=>{const n=m0(this.batchSize,0,1).map((n=>{const r=this.getInput(n);if(r instanceof Lp){let n=u0(r)?r:Db(r);return n=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Zg((()=>{const[n,r]=e.shape.slice(1);if(n===r)return e;const a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{const n=e.shape.slice();return n[i]=t,zb(n,0,"float32")},u=o(s),l=a-u.shape[i],c=[t&&l?o(l):null,e,u].filter((e=>!!e)).map((e=>xm(e,"float32")));return jy(c,i)}))}(n,t),n.shape[1]===e&&n.shape[2]===e||(n=_k.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof P0.getEnv().Canvas)return Xm.fromPixels(function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const{Image:r,Canvas:a}=P0.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return X0({width:1,height:1});const s=K0(e),i=t/Math.max(s.height,s.width),o=i*s.width,u=i*s.height,l=X0({width:t,height:t}),c=e instanceof a?e:Y0(e),d=Math.abs(o-u)/2,h=n&&o<u?d:0,p=n&&u<o?d:0;return c.width>0&&c.height>0&&B0(l).drawImage(c,h,p,o,u),l}(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return Vx(n.map((e=>xm(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function Q0(e){if(e instanceof J0)return e;const t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");const n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(z0);return r.forEach(((e,r)=>{if(!Z0(e)&&!o0(e)&&!u0(e)){if("string"==typeof t[r])throw new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`);throw new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`)}if(u0(e)){const t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>{return Z0(e)&&(t=e,new Promise(((e,n)=>{function r(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(t){t.currentTarget&&(t.currentTarget.removeEventListener("load",a),t.currentTarget.removeEventListener("error",r),e(t))}(t instanceof P0.getEnv().Canvas||q0(t))&&e(null),t.addEventListener("load",a),t.addEventListener("error",r)})));var t}))),new J0(r,Array.isArray(e))}async function e1(e,t){const{Canvas:n}=P0.getEnv();let r=e;if(!(e instanceof n)){const t=await Q0(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");const a=t.getInput(0);r=a instanceof n?a:await async function(e,t){const n=P0.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(u0(e)?1:0),i=Zg((()=>e.as3D(r,a,s).toInt()));return await Xm.toPixels(i,n),i.dispose(),n}(a)}const a=B0(r);return t.map((e=>e instanceof k0?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((e=>{let{x:t,y:n,width:r,height:s}=e;const i=X0({width:r,height:s});return r>0&&s>0&&B0(i).putImageData(a.getImageData(t,n,r,s),0,0),i}))}async function t1(e,t){if(!o0(e)&&!u0(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(u0(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return Zg((()=>{const[n,r,a]=e.shape.slice(u0(e)?1:0);return t.map((e=>e instanceof k0?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).map((t=>{let{x:s,y:i,width:o,height:u}=t;return Fx(e.as3D(n,r,a),[i,s,0],[u,o,a])}))}))}function n1(e,t){const n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};const r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n;let i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function r1(e,t){const{manifestUri:n,modelBaseUri:r}=n1(e,t),a=await async function(e){return(await async function(e,t){const{fetch:n}=P0.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}(e)).json()}(n);return Im.loadWeights(a,r)}var a1=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){const{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){const{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((e=>{let{paramPath:t}=e;return{path:t,tensor:this.getParamFromPath(t)}}))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof zp))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof zp)))}variable(){this.getFrozenParams().forEach((e=>{let{path:t,tensor:n}=e;this.reassignParamFromPath(t,n.variable())}))}freeze(){this.getTrainableParams().forEach((e=>{let{path:t,tensor:n}=e;const r=_f(n.dataSync());n.dispose(),this.reassignParamFromPath(t,r)}))}dispose(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((e=>{let{tensor:t}=e;return Array.from(t.dataSync())})).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);const t=await r1(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);const{readFile:t}=P0.getEnv(),{manifestUri:n,modelBaseUri:r}=n1(e,this.getDefaultModelName()),a=Im.weightsLoaderFactory((e=>Promise.all(e.map((e=>t(e).then((e=>e.buffer))))))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){const{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){const{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");const t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof Lp))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function s1(e,t,n){return Zg((()=>{let r=Nx(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=cy(r,t.bias),r}))}function i1(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Zg((()=>{const r=fx(n?cy(db(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):s1(e,t.conv0,[2,2])),a=s1(r,t.conv1,[1,1]),s=s1(fx(cy(r,a)),t.conv2,[1,1]);return fx(cy(r,cy(a,s)))}))}function o1(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return Zg((()=>{const a=fx(n?cy(db(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):s1(e,t.conv0,r?[2,2]:[1,1])),s=s1(a,t.conv1,[1,1]),i=s1(fx(cy(a,s)),t.conv2,[1,1]),o=s1(fx(cy(a,cy(s,i))),t.conv3,[1,1]);return fx(cy(a,cy(s,cy(i,o))))}))}function u1(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"same",r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return Zg((()=>{const a=cy(db(e,t.filters,[1,1],n),t.bias);return r?fx(a):a}))}function l1(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function c1(e,t){return(n,r,a,s)=>{const i=Xx(e(n*r*a*a),[a,a,n,r]),o=qx(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function d1(e,t){return(n,r,a)=>{const s=Kx(e(n*r),[n,r]),i=qx(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var h1=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function p1(e,t){return(n,r,a)=>{const s=Xx(e(9*n),[3,3,n,1]),i=Xx(e(n*r),[1,1,n,r]),o=qx(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new h1(s,i,o)}}function f1(e){return t=>{const n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new h1(n,r,a)}}function m1(e,t){return(n,r,a)=>{const s=e[n];if(!a0(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function g1(e){let t=e;return{extractWeights:function(e){const n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function y1(e,t){const n=c1(e,t),r=p1(e,t);function a(e,t,a){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=s?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),o=r(t,t,`${a}/conv1`),u=r(t,t,`${a}/conv2`);return{conv0:i,conv1:o,conv2:u}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const{conv0:i,conv1:o,conv2:u}=a(e,t,n,s),l=r(t,t,`${n}/conv3`);return{conv0:i,conv1:o,conv2:u,conv3:l}}}}function b1(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function w1(e,t){const n=m1(e,t),r=b1(n),a=f1(n);return{extractDenseBlock3Params:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=t?r(`${e}/conv0`):a(`${e}/conv0`),s=a(`${e}/conv1`),i=a(`${e}/conv2`);return{conv0:n,conv1:s,conv2:i}},extractDenseBlock4Params:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=t?r(`${e}/conv0`):a(`${e}/conv0`),s=a(`${e}/conv1`),i=a(`${e}/conv2`),o=a(`${e}/conv3`);return{conv0:n,conv1:s,conv2:i,conv3:o}}}}var x1=class extends a1{constructor(){super("FaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return Zg((()=>{let n=o1(S0(xm(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=o1(n,t.dense1),n=o1(n,t.dense2),n=o1(n,t.dense3),n=Gy(n,[7,7],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await Q0(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock4Params:n}=w1(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return l1(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=g1(e),{extractDenseBlock4Params:a}=y1(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),u=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:u}}}(e)}};function v1(e,t){return Zg((()=>cy(Bm(e,t.weights),t.bias)))}function k1(e){const t={},n={};return Object.keys(e).forEach((r=>{(r.startsWith("fc")?n:t)[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var I1=class extends a1{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return Zg((()=>{const n=e instanceof J0?this.faceFeatureExtractor.forwardInput(e):e;return v1(n.as2D(n.shape[0],-1),t.fc)}))}dispose(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){const r=[],{extractWeights:a,getRemainingWeights:s}=g1(e),i=d1(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=k1(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=m1(e,t),r={fc:("fc",{weights:n("fc/weights",2),bias:n("fc/bias",1)})};return l1(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){const t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},S1=["neutral","happy","sad","angry","fearful","disgusted","surprised"],N1=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);S1.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return S1.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}};function E1(e){return e.expressions instanceof N1}function _1(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,r=arguments.length>3?arguments[3]:void 0;const a=Array.isArray(t)?t:[t];a.forEach((t=>{const a=t instanceof N1?t:E1(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");const s=a.asSortedArray().filter((e=>e.probability>n)),i=A0(t)?t.detection.box.bottomLeft:r||new b0(0,0);new V0(s.map((e=>`${e.expression} (${d0(e.probability)})`)),i).draw(e)}))}function T1(e){return A0(e)&&e.landmarks instanceof T0&&e.unshiftedLandmarks instanceof T0&&e.alignedRect instanceof k0}var C1=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},A1=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.faceLandmarks=e,this.options=new C1(t)}draw(e){const t=B0(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof C0&&(t.strokeStyle=s,t.lineWidth=a,n0(t,this.faceLandmarks.getJawOutline()),n0(t,this.faceLandmarks.getLeftEyeBrow()),n0(t,this.faceLandmarks.getRightEyeBrow()),n0(t,this.faceLandmarks.getNose()),n0(t,this.faceLandmarks.getLeftEye(),!0),n0(t,this.faceLandmarks.getRightEye(),!0),n0(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;const e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function $1(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{const n=t instanceof T0?t:T1(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new A1(n).draw(e)}))}function F1(e,t,n){return cy(db(e,t.filters,n,"same"),t.bias)}function R1(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=n?fx(e):e;return r=s1(r,t.separable_conv0,[1,1]),r=s1(fx(r),t.separable_conv1,[1,1]),r=Tw(r,[3,3],[2,2],"same"),r=cy(r,F1(e,t.expansion_conv,[2,2])),r}var M1=class extends a1{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return Zg((()=>{const n=S0(xm(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255);let r=fx(F1(n,t.entry_flow.conv_in,[2,2]));return r=R1(r,t.entry_flow.reduction_block_0,!1),r=R1(r,t.entry_flow.reduction_block_1),m0(this._numMainBlocks,0,1).forEach((e=>{r=function(e,t){let n=s1(fx(e),t.separable_conv0,[1,1]);return n=s1(fx(n),t.separable_conv1,[1,1]),n=s1(fx(n),t.separable_conv2,[1,1]),n=cy(n,e),n}(r,t.middle_flow[`main_block_${e}`])})),r=R1(r,t.exit_flow.reduction_block),r=fx(s1(r,t.exit_flow.separable_conv,[1,1])),r}))}async forward(e){return this.forwardInput(await Q0(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return function(e,t){const n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){const n=m1(e,t),r=b1(n),a=f1(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},u={};m0(t,0,1).forEach((e=>{u[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));const l={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return l1(e,n),{params:{entry_flow:o,middle_flow:u,exit_flow:l},paramMappings:n}}(e,this._numMainBlocks)}extractParams(e){return function(e,t){const n=[],{extractWeights:r,getRemainingWeights:a}=g1(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:u}=function(e,t){const n=c1(e,t),r=p1(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}}}(r,n),l={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},c={};m0(t,0,1).forEach((e=>{c[`main_block_${e}`]=u(128,`middle_flow/main_block_${e}`)}));const d={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:l,middle_flow:c,exit_flow:d}}}(e,this._numMainBlocks)}},D1=class extends I1{postProcess(e,t,n){const r=n.map((e=>{let{width:n,height:r}=e;const a=t/Math.max(r,n);return{width:n*a,height:r*a}})),a=r.length;return Zg((()=>{const n=(e,t)=>Vx([zb([68],e,"float32"),zb([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{const{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(zb([a,136],t,"float32")).sub(Vx(Array.from(Array(a),((e,t)=>n((e=>s(e,((e,t)=>e<t)))(t),(e=>s(e,((e,t)=>t<e)))(t)))))).div(Vx(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return Zg((()=>{const t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((e=>{let[t,n]=e;return{height:t,width:n}})))}))}async forward(e){return this.forwardInput(await Q0(e))}async detectLandmarks(e){const t=await Q0(e),n=Zg((()=>nv(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{const r=Array.from(e.dataSync()),a=r.filter(((e,t)=>c0(t))),s=r.filter(((e,t)=>!c0(t)));return new C0(Array(68).fill(0).map(((e,t)=>new b0(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},O1=class extends a1{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return Zg((()=>{let n=i1(S0(xm(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=i1(n,t.dense1),n=i1(n,t.dense2),n=Gy(n,[14,14],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await Q0(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock3Params:n}=w1(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return l1(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=g1(e),{extractDenseBlock3Params:a}=y1(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}};function L1(e,t){return cy(py(e,t.weights),t.biases)}function P1(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"same";const{filters:s,bias:i}=t.conv;let o=db(e,s,n,a);return o=cy(o,i),o=L1(o,t.scale),r?fx(o):o}function z1(e,t){return P1(e,t,[1,1],!1)}function B1(e,t){return P1(e,t,[2,2],!0,"valid")}function W1(e,t){function n(n,r,a,s){const i=function(n,r,a,s){const i=function(t,n,r){const a=e(t),s=a.length/(n*r*r);if(l0(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return Zg((()=>Um(Xx(a,[n,s,r,r]),[2,3,1,0])))}(n,r,a),o=qx(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}(n,r,a,`${s}/conv`),o=function(n,r){const a=qx(e(n)),s=qx(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}(r,`${s}/scale`);return{conv:i,scale:o}}return{extractConvLayerParams:n,extractResidualLayerParams:function(e,t,r,a){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const i=n((s?.5:1)*e,t,r,`${a}/conv1`),o=n(e,t,r,`${a}/conv2`);return{conv1:i,conv2:o}}}}function U1(e,t){let n=function(e,t){return P1(e,t,[1,1],!0)}(e,t.conv1);return n=z1(n,t.conv2),n=cy(n,e),n=fx(n),n}function V1(e,t){let n=B1(e,t.conv1);n=z1(n,t.conv2);let r=Gy(e,2,2,"valid");const a=Rw(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){const e=[...n.shape];e[1]=1;const t=Rw(e);n=jy([n,t],1);const r=[...n.shape];r[2]=1;const a=Rw(r);n=jy([n,a],2)}return r=s?jy([r,a],3):r,n=cy(r,n),n=fx(n),n}function G1(e,t,n){return Zg((()=>{let r=db(e,t.filters,n,"same");return r=cy(r,t.batch_norm_offset),ib(r,0,6)}))}function H1(e,t,n){const r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),u=Math.min(r[n][0],r[n][2]),l=Math.min(r[n][1],r[n][3]),c=Math.max(r[n][0],r[n][2]),d=Math.max(r[n][1],r[n][3]),h=(i-a)*(o-s),p=(c-u)*(d-l);if(h<=0||p<=0)return 0;const f=Math.max(a,u),m=Math.max(s,l),g=Math.min(i,c),y=Math.min(o,d),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(h+p-b)}function j1(e,t){return Zg((()=>{const n=e.shape[0];return{boxPredictionEncoding:Vy(u1(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:Vy(u1(e,t.class_predictor),[n,-1,3])}}))}var q1=class{constructor(){let{minConfidence:e,maxResults:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},K1=[new b0(.738768,.874946),new b0(2.42204,2.65704),new b0(4.30971,7.04493),new b0(10.246,4.59428),new b0(12.6868,11.8741)],X1=[new b0(1.603231,2.094468),new b0(6.041143,7.080126),new b0(2.882459,3.518061),new b0(4.266906,5.178857),new b0(9.041765,10.66308)],Y1=[117.001,114.697,97.404],Z1=e=>"number"==typeof e;function J1(e){return Zg((()=>{const t=py(e,Ix(.10000000149011612));return cy(fx(hw(e,t)),t)}))}function Q1(e,t){return Zg((()=>{let n=qw(e,[[0,0],[1,1],[1,1],[0,0]]);return n=db(n,t.conv.filters,[1,1],"valid"),n=hw(n,t.bn.sub),n=py(n,t.bn.truediv),n=cy(n,t.conv.bias),J1(n)}))}function e2(e,t){return Zg((()=>{let n=qw(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Nx(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=cy(n,t.bias),J1(n)}))}var t2=class{constructor(){let{inputSize:e,scoreThreshold:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},n2=class extends a1{constructor(e){super("TinyYolov2"),function(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!Z1(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>Z1(e.x)&&Z1(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(Z1)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=Q1(e,t.conv0);return n=Tw(n,[2,2],[2,2],"same"),n=Q1(n,t.conv1),n=Tw(n,[2,2],[2,2],"same"),n=Q1(n,t.conv2),n=Tw(n,[2,2],[2,2],"same"),n=Q1(n,t.conv3),n=Tw(n,[2,2],[2,2],"same"),n=Q1(n,t.conv4),n=Tw(n,[2,2],[2,2],"same"),n=Q1(n,t.conv5),n=Tw(n,[2,2],[1,1],"same"),n=Q1(n,t.conv6),n=Q1(n,t.conv7),u1(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?J1(u1(e,t.conv0,"valid",!1)):e2(e,t.conv0);return n=Tw(n,[2,2],[2,2],"same"),n=e2(n,t.conv1),n=Tw(n,[2,2],[2,2],"same"),n=e2(n,t.conv2),n=Tw(n,[2,2],[2,2],"same"),n=e2(n,t.conv3),n=Tw(n,[2,2],[2,2],"same"),n=e2(n,t.conv4),n=Tw(n,[2,2],[2,2],"same"),n=e2(n,t.conv5),n=Tw(n,[2,2],[1,1],"same"),n=t.conv6?e2(n,t.conv6):n,n=t.conv7?e2(n,t.conv7):n,u1(n,t.conv8,"valid",!1)}forwardInput(e,t){const{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return Zg((()=>{let r=xm(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?S0(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await Q0(e),t)}async detect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{inputSize:n,scoreThreshold:r}=new t2(t),a=await Q0(e),s=await this.forwardInput(a,n),i=Zg((()=>nv(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},u=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();const l=u.map((e=>e.box)),c=u.map((e=>e.score)),d=u.map((e=>e.classScore)),h=u.map((e=>this.config.classes[e.label])),p=function(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex));const s=[];for(;a.length>0;){const t=a.pop();s.push(t);const i=a,o=[];for(let n=0;n<i.length;n++){const a=i[n],s=e[t],u=e[a];o.push(I0(s,u,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}(l.map((e=>e.rescale(n))),c,this.config.iouThreshold,!0);return p.map((e=>new v0(c[e],d[e],h[e],l[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){const n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=function(e,t){const n=m1(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){const t=r(`${e}/conv`),a=function(e){return{sub:n(`${e}/sub`,1),truediv:n(`${e}/truediv`,1)}}(`${e}/bn`);return{conv:t,bn:a}},extractSeparableConvParams:f1(n)}}(e,n);let i;if(t.withSeparableConvs){const e=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:e>7?s("conv6"):void 0,conv7:e>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return l1(e,n),{params:i,paramMappings:n}}(e,this.config)}extractParams(e){const t=this.config.filterSizes||n2.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){const{extractWeights:a,getRemainingWeights:s}=g1(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:u,extractSeparableConvParams:l}=function(e,t){const n=c1(e,t),r=p1(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){const i=n(r,a,3,`${s}/conv`),o=function(n,r){const a=qx(e(n)),s=qx(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}(a,`${s}/bn`);return{conv:i,bn:o}},extractSeparableConvParams:r}}(a,i);let c;if(t.withSeparableConvs){const[e,a,s,i,u,d,h,p,f]=r;c={conv0:t.isFirstLayerConv2d?o(e,a,3,"conv0"):l(e,a,"conv0"),conv1:l(a,s,"conv1"),conv2:l(s,i,"conv2"),conv3:l(i,u,"conv3"),conv4:l(u,d,"conv4"),conv5:l(d,h,"conv5"),conv6:p?l(h,p,"conv6"):void 0,conv7:f?l(p,f,"conv7"):void 0,conv8:o(f||p||h,5*n,1,"conv8")}}else{const[e,t,a,s,i,l,d,h,p]=r;c={conv0:u(e,t,"conv0"),conv1:u(t,a,"conv1"),conv2:u(a,s,"conv2"),conv3:u(s,i,"conv3"),conv4:u(i,l,"conv4"),conv5:u(l,d,"conv5"),conv6:u(d,h,"conv6"),conv7:u(h,p,"conv7"),conv8:o(p,5*n,1,"conv8")}}if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{params:c,paramMappings:i}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){const{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,u=e.shape[1],l=this.config.anchors.length,[c,d,h]=Zg((()=>{const t=e.reshape([u,u,l,this.boxEncodingSize]);return[t.slice([0,0,0,0],[u,u,l,4]),t.slice([0,0,0,4],[u,u,l,1]),this.withClassScores?Mx(t.slice([0,0,0,5],[u,u,l,this.config.classes.length]),3):Ix(0)]})),p=[],f=await d.array(),m=await c.array();for(let e=0;e<u;e++)for(let t=0;t<u;t++)for(let r=0;r<l;r++){const a=N0(f[e][t][r][0]);if(!n||a>n){const n=(t+N0(m[e][t][r][0]))/u*i,s=(e+N0(m[e][t][r][1]))/u*o,l=Math.exp(m[e][t][r][2])*this.config.anchors[r].x/u*i,c=Math.exp(m[e][t][r][3])*this.config.anchors[r].y/u*o,d=n-l/2,f=s-c/2,g={row:e,col:t,anchor:r},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(h,g):{classScore:1,label:0};p.push({box:new x0(d,f,d+l,f+c),score:a,classScore:a*y,label:b,...g})}}return c.dispose(),d.dispose(),h.dispose(),p}async extractPredictedClass(e,t){const{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}},r2=n2;r2.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var a2=class extends t2{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},s2=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function i2(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:e=>{let{alignedRect:t}=e;return t};const s=e.map((e=>T1(e)?a(e):e.detection)),i=r||(t instanceof Lp?await t1(t,s):await e1(t,s)),o=await n(i);return i.forEach((e=>e instanceof Lp&&e.dispose())),o}var o2=[new b0(1.603231,2.094468),new b0(6.041143,7.080126),new b0(2.882459,3.518061),new b0(4.266906,5.178857),new b0(9.041765,10.66308)],u2=[117.001,114.697,97.404],l2={ssdMobilenetv1:new class extends a1{constructor(){super("SsdMobilenetv1")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return Zg((()=>{const n=xm(e.toBatchTensor(512,!1),"float32"),r=function(e,t){return Zg((()=>{let n,r=G1(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{const a=t+1,s=function(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}(a);r=function(e,t,n){return Zg((()=>{let r=Ib(e,t.filters,n,"same");return r=Jy(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),ib(r,0,6)}))}(r,e.depthwise_conv,s),r=G1(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}(hw(hy(n,127.5),1),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return Zg((()=>{const r=G1(e,n.conv_0,[1,1]),a=G1(r,n.conv_1,[2,2]),s=G1(a,n.conv_2,[1,1]),i=G1(s,n.conv_3,[2,2]),o=G1(i,n.conv_4,[1,1]),u=G1(o,n.conv_5,[2,2]),l=G1(u,n.conv_6,[1,1]),c=G1(l,n.conv_7,[2,2]),d=j1(t,n.box_predictor_0),h=j1(e,n.box_predictor_1),p=j1(a,n.box_predictor_2),f=j1(i,n.box_predictor_3),m=j1(u,n.box_predictor_4),g=j1(c,n.box_predictor_5);return{boxPredictions:jy([d.boxPredictionEncoding,h.boxPredictionEncoding,p.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:jy([d.classPrediction,h.classPrediction,p.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}}))}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return Zg((()=>{const r=e.shape[0];let a=function(e,t){const{sizes:n,centers:r}=function(e){const t=nv(Um(e,[1,0])),n=[hw(t[2],t[0]),hw(t[3],t[1])];return{sizes:n,centers:[cy(t[0],hy(n[0],2)),cy(t[1],hy(n[1],2))]}}(e),a=nv(Um(t,[1,0])),s=hy(py(Mb(hy(a[2],5)),n[0]),2),i=cy(py(hy(a[0],10),n[0]),r[0]),o=hy(py(Mb(hy(a[3],5)),n[1]),2),u=cy(py(hy(a[1],10),n[1]),r[1]);return Um(Vx([hw(i,s),hw(u,o),cy(i,s),cy(u,o)]),[1,0])}(Vy(Lb(n.extra_dim,[r,1,1]),[-1,4]),Vy(e,[-1,4]));a=Vy(a,[r,a.shape[0]/r,4]);const s=qy(Ky(t,[0,0,1],[-1,-1,-1]));let i=Ky(s,[0,0,0],[-1,-1,1]);return i=Vy(i,[r,i.shape[1]]),{boxes:nv(a),scores:nv(i)}}))}(a,s,t.output_layer)}))}async forward(e){return this.forwardInput(await Q0(e))}async locateFaces(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{maxResults:n,minConfidence:r}=new q1(t),a=await Q0(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],u=i[0];for(let e=1;e<s.length;e++)s[e].dispose(),i[e].dispose();const l=Array.from(u.dataSync()),c=function(e,t,n,r,a){const s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),u=[];return o.forEach((t=>{if(u.length>=i)return;const n=t.score;for(let n=u.length-1;n>=0;--n){const r=H1(e,t.boxIndex,u[n]);if(0!==r&&(t.score*=r<=.5?1:0,t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}(o,l,n,0,r),d=a.getReshapedInputDimensions(0),h=a.inputSize,p=h/d.width,f=h/d.height,m=o.arraySync(),g=c.map((e=>{const[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*p));return new k0(l[e],new _0(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),u.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){const n=m1(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){const t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!o0(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);const s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return l1(e,t),{params:s,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=g1(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=function(e,t){function n(n,r,a,s,i){const o=Xx(e(n*r*a*a),[a,a,n,r]),u=qx(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:u}}function r(e,t,r,a){const{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){const i=function(n,r){const a=Xx(e(9*n),[3,3,n,1]),s=qx(e(n)),i=qx(e(n)),o=qx(e(n)),u=qx(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:u}}(n,`${s}/depthwise_conv`);return{depthwise_conv:i,pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}(n,t),i=a(),o=s(),u={extra_dim:Ym(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:u},paramMappings:t}}(e)}},tinyFaceDetector:new class extends r2{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:o2,meanRgb:u2,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new k0(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},tinyYolov2:new class extends r2{constructor(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:X1,meanRgb:Y1}:{anchors:K1,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new k0(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},faceLandmark68Net:new class extends D1{constructor(){super("FaceLandmark68Net",arguments.length>0&&void 0!==arguments[0]?arguments[0]:new x1)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}},faceLandmark68TinyNet:new class extends D1{constructor(){super("FaceLandmark68TinyNet",arguments.length>0&&void 0!==arguments[0]?arguments[0]:new O1)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},faceRecognitionNet:new class extends a1{constructor(){super("FaceRecognitionNet")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return Zg((()=>{let n=B1(S0(xm(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);n=Tw(n,3,2,"valid"),n=U1(n,t.conv32_1),n=U1(n,t.conv32_2),n=U1(n,t.conv32_3),n=V1(n,t.conv64_down),n=U1(n,t.conv64_1),n=U1(n,t.conv64_2),n=U1(n,t.conv64_3),n=V1(n,t.conv128_down),n=U1(n,t.conv128_1),n=U1(n,t.conv128_2),n=V1(n,t.conv256_down),n=U1(n,t.conv256_1),n=U1(n,t.conv256_2),n=V1(n,t.conv256_down_out);const r=n.mean([1,2]);return Bm(r,t.fc)}))}async forward(e){return this.forwardInput(await Q0(e))}async computeFaceDescriptor(e){var t;if(null==(t=null==e?void 0:e.shape)?void 0:t.some((e=>e<=0)))return new Float32Array(128);const n=await Q0(e),r=Zg((()=>nv(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=function(e,t){const n=m1(e,t);function r(e){const t=n(`${e}/conv/filters`,4),r=n(`${e}/conv/bias`,1),a=function(e){return{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}(e);return{conv:{filters:t,bias:r},scale:a}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),u=r("conv64_down"),l=r("conv64_1"),c=r("conv64_2"),d=r("conv64_3"),h=r("conv128_down"),p=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:w}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!i0(w))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${w}`);const x={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:u,conv64_1:l,conv64_2:c,conv64_3:d,conv128_down:h,conv128_1:p,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:w};return l1(e,t),{params:x,paramMappings:t}}(e)}extractParams(e){return function(e){const{extractWeights:t,getRemainingWeights:n}=g1(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=W1(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),u=s(9216,32,3,"conv32_2"),l=s(9216,32,3,"conv32_3"),c=s(36864,64,3,"conv64_down",!0),d=s(36864,64,3,"conv64_1"),h=s(36864,64,3,"conv64_2"),p=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),w=s(589824,256,3,"conv256_2"),x=s(589824,256,3,"conv256_down_out"),v=Zg((()=>Um(Kx(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:u,conv32_3:l,conv64_down:c,conv64_1:d,conv64_2:h,conv64_3:p,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:w,conv256_down_out:x,fc:v},paramMappings:r}}(e)}},faceExpressionNet:new class extends I1{constructor(){super("FaceExpressionNet",arguments.length>0&&void 0!==arguments[0]?arguments[0]:new x1)}forwardInput(e){return Zg((()=>Mx(this.runNet(e))))}async forward(e){return this.forwardInput(await Q0(e))}async predictExpressions(e){const t=await Q0(e),n=await this.forwardInput(t),r=await Promise.all(nv(n).map((async e=>{const t=e.dataSync();return e.dispose(),t})));n.dispose();const a=r.map((e=>new N1(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}},ageGenderNet:new class extends a1{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new M1(2);super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return Zg((()=>{const n=e instanceof J0?this.faceFeatureExtractor.forwardInput(e):e,r=Gy(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:v1(r,t.fc.age).as1D(),gender:v1(r,t.fc.gender)}}))}forwardInput(e){return Zg((()=>{const{age:t,gender:n}=this.runNet(e);return{age:t,gender:Mx(n)}}))}async forward(e){return this.forwardInput(await Q0(e))}async predictAgeAndGender(e){const t=await Q0(e),n=await this.forwardInput(t),r=nv(n.age),a=nv(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async e=>{let{ageTensor:t,genderTensor:n}=e;const r=t.dataSync()[0],a=n.dataSync()[0],s=a>.5,i=s?"male":"female",o=s?a:1-a;return t.dispose(),n.dispose(),{age:r,gender:i,genderProbability:o}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=g1(e),a=d1(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=k1(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=m1(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}const a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return l1(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){const t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}}},c2=class extends s2{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},d2=class extends c2{async run(){const e=await this.parentTask,t=await i2(e,this.input,(async e=>Promise.all(e.map((e=>l2.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>{return r=e,a=t[n],{...r,expressions:a};var r,a}))}withAgeAndGender(){return new f2(this,this.input)}},h2=class extends d2{withAgeAndGender(){return new m2(this,this.input)}withFaceDescriptors(){return new y2(this,this.input)}},p2=class extends s2{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},f2=class extends p2{async run(){const e=await this.parentTask,t=await i2(e,this.input,(async e=>Promise.all(e.map((e=>l2.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{const{age:r,gender:a,genderProbability:s}=t[n];return function(e,t){return{...e,age:t}}(function(e,t,n){return{...e,gender:t,genderProbability:n}}(e,a,s),r)}))}withFaceExpressions(){return new d2(this,this.input)}},m2=class extends f2{withFaceExpressions(){return new h2(this,this.input)}withFaceDescriptors(){return new y2(this,this.input)}},g2=class extends s2{constructor(e,t){super(),this.parentTask=e,this.input=t}},y2=class extends g2{async run(){const e=await this.parentTask;return(await i2(e,this.input,(e=>Promise.all(e.map((e=>l2.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>function(e,t){return{...e,descriptor:t}}(e[n],t)))}withFaceExpressions(){return new h2(this,this.input)}withAgeAndGender(){return new m2(this,this.input)}},b2=class extends s2{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?l2.faceLandmark68TinyNet:l2.faceLandmark68Net}},w2=class extends b2{async run(){const e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof Lp?await t1(this.input,t):await e1(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof Lp&&e.dispose())),e.map(((e,t)=>function(e,t){const{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i={landmarks:r,unshiftedLandmarks:t,alignedRect:new k0(e.detection.score,a.rescale(s.reverse()),s),angle:function(e){const t=(e,t,n,r)=>Math.atan2(r-t,n-e)%Math.PI,n={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return n;const r=e._positions;n.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),n.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);const a=r.reduce(((e,t)=>e<t._y?e:t._y),1/0),s=r.reduce(((e,t)=>e>t._y?e:t._y),-1/0);return n.yaw=Math.PI*(e._imgDims._height/(s-a)/1.4-1),n}(t)};return{...e,...i}}(e,r[t])))}withFaceExpressions(){return new h2(this,this.input)}withAgeAndGender(){return new m2(this,this.input)}withFaceDescriptors(){return new y2(this,this.input)}},x2=class extends s2{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new q1;super(),this.input=e,this.options=t}},v2=class extends x2{async run(){const{input:e,options:t}=this;let n;if(t instanceof a2)n=l2.tinyFaceDetector.locateFaces(e,t);else if(t instanceof q1)n=l2.ssdMobilenetv1.locateFaces(e,t);else{if(!(t instanceof t2))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");n=l2.tinyYolov2.locateFaces(e,t)}return n}runAndExtendWithFaceDetections(){return new Promise(((e,t)=>{this.run().then((t=>e(t.map((e=>function(e,t){return{...e,detection:t}}({},e)))))).catch((e=>t(e)))}))}withFaceLandmarks(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return new w2(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new d2(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new f2(this.runAndExtendWithFaceDetections(),this.input)}};function k2(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new q1;return new v2(e,t)}const I2="face-expressions";let S2,N2=[],E2=!1,_2=!1,T2=!1,C2=!1;onmessage=function(e){switch(e.data.type){case"DETECT_FACE":if(!T2||!_2||E2||C2)return;(async e=>{let t,n,r,{image:a,threshold:s}=e;C2=!0,Zo.engine().startScope();const i=Zo.browser.fromPixels(a);N2.includes(I2)&&(t=await k2(i,new a2).withFaceExpressions(),n=await(async e=>{var t;let{detections:n}=e;return null===(t=n[0])||void 0===t?void 0:t.expressions.asSortedArray()[0].expression})({detections:t})),N2.includes("face-box")&&(t=t?t.map((e=>e.detection)):await k2(i,new a2),r=await(async e=>{let{detections:t,threshold:n}=e;if(!t.length)return null;const r={left:Math.round(100*Math.min(...t.map((e=>e.relativeBox.left)))),right:Math.round(100*Math.max(...t.map((e=>e.relativeBox.right))))};return r.width=Math.round(r.right-r.left),S2&&Math.abs(S2.left-r.left)<n?null:(S2=r,r)})({detections:t,threshold:s})),Zo.engine().endScope(),(r||n)&&self.postMessage({faceBox:r,faceExpression:n}),C2=!1})(e.data);break;case"INIT_WORKER":(async e=>{let{baseUrl:t,detectionTypes:n}=e;if(N2=n,!T2)try{self.useWasm?(function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Vo)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)Wo=e;else{Uo=e;const t=zo.filter((e=>null==Uo[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Go=t}(t),await Zo.setBackend("wasm")):await Zo.setBackend("webgl"),T2=!0}catch(e){return void(E2=!0)}if(!_2)try{await(r=t,l2.tinyFaceDetector.load(r)),n.includes(I2)&&await(e=>l2.faceExpressionNet.load(e))(t),_2=!0}catch(e){return void(E2=!0)}var r})(e.data)}}})()})();
//# sourceMappingURL=face-landmarks-worker.min.js.map